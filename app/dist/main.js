/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.4.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2019-05-01T21:04Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif (  true && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.4.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code, options ) {\n\t\tDOMEval( code, { nonce: options && options.nonce } );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.4\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2019-04-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t(nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\") ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 && rdescend.test( selector ) ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem.namespaceURI,\n\t\tdocElem = (elem.ownerDocument || elem).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( typeof elem.contentDocument !== \"undefined\" ) {\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\treturn result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t// Support: IE 9-11 only\n\t// Also use offsetWidth/offsetHeight for when box sizing is unreliable\n\t// We use getClientRects() to check for hidden/disconnected.\n\t// In those cases, the computed value can be trusted to be border-box\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\t\tval === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url, options ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn jQuery;\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))\n\n//# sourceURL=webpack:///(webpack)/buildin/amd-options.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _living_frontend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./living-frontend */ \"./src/living-frontend.js\");\n/* harmony import */ var _modules_lf_attr_editor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/lf-attr-editor */ \"./src/modules/lf-attr-editor.js\");\n/* harmony import */ var _modules_lf_editing_history__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/lf-editing-history */ \"./src/modules/lf-editing-history.js\");\n/* harmony import */ var _modules_lf_embed_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/lf-embed-selection */ \"./src/modules/lf-embed-selection.js\");\n/* harmony import */ var _modules_lf_html_editing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/lf-html-editing */ \"./src/modules/lf-html-editing.js\");\n/* harmony import */ var _modules_lf_iframed_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/lf-iframed-dialog */ \"./src/modules/lf-iframed-dialog.js\");\n/* harmony import */ var _modules_lf_links_buttons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/lf-links-buttons */ \"./src/modules/lf-links-buttons.js\");\n/* harmony import */ var _modules_lf_paste_image__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/lf-paste-image */ \"./src/modules/lf-paste-image.js\");\n/* harmony import */ var _modules_lf_text_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/lf-text-actions */ \"./src/modules/lf-text-actions.js\");\n\n\n\n\n\n\n\n\n\nvar editors = [];\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/lib/FormContentSource.js":
/*!**************************************!*\
  !*** ./src/lib/FormContentSource.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FormContentSource; });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n/**\n * Represents a SilverStripe based form as being\n * the provider of content. In future, this can be \n * an API instead...\n */\n\nvar FormContentSource =\n/*#__PURE__*/\nfunction () {\n  function FormContentSource() {\n    _classCallCheck(this, FormContentSource);\n\n    _defineProperty(this, \"TOOLBAR_FORM\", '#Form_LivingForm');\n\n    _defineProperty(this, \"PROPS_HOLDER\", 'livingdocs_EditorField_Toolbar_options');\n\n    _defineProperty(this, \"DOC_HOLDER\", '.livingdocs-editor');\n\n    _defineProperty(this, \"CONTENT_HOLDER\", '#page-structure');\n  }\n\n  _createClass(FormContentSource, [{\n    key: \"init\",\n    value: function init() {\n      jquery__WEBPACK_IMPORTED_MODULE_0__(document).on('submit', this.TOOLBAR_FORM, function () {\n        var _this = jquery__WEBPACK_IMPORTED_MODULE_0__(this);\n\n        _this.removeAttr('data-changed');\n\n        jquery__WEBPACK_IMPORTED_MODULE_0__(this).ajaxSubmit(function (response) {\n          _this.find('button.action').each(function () {\n            jquery__WEBPACK_IMPORTED_MODULE_0__(this).prop('disabled', false);\n          });\n        });\n\n        _this.find('button.action').each(function () {\n          jquery__WEBPACK_IMPORTED_MODULE_0__(this).prop('disabled', true);\n        });\n\n        return false;\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0__(window).bind('beforeunload', function () {\n        if (jquery__WEBPACK_IMPORTED_MODULE_0__(this.TOOLBAR_FORM).attr('data-changed')) {\n          return \"You may have unsaved changes, sure?\";\n        }\n      });\n    }\n  }, {\n    key: \"getPageStructure\",\n    value: function getPageStructure() {\n      var structure = jquery__WEBPACK_IMPORTED_MODULE_0__('#page-structure').length > 0 ? jquery__WEBPACK_IMPORTED_MODULE_0__('#page-structure').data('structure') : null;\n\n      if (structure) {} else {\n        alert(\"No structure found\");\n        structure = dummyStructure;\n      }\n\n      return structure;\n    }\n  }, {\n    key: \"updatePageContent\",\n    value: function updatePageContent(docStructure, docHtml, realchange) {\n      jquery__WEBPACK_IMPORTED_MODULE_0__(this.TOOLBAR_FORM).find('[name=PageStructure]').val(docStructure);\n      jquery__WEBPACK_IMPORTED_MODULE_0__(this.TOOLBAR_FORM).find('[name=Content]').val(docHtml);\n\n      if (realchange) {\n        jquery__WEBPACK_IMPORTED_MODULE_0__(this.TOOLBAR_FORM).attr('data-changed', 1);\n        jquery__WEBPACK_IMPORTED_MODULE_0__(this.TOOLBAR_FORM).find('[name=action_publish]').prop('disabled', true);\n      }\n    }\n  }]);\n\n  return FormContentSource;\n}();\n\n\nvar dummyStructure = {\n  \"data\": {\n    \"content\": [{\n      \"id\": \"doc-1c8e6umt10\",\n      \"identifier\": \"bootstrap3.section\",\n      \"styles\": {\n        \"section-class\": \"first container\"\n      },\n      \"containers\": {\n        \"section\": [{\n          \"id\": \"doc-1c8e6umt11\",\n          \"identifier\": \"bootstrap3.row\",\n          \"styles\": {\n            \"text-styles\": \"text-center\"\n          },\n          \"containers\": {\n            \"row\": [{\n              \"id\": \"doc-1c8e6umt12\",\n              \"identifier\": \"bootstrap3.column\",\n              \"containers\": {\n                \"column\": [{\n                  \"id\": \"doc-1c8e6umt30\",\n                  \"identifier\": \"bootstrap3.h1\",\n                  \"content\": {\n                    \"title\": \"[livingpage_show_field field=Title]\"\n                  }\n                }]\n              }\n            }]\n          }\n        }]\n      }\n    }, {\n      \"id\": \"doc-1c8e6umt31\",\n      \"identifier\": \"bootstrap3.section\",\n      \"styles\": {\n        \"section-class\": \"container\"\n      },\n      \"containers\": {\n        \"section\": [{\n          \"id\": \"doc-1c8e6umt32\",\n          \"identifier\": \"bootstrap3.row\",\n          \"styles\": {\n            \"text-styles\": \"\"\n          },\n          \"containers\": {\n            \"row\": [{\n              \"id\": \"doc-1c8e6umt33\",\n              \"identifier\": \"bootstrap3.column\",\n              \"containers\": {\n                \"column\": [{\n                  \"id\": \"doc-1c8e6umt34\",\n                  \"identifier\": \"bootstrap3.p\",\n                  \"content\": {\n                    \"text\": \"<a href=\\\"[file_link,id=124]\\\" title=\\\"Strategy Update August 2018\\\">Current version (to December 2018) is available via PDF</a>.&nbsp;\"\n                  }\n                }, {\n                  \"id\": \"doc-1c8e7eaol0\",\n                  \"identifier\": \"bootstrap3.p\",\n                  \"content\": {\n                    \"text\": \"Previous versions will appear below.&nbsp;\"\n                  }\n                }, {\n                  \"id\": \"doc-1ckc2s4t40\",\n                  \"identifier\": \"bootstrap3.p\",\n                  \"content\": {\n                    \"text\": \"<a href=\\\"[file_link,id=90]\\\" title=\\\"Strategy Update March 2018\\\">Strategy Update&nbsp; - March 2018</a>\"\n                  }\n                }]\n              }\n            }]\n          }\n        }]\n      }\n    }],\n    \"design\": {\n      \"name\": \"bootstrap3\",\n      \"version\": \"0.0.1\"\n    }\n  }\n};\n\n//# sourceURL=webpack:///./src/lib/FormContentSource.js?");

/***/ }),

/***/ "./src/lib/LivingDocState.js":
/*!***********************************!*\
  !*** ./src/lib/LivingDocState.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar LivingDocState = {\n  livingdoc: null,\n  changeStack: [],\n  activeComponent: null,\n  trackChanges: true,\n  historyLength: 20,\n  formIdentifier: null,\n  selectedDesign: null,\n  activeDesign: null,\n  // \n  contentSource: null,\n  // references the global 'doc' object that livingdocs exposes\n  docApi: null,\n  loadLivingdoc: function loadLivingdoc(docApi, selectedDesign, structure, contentSource) {\n    this.docApi = docApi;\n    this.contentSource = contentSource;\n    this.selectedDesign = selectedDesign;\n    this.docApi.design.load(this.selectedDesign); // this is the active instance of the design being used. \n\n    this.activeDesign = this.docApi.design.designs[this.selectedDesign.name];\n    this.docApi.config({\n      livingdocsCssFile: \"frontend-livingdoc/javascript/livingdocs/css/livingdocs.css\",\n      editable: {\n        browserSpellcheck: true,\n        changeDelay: 50\n      }\n    });\n    this.livingdoc = this.docApi.new(structure);\n    this.initialiseState();\n  },\n  initialiseState: function initialiseState() {\n    this.activeComponent = null;\n    this.changeStack = [];\n    this.notifyDocUpdate();\n  },\n  focusOn: function focusOn(component) {\n    this.activeComponent = component;\n  },\n  blur: function blur() {\n    // not a true blur, we don't trigger on all blur occasions otherwise we lose context\n    this.activeComponent = null;\n  },\n  saveState: function saveState(currentState) {\n    if (this.trackChanges) {\n      var actionId = this.activeComponent ? this.activeComponent.model.id : null; // if the action happened to the currently active component, we remove any previous \n      // actions to the same one\n\n      if (this.changeStack.length > 0 && actionId && this.changeStack[this.changeStack.length - 1].cid === actionId) {\n        this.changeStack.pop();\n      }\n\n      this.changeStack.push({\n        time: new Date(),\n        cid: actionId,\n        state: currentState\n      });\n\n      if (this.changeStack.length > this.historyLength) {\n        this.changeStack.shift();\n      }\n    }\n  },\n  loadState: function loadState(stateIndex) {\n    if (this.changeStack[stateIndex]) {\n      var dataSet = JSON.parse(this.changeStack[stateIndex].state);\n      this.trackChanges = false;\n\n      while (this.livingdoc.componentTree.root.first) {\n        this.livingdoc.componentTree.root.first.remove();\n      }\n\n      this.trackChanges = true;\n      this.livingdoc.componentTree.addDataWithAnimation(dataSet);\n    }\n  },\n  notifyDocUpdate: function notifyDocUpdate(realchange) {\n    var docStructure = this.livingdoc.toJson();\n    this.contentSource.updatePageContent(docStructure, this.livingdoc.toHtml(), realchange);\n    this.saveState(docStructure);\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (LivingDocState);\n\n//# sourceURL=webpack:///./src/lib/LivingDocState.js?");

/***/ }),

/***/ "./src/living-frontend.js":
/*!********************************!*\
  !*** ./src/living-frontend.js ***!
  \********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _livingdocs_editable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./livingdocs/editable */ \"./src/livingdocs/editable.js\");\n/* harmony import */ var _livingdocs_livingdocs_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./livingdocs/livingdocs-engine */ \"./src/livingdocs/livingdocs-engine.js\");\n/* harmony import */ var _modules_lf_editor_content_bridge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/lf-editor-content-bridge */ \"./src/modules/lf-editor-content-bridge.js\");\n/* harmony import */ var _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/LivingDocState */ \"./src/lib/LivingDocState.js\");\n/* harmony import */ var _lib_FormContentSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/FormContentSource */ \"./src/lib/FormContentSource.js\");\n\n\n\n\n\n\n\n(function ($) {\n  if (!window.$) {\n    window.$ = $;\n  }\n\n  var PING_TIME = 300;\n  var MAX_TIME = 86400;\n  var pingErrors = 0;\n  var editingTime = 0;\n  var pingterval = setInterval(function () {\n    if (editingTime > MAX_TIME) {\n      clearInterval(pingterval);\n      return;\n    }\n\n    $.get('Security/ping').success(function () {\n      pingErrors = 0;\n    }).error(function () {\n      pingErrors++;\n\n      if (pingErrors > 5) {\n        alert(\"Your session may have expired, please try logging in again in a separate tab\");\n        clearInterval(pingterval);\n      }\n    });\n    editingTime += PING_TIME;\n  }, PING_TIME * 1000);\n  var livingdoc;\n  var DOC_HOLDER = '.livingdocs-editor';\n  var TOOLBAR_FORM = '#Form_LivingForm';\n  var PROPS_HOLDER = 'livingdocs_EditorField_Toolbar_options';\n  var TABLE_ROW_COMPONENT = 'tablerow';\n  var TABLE_CELL_COMPONENT = 'tablecell';\n  var HEADER_CELL_COMPONENT = 'headercell'; // ContentBridge.init();\n\n  $(document).on('click', function (e) {\n    if ($(e.target).parents('.livingdocs-editor').length <= 0 && $(e.target).parents('.livingdocs-toolbar').length <= 0) {\n      // remove the properties editing\n      $('.' + PROPS_HOLDER).remove();\n    }\n  });\n  $(document).on('mousedown', '#clicker', function (e) {\n    e.preventDefault();\n  });\n  $(document).on('click', '#clicker', function () {\n    _modules_lf_editor_content_bridge__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setLinkObject({\n      href: 'link/href',\n      target: '',\n      title: 'linktitle'\n    });\n  }); // re-structures the form to ensure ajax submits pass through the \n  // triggered action\n\n  $(document).on('click', 'form' + TOOLBAR_FORM + ' > .Actions .action', function (e) {\n    // catuch the \"live\" click and redirect instead\n    if ($(this).attr('name') == 'action_live') {\n      e.preventDefault();\n      location.href = location.href + '?edit=stop&stage=Live';\n      return false;\n    }\n\n    if ($(this).hasClass('link-action')) {\n      e.preventDefault();\n      location.href = $(this).attr('data-link');\n      return false;\n    }\n\n    var parentForm = $(this).parents('form');\n    parentForm.find('input.hidden-action').remove();\n    $('<input class=\"hidden-action\">').attr({\n      'type': 'hidden',\n      'name': $(this).attr('name'),\n      'value': '1'\n    }).appendTo(parentForm);\n  });\n  $(function () {\n    var contentSource = new _lib_FormContentSource__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n    contentSource.init();\n    var structure = contentSource.getPageStructure(); // relies on a design file having been loaded earlier\n    // TODO - abstract this in _some_ manner. TBA\n\n    if (!window.design) {\n      alert(\"No design loaded\");\n      return;\n    }\n\n    var selectedDesignName = structure.data.design.name;\n    var selectedDesign = design[selectedDesignName];\n\n    if (!selectedDesign) {\n      alert(\"Selected design \" + selectedDesignName + \" couldn't be found\");\n      return;\n    } // provides 3rd party hooks\n\n\n    $(document).trigger('updateLivingdocsDesign', selectedDesign); // hard coded against the design for now??\n    // selectedDesign.assets.basePath = \"frontend-livingdoc/javascript/livingdocs/\";\n    // doc.design.load(selectedDesign);\n    // doc.config({\n    //     livingdocsCssFile: \"frontend-livingdoc/javascript/livingdocs/css/livingdocs.css\",\n    //     editable: {\n    //         browserSpellcheck: true,\n    //         changeDelay: 50\n    //     }\n    //     // ,\n    //     // // really not sure if this matters here, but we'll run with it for now. \n    //     // directives: {\n    //     //     dataobject: {\n    //     //         attr: 'doc-dataobject',\n    //     //         renderedAttr: 'calculated in augment_config',\n    //     //         overwritesContent: true\n    //     //     }\n    //     // }\n    // });\n    // livingdoc = doc.new(structure);\n\n    _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].loadLivingdoc(doc, selectedDesign, structure, contentSource); // bind it into the bridge\n    // ContentBridge.setLivingDoc(livingdoc);\n\n    _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].notifyDocUpdate(); // var aLivingDocState.activeDesign = ;\n\n    var ready = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.createView({\n      interactive: true,\n      iframe: false,\n      host: DOC_HOLDER,\n      wrapper: _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeDesign.wrapper\n    });\n    ready.then(function () {\n      // captures model changes that need updating\n      _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.model.changed.add(function () {\n        _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].notifyDocUpdate(true);\n      });\n      var $pageOptions = $('.livingdocs-page-options');\n      var $components = $('.livingdocs-components');\n      var $componentsList = $components.find('ul');\n      var $properties = $('.livingdocs-item-properties');\n      var componentGroupMap = {};\n\n      var addGroup = function addGroup(label, num) {\n        var $group = $('<li>');\n        $group.append('<input type=\"checkbox\" checked>');\n        $group.append('<i>');\n        $group.append('<h2>' + label + '</h2>');\n        $group.append('<div class=\"group-component-holder\" id=\"gch-' + num + '\"></div>');\n        $componentsList.append($group);\n      }; // use selectedDesign - the template, not active components at this point, as it is simpler to \n      // iterate\n\n\n      for (var i = 0; i < selectedDesign.groups.length; i++) {\n        addGroup(selectedDesign.groups[i].label, i);\n\n        for (var j in selectedDesign.groups[i].components) {\n          componentGroupMap[selectedDesign.groups[i].components[j]] = 'gch-' + i;\n        }\n      }\n\n      addGroup('Misc', 'misc'); // Adds in all the components in their appropriate grouping \n\n      for (var i = 0; i < _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeDesign.components.length; i++) {\n        var template = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeDesign.components[i];\n        var $entry = $('<div class=\"toolbar-entry\">');\n        $entry.html(template.label);\n        var groupId = componentGroupMap[template.name];\n\n        if (!groupId) {\n          groupId = 'gch-misc';\n        }\n\n        var $holder = $('#' + groupId);\n        $holder.append($entry);\n        draggableComponent(doc, template.name, $entry);\n      } // Binds the drag behaviour when a menu item is dragged\n\n\n      function draggableComponent(doc, name, $elem) {\n        $elem.on('mousedown', function (event) {\n          var newComponent = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.createComponent(name);\n          doc.startDrag({\n            componentModel: newComponent,\n            event: event,\n            config: {\n              preventDefault: true,\n              direct: true\n            }\n          });\n        });\n      } // add in the structured components that can be chosen to have fully created\n\n\n      if (selectedDesign.structures && selectedDesign.structures.length > 0) {\n        var optionList = $('<select class=\"with-button\">').attr('id', 'component-structures');\n        optionList.append('<option>-- structures --</option>');\n\n        for (var i in selectedDesign.structures) {\n          var item = selectedDesign.structures[i];\n          optionList.append($('<option value=\"\">').text(item.label).attr('value', item.label));\n        }\n\n        var structureFields = $('<div class=\"structure-options\">');\n        structureFields.append($('<label for=\"component-structures\">Select a pre-defined set of components, or add individual components below</label>'));\n        structureFields.append(optionList);\n        var structureButton = $('<button>Add</button>');\n        structureFields.append(structureButton);\n        $components.prepend(structureFields);\n        structureButton.click(function (e) {\n          var selected = optionList.val();\n\n          for (var i in selectedDesign.structures) {\n            var item = selectedDesign.structures[i];\n\n            if (item.label === selected) {\n              var container = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeComponent ? _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeComponent.model.parentContainer : _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.root;\n              createComponentList(item.components, container);\n              break;\n            }\n          }\n\n          optionList.val('');\n        });\n      } // when adding a component, see if it has a set of components that should\n      // be immediately created. Useful for something like a table cell that should always\n      // have a paragraph in it when added\n\n\n      _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.componentAdded.add(function (newComponent) {\n        var toCreate = selectedDesign.prefilledComponents[newComponent.componentName];\n\n        if (toCreate && toCreate.components) {\n          for (var containerName in toCreate.components) {\n            createComponentList(toCreate.components[containerName], newComponent, containerName);\n          }\n        }\n      });\n      _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.interactiveView.page.embedItemClick.add(function (component, directiveName, event) {});\n      _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.interactiveView.page.focus.componentFocus.add(function (component) {\n        $(\".\" + PROPS_HOLDER).remove();\n        $(\".livingdocs_EditorField_Toolbar_textopts\").remove();\n        var options = $(\"<div>\").addClass(PROPS_HOLDER);\n        _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].focusOn(component);\n        options.append(\"<h4>\" + component.model.componentName + \" properties</h4>\");\n        var closer = $('<button class=\"close properties-closer\" title=\"Close properties\"><span class=\"icon\"></span>&times;</button>').on('click', function (e) {\n          e.preventDefault();\n          _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].blur();\n          $(\".\" + PROPS_HOLDER).remove();\n          return false;\n        }).appendTo(options);\n\n        for (var s_id in component.model.template.styles) {\n          var curr_style = component.model.template.styles[s_id];\n          var el = null;\n          var lbl = $('<label>').text(curr_style.label);\n          var currentVal = component.model.getStyle(s_id);\n\n          switch (curr_style.type) {\n            case \"select\":\n              el = $(\"<select>\");\n              var multi = false;\n\n              for (var op_id in curr_style.options) {\n                var curr_op = curr_style.options[op_id]; // todo(Marcus) - this is such a hack\n\n                if (curr_op.caption.toLowerCase() == 'multiple') {\n                  multi = true;\n                  continue;\n                }\n\n                el.append($(\"<option>\").val(curr_op.value).text(curr_op.caption));\n              }\n\n              if (multi) {\n                el.attr('size', 3).prop('multiple', true);\n\n                if (currentVal) {\n                  currentVal = currentVal.split(' ');\n                }\n              }\n\n              el.val(currentVal);\n              el.on(\"change\", function (styleId) {\n                return function () {\n                  var selection = $(this).val();\n\n                  if (selection && typeof selection !== 'string' && selection.length) {\n                    selection = selection.join(' ');\n                  }\n\n                  component.model.setStyle(styleId, selection);\n                };\n              }(s_id));\n              break;\n\n            case \"text\":\n              el = $(\"<input>\").attr({\n                type: 'text'\n              }).val(currentVal);\n              el.on(\"change\", function (styleName) {\n                return function () {\n                  component.model.setStyle(styleName, el.val());\n                }; //                                curr_style.value = el.val();\n              }(curr_style.name));\n              break;\n\n            case \"option\":\n              el = $(\"<input>\").attr({\n                type: 'checkbox'\n              });\n              el.on(\"change\", function (styleName, styleValue) {\n                return function () {\n                  if ($(this).prop('checked')) {\n                    component.model.setStyle(styleName, styleValue);\n                  } else {\n                    component.model.setStyle(styleName, \"\");\n                  }\n                };\n              }(curr_style.name, curr_style.value));\n\n              if (curr_style.value == currentVal) {\n                el.prop('checked', true);\n              }\n\n              break;\n\n            default:\n              break;\n          }\n\n          if (el) {\n            $('<div>').append(el).appendTo(lbl);\n            options.append('<div>').append(lbl);\n          }\n        }\n\n        if (component.model.directives.image && component.model.directives.image.length) {\n          for (var directive_id in component.model.directives.image) {\n            var curr_img = component.model.directives.image[directive_id];\n            var $image_button = $(\"<button>\").text(\"Select \\\"\" + curr_img.name + '\"').on(\"click\", function () {\n              selectImage(function (attrs) {\n                // ComponentView.prototype.set\n                component.model.setDirectiveAttribute(curr_img.name, 'width', attrs.width);\n                component.model.setDirectiveAttribute(curr_img.name, 'height', attrs.height);\n                component.model.setContent(curr_img.name, {\n                  url: attrs.src\n                });\n              });\n            });\n            options.append($image_button);\n          }\n        }\n\n        if (component.model.directives.link && component.model.directives.link.length) {\n          for (var linkIndex in component.model.directives.link) {\n            var _thisLink = component.model.directives.link[linkIndex];\n            var $link_button = $(\"<button>\").text('Select \"' + _thisLink.name + '\"').on(\"click\", function () {\n              selectLink(function (attrs) {\n                // ComponentView.prototype.set\n                component.model.setContent(_thisLink.name, attrs.href);\n              });\n            });\n            options.append($link_button);\n          }\n        }\n\n        if (component.model.componentName === 'table') {\n          // add row and add column\n          var tableNode = component.$html[0];\n\n          if (tableNode) {\n            _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].showButtonBar([{\n              label: 'Add row',\n              click: function click() {\n                alert(\"NEW\");\n                var currentRow = component.$html.find('tr:first');\n                var numCells = 0;\n\n                if (currentRow.length) {\n                  numCells = currentRow.find('th').length ? currentRow.find('th').length : currentRow.find('td').length;\n                }\n\n                var newComponent = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.getComponent(TABLE_ROW_COMPONENT);\n                component.model.append('tablebody', newComponent); //create cells\n\n                for (var i = 0; i < numCells; i++) {\n                  var newCell = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.getComponent(TABLE_CELL_COMPONENT);\n                  newComponent.append('rowcells', newCell);\n                  var newP = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.getComponent(\"p\");\n                  newCell.append(\"cellitems\", newP);\n                }\n              }\n            }, {\n              label: 'Add col',\n              click: function click() {\n                var headerRow = component.model.containers.tablehead.first;\n                addCellToRows(headerRow, HEADER_CELL_COMPONENT);\n                var bodyRow = component.model.containers.tablebody.first;\n                addCellToRows(bodyRow, TABLE_CELL_COMPONENT);\n              }\n            }], tableNode);\n          }\n        }\n\n        var $delete_button = $(\"<button class='alert alert-danger'>\").text(\"Remove\").on(\"click\", function () {\n          if (confirm(\"Remove this?\")) {\n            component.model.remove();\n            $(\".\" + PROPS_HOLDER).remove();\n          }\n        });\n        var $dupe_button = $(\"<button class='alert alert-warning'>\").text(\"Duplicate\").on(\"click\", function () {\n          var tmpTree = new doc.ComponentTree({\n            design: _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.design\n          }); // need to swap out 'next' for the moment otherwise the serialize walker\n          // will do _all_ siblings. \n\n          var oldNext = component.model.next;\n          component.model.next = null;\n          var jsonRep = tmpTree.serialize(component.model, true);\n          component.model.next = oldNext;\n          createComponentList(jsonRep.content, component.model.parentContainer);\n        });\n        $('<div class=\"Actions component-actions\">').appendTo(options).append($dupe_button).append($delete_button);\n        $properties.html(options);\n\n        if ($.fn.drags) {\n          $('.livingdocs-item-properties').drags({\n            handle: \"h4\"\n          });\n        }\n      });\n      $(document).trigger('livingfrontend.updateLivingDoc', [livingdoc]);\n    });\n    /**\n     * Show a list of buttons in a toolbar. The button list should be\n     * [\n     *     { label: 'Label', title: 'tooltop', click: function () {} }\n     * ]\n     * \n     * @param an array of button objects\n     * @param an object with a .left and .top  property that defines where to show the bar\n     * @returns void\n     */\n\n    _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].showButtonBar = function (buttons, loc) {\n      $(\".livingdocs_EditorField_Toolbar_textopts\").remove();\n      var outer_el = $(\"<div>\").addClass(\"livingdocs_EditorField_Toolbar_textopts\");\n\n      for (var i = 0; i < buttons.length; i++) {\n        var b = buttons[i];\n        var buttonEl = $('<button>').html(b.label);\n\n        if (b.title) {\n          buttonEl.attr('title', b.title);\n        }\n\n        buttonEl.on('mousedown', function (theButton) {\n          return function (e) {\n            e.preventDefault();\n            theButton.click();\n          };\n        }(b));\n        outer_el.append(buttonEl);\n      }\n\n      var appendTo = $('body');\n\n      if (!loc.left) {\n        // we have a node instead\n        appendTo = $(loc).parent();\n        var newloc = {\n          top: loc.offsetTop + 20,\n          left: loc.offsetLeft + 20\n        };\n        loc = newloc;\n      }\n\n      outer_el.css({\n        position: \"absolute\",\n        left: loc.left,\n        top: loc.top - 40,\n        background: \"transparent\",\n        \"z-index\": 4000\n      });\n      appendTo.append(outer_el);\n    };\n\n    _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].showDialog = function () {\n      var popup;\n      var dialog = $('#lf-dialog');\n\n      if (!dialog.length) {\n        dialog = $('<div class=\"lf-overlay\" id=\"lf-dialog\">');\n        popup = $('<div class=\"lf-popup\">').appendTo(dialog);\n        popup.append('<a class=\"lf-dialog-close\" href=\"#\">&times;</a>');\n        popup.append('<div class=\"lf-dialog-content\">');\n        $('body').append(dialog);\n      }\n\n      popup = dialog.find('.lf-popup');\n      popup.empty();\n      $(dialog).addClass('active-dialog');\n      return popup;\n    };\n\n    _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].closeDialog = function () {\n      var dialog = $('#lf-dialog');\n\n      if (dialog.length) {\n        dialog.removeClass('active-dialog');\n        dialog.find('lf-dialog-content').html('');\n      }\n    };\n\n    $(document).on('click', 'a.lf-dialog-close', function (e) {\n      _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].closeDialog();\n      return false;\n    });\n    /**\n     * creates components, inside a given parent.\n     * \n     * @param array components\n     * @param ComponentModel parent\n     * @param string containerName\n     * @returns void\n     */\n\n    function createComponentList(components, parent, containerName) {\n      if (!parent) {\n        parent = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.root;\n      }\n\n      var newComponents = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.componentsFromList(components, _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activeDesign);\n\n      if (parent) {\n        for (var i in newComponents) {\n          if (containerName) {\n            parent.append(containerName, newComponents[i]);\n          } else {\n            parent.append(newComponents[i]);\n          }\n        }\n      } //            for (var i in newComponents) {\n      //                if (newComponents[i]) {\n      //                    parent.append(newComponents[i]);\n      //                }\n      //            }\n\n    }\n\n    ;\n    /**\n     * Iteratively add cells to all the rows in a given table container\n     * \n     * @param {type} firstRow\n     * @param {type} cellType\n     * @returns {.firstRow.next.next}\n     */\n\n    function addCellToRows(firstRow, cellType) {\n      if (firstRow) {\n        while (firstRow && firstRow.componentName == TABLE_ROW_COMPONENT) {\n          var newCell = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.getComponent(cellType);\n          firstRow.append('rowcells', newCell);\n          firstRow = firstRow.next;\n          var newP = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_4__[\"default\"].livingdoc.componentTree.getComponent(\"p\");\n          newCell.append(\"cellitems\", newP);\n        }\n      }\n\n      return firstRow;\n    }\n\n    function selectLink(callback) {\n      _modules_lf_editor_content_bridge__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setCallback(callback);\n      _modules_lf_editor_content_bridge__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showDialog('link');\n    }\n\n    function selectImage(callback) {\n      _modules_lf_editor_content_bridge__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setCallback(function (content) {\n        var attrs = {};\n        var node = $(content)[0];\n\n        if (!node) {\n          return;\n        }\n\n        if (node.nodeName !== 'IMG') {\n          alert(\"Image not selected\");\n          return;\n        }\n\n        var nodeAttrs = node.attributes;\n\n        for (var i = 0; i < nodeAttrs.length; i++) {\n          attrs[nodeAttrs[i].name] = nodeAttrs[i].value;\n        }\n\n        callback(attrs);\n      });\n      _modules_lf_editor_content_bridge__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showDialog('image');\n    }\n  });\n\n  (function ($) {\n    $.fn.drags = function (opt) {\n      opt = $.extend({\n        handle: \"\",\n        cursor: \"move\"\n      }, opt);\n      var $el = this;\n\n      if (opt.handle === \"\") {\n        var $handle = this;\n      } else {\n        var $handle = this.find(opt.handle);\n      }\n\n      return $handle.css('cursor', opt.cursor).on(\"mousedown\", function (e) {\n        var $drag = $el.addClass('__draggable');\n\n        if (opt.handle === \"\") {} else {\n          $handle.addClass('active-handle');\n        }\n\n        var z_idx = $drag.css('z-index'),\n            drg_h = $drag.outerHeight(),\n            drg_w = $drag.outerWidth(),\n            pos_y = $drag.offset().top + drg_h - e.pageY,\n            pos_x = $drag.offset().left + drg_w - e.pageX;\n        $drag.css({\n          'z-index': '3000'\n        }).parents().on(\"mousemove\", function (e) {\n          $('.__draggable').css('right', 'auto');\n          $('.__draggable').offset({\n            top: e.pageY + pos_y - drg_h,\n            left: e.pageX + pos_x - drg_w\n          }).on(\"mouseup\", function () {\n            $(this).css({\n              'z-index': z_idx\n            });\n            $handle.removeClass('__draggable');\n          });\n        });\n        e.preventDefault(); // disable selection\n      }).on(\"mouseup\", function () {\n        $el.removeClass('__draggable');\n\n        if (opt.handle === \"\") {} else {\n          $handle.removeClass('active-handle');\n        }\n      });\n    };\n  })(jquery__WEBPACK_IMPORTED_MODULE_0__);\n})(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n//# sourceURL=webpack:///./src/living-frontend.js?");

/***/ }),

/***/ "./src/livingdocs/editable.js":
/*!************************************!*\
  !*** ./src/livingdocs/editable.js ***!
  \************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n/**\n * @license Rangy, a cross-browser JavaScript range and selection library\n * http://code.google.com/p/rangy/\n *\n * Copyright 2012, Tim Down\n * Licensed under the MIT license.\n * Version: 1.2.3\n * Build date: 26 February 2012\n */\n\nwindow['rangy'] = function () {\n  var OBJECT = \"object\",\n      FUNCTION = \"function\",\n      UNDEFINED = \"undefined\";\n  var domRangeProperties = [\"startContainer\", \"startOffset\", \"endContainer\", \"endOffset\", \"collapsed\", \"commonAncestorContainer\", \"START_TO_START\", \"START_TO_END\", \"END_TO_START\", \"END_TO_END\"];\n  var domRangeMethods = [\"setStart\", \"setStartBefore\", \"setStartAfter\", \"setEnd\", \"setEndBefore\", \"setEndAfter\", \"collapse\", \"selectNode\", \"selectNodeContents\", \"compareBoundaryPoints\", \"deleteContents\", \"extractContents\", \"cloneContents\", \"insertNode\", \"surroundContents\", \"cloneRange\", \"toString\", \"detach\"];\n  var textRangeProperties = [\"boundingHeight\", \"boundingLeft\", \"boundingTop\", \"boundingWidth\", \"htmlText\", \"text\"]; // Subset of TextRange's full set of methods that we're interested in\n\n  var textRangeMethods = [\"collapse\", \"compareEndPoints\", \"duplicate\", \"getBookmark\", \"moveToBookmark\", \"moveToElementText\", \"parentElement\", \"pasteHTML\", \"select\", \"setEndPoint\", \"getBoundingClientRect\"];\n  /*----------------------------------------------------------------------------------------------------------------*/\n  // Trio of functions taken from Peter Michaux's article:\n  // http://peter.michaux.ca/articles/feature-detection-state-of-the-art-browser-scripting\n\n  function isHostMethod(o, p) {\n    var t = _typeof(o[p]);\n\n    return t == FUNCTION || !!(t == OBJECT && o[p]) || t == \"unknown\";\n  }\n\n  function isHostObject(o, p) {\n    return !!(_typeof(o[p]) == OBJECT && o[p]);\n  }\n\n  function isHostProperty(o, p) {\n    return _typeof(o[p]) != UNDEFINED;\n  } // Creates a convenience function to save verbose repeated calls to tests functions\n\n\n  function createMultiplePropertyTest(testFunc) {\n    return function (o, props) {\n      var i = props.length;\n\n      while (i--) {\n        if (!testFunc(o, props[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  } // Next trio of functions are a convenience to save verbose repeated calls to previous two functions\n\n\n  var areHostMethods = createMultiplePropertyTest(isHostMethod);\n  var areHostObjects = createMultiplePropertyTest(isHostObject);\n  var areHostProperties = createMultiplePropertyTest(isHostProperty);\n\n  function isTextRange(range) {\n    return range && areHostMethods(range, textRangeMethods) && areHostProperties(range, textRangeProperties);\n  }\n\n  var api = {\n    version: \"1.2.3\",\n    initialized: false,\n    supported: true,\n    util: {\n      isHostMethod: isHostMethod,\n      isHostObject: isHostObject,\n      isHostProperty: isHostProperty,\n      areHostMethods: areHostMethods,\n      areHostObjects: areHostObjects,\n      areHostProperties: areHostProperties,\n      isTextRange: isTextRange\n    },\n    features: {},\n    modules: {},\n    config: {\n      alertOnWarn: false,\n      preferTextRange: false\n    }\n  };\n\n  function fail(reason) {\n    window.alert(\"Rangy not supported in your browser. Reason: \" + reason);\n    api.initialized = true;\n    api.supported = false;\n  }\n\n  api.fail = fail;\n\n  function warn(msg) {\n    var warningMessage = \"Rangy warning: \" + msg;\n\n    if (api.config.alertOnWarn) {\n      window.alert(warningMessage);\n    } else if (_typeof(window.console) != UNDEFINED && _typeof(window.console.log) != UNDEFINED) {\n      window.console.log(warningMessage);\n    }\n  }\n\n  api.warn = warn;\n\n  if ({}.hasOwnProperty) {\n    api.util.extend = function (o, props) {\n      for (var i in props) {\n        if (props.hasOwnProperty(i)) {\n          o[i] = props[i];\n        }\n      }\n    };\n  } else {\n    fail(\"hasOwnProperty not supported\");\n  }\n\n  var initListeners = [];\n  var moduleInitializers = []; // Initialization\n\n  function init() {\n    if (api.initialized) {\n      return;\n    }\n\n    var testRange;\n    var implementsDomRange = false,\n        implementsTextRange = false; // First, perform basic feature tests\n\n    if (isHostMethod(document, \"createRange\")) {\n      testRange = document.createRange();\n\n      if (areHostMethods(testRange, domRangeMethods) && areHostProperties(testRange, domRangeProperties)) {\n        implementsDomRange = true;\n      }\n\n      testRange.detach();\n    }\n\n    var body = isHostObject(document, \"body\") ? document.body : document.getElementsByTagName(\"body\")[0];\n\n    if (body && isHostMethod(body, \"createTextRange\")) {\n      testRange = body.createTextRange();\n\n      if (isTextRange(testRange)) {\n        implementsTextRange = true;\n      }\n    }\n\n    if (!implementsDomRange && !implementsTextRange) {\n      fail(\"Neither Range nor TextRange are implemented\");\n    }\n\n    api.initialized = true;\n    api.features = {\n      implementsDomRange: implementsDomRange,\n      implementsTextRange: implementsTextRange\n    }; // Initialize modules and call init listeners\n\n    var allListeners = moduleInitializers.concat(initListeners);\n\n    for (var i = 0, len = allListeners.length; i < len; ++i) {\n      try {\n        allListeners[i](api);\n      } catch (ex) {\n        if (isHostObject(window, \"console\") && isHostMethod(window.console, \"log\")) {\n          window.console.log(\"Init listener threw an exception. Continuing.\", ex);\n        }\n      }\n    }\n  } // Allow external scripts to initialize this library in case it's loaded after the document has loaded\n\n\n  api.init = init; // Execute listener immediately if already initialized\n\n  api.addInitListener = function (listener) {\n    if (api.initialized) {\n      listener(api);\n    } else {\n      initListeners.push(listener);\n    }\n  };\n\n  var createMissingNativeApiListeners = [];\n\n  api.addCreateMissingNativeApiListener = function (listener) {\n    createMissingNativeApiListeners.push(listener);\n  };\n\n  function createMissingNativeApi(win) {\n    win = win || window;\n    init(); // Notify listeners\n\n    for (var i = 0, len = createMissingNativeApiListeners.length; i < len; ++i) {\n      createMissingNativeApiListeners[i](win);\n    }\n  }\n\n  api.createMissingNativeApi = createMissingNativeApi;\n  /**\n   * @constructor\n   */\n\n  function Module(name) {\n    this.name = name;\n    this.initialized = false;\n    this.supported = false;\n  }\n\n  Module.prototype.fail = function (reason) {\n    this.initialized = true;\n    this.supported = false;\n    throw new Error(\"Module '\" + this.name + \"' failed to load: \" + reason);\n  };\n\n  Module.prototype.warn = function (msg) {\n    api.warn(\"Module \" + this.name + \": \" + msg);\n  };\n\n  Module.prototype.createError = function (msg) {\n    return new Error(\"Error in Rangy \" + this.name + \" module: \" + msg);\n  };\n\n  api.createModule = function (name, initFunc) {\n    var module = new Module(name);\n    api.modules[name] = module;\n    moduleInitializers.push(function (api) {\n      initFunc(api, module);\n      module.initialized = true;\n      module.supported = true;\n    });\n  };\n\n  api.requireModules = function (modules) {\n    for (var i = 0, len = modules.length, module, moduleName; i < len; ++i) {\n      moduleName = modules[i];\n      module = api.modules[moduleName];\n\n      if (!module || !(module instanceof Module)) {\n        throw new Error(\"Module '\" + moduleName + \"' not found\");\n      }\n\n      if (!module.supported) {\n        throw new Error(\"Module '\" + moduleName + \"' not supported\");\n      }\n    }\n  };\n  /*----------------------------------------------------------------------------------------------------------------*/\n  // Wait for document to load before running tests\n\n\n  var docReady = false;\n\n  var loadHandler = function loadHandler(e) {\n    if (!docReady) {\n      docReady = true;\n\n      if (!api.initialized) {\n        init();\n      }\n    }\n  }; // Test whether we have window and document objects that we will need\n\n\n  if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) == UNDEFINED) {\n    fail(\"No window found\");\n    return;\n  }\n\n  if ((typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) == UNDEFINED) {\n    fail(\"No document found\");\n    return;\n  }\n\n  if (isHostMethod(document, \"addEventListener\")) {\n    document.addEventListener(\"DOMContentLoaded\", loadHandler, false);\n  } // Add a fallback in case the DOMContentLoaded event isn't supported\n\n\n  if (isHostMethod(window, \"addEventListener\")) {\n    window.addEventListener(\"load\", loadHandler, false);\n  } else if (isHostMethod(window, \"attachEvent\")) {\n    window.attachEvent(\"onload\", loadHandler);\n  } else {\n    fail(\"Window does not have required addEventListener or attachEvent method\");\n  }\n\n  return api;\n}();\n\nrangy.createModule(\"DomUtil\", function (api, module) {\n  var UNDEF = \"undefined\";\n  var util = api.util; // Perform feature tests\n\n  if (!util.areHostMethods(document, [\"createDocumentFragment\", \"createElement\", \"createTextNode\"])) {\n    module.fail(\"document missing a Node creation method\");\n  }\n\n  if (!util.isHostMethod(document, \"getElementsByTagName\")) {\n    module.fail(\"document missing getElementsByTagName method\");\n  }\n\n  var el = document.createElement(\"div\");\n\n  if (!util.areHostMethods(el, [\"insertBefore\", \"appendChild\", \"cloneNode\"] || false)) {\n    module.fail(\"Incomplete Element implementation\");\n  } // innerHTML is required for Range's createContextualFragment method\n\n\n  if (!util.isHostProperty(el, \"innerHTML\")) {\n    module.fail(\"Element is missing innerHTML property\");\n  }\n\n  var textNode = document.createTextNode(\"test\");\n\n  if (!util.areHostMethods(textNode, [\"splitText\", \"deleteData\", \"insertData\", \"appendData\", \"cloneNode\"] || false || false)) {\n    module.fail(\"Incomplete Text Node implementation\");\n  }\n  /*----------------------------------------------------------------------------------------------------------------*/\n  // Removed use of indexOf because of a bizarre bug in Opera that is thrown in one of the Acid3 tests. I haven't been\n  // able to replicate it outside of the test. The bug is that indexOf returns -1 when called on an Array that\n  // contains just the document as a single element and the value searched for is the document.\n\n\n  var arrayContains =\n  /*Array.prototype.indexOf ?\n  function(arr, val) {\n  return arr.indexOf(val) > -1;\n  }:*/\n  function arrayContains(arr, val) {\n    var i = arr.length;\n\n    while (i--) {\n      if (arr[i] === val) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // Opera 11 puts HTML elements in the null namespace, it seems, and IE 7 has undefined namespaceURI\n\n\n  function isHtmlNamespace(node) {\n    var ns;\n    return _typeof(node.namespaceURI) == UNDEF || (ns = node.namespaceURI) === null || ns == \"http://www.w3.org/1999/xhtml\";\n  }\n\n  function parentElement(node) {\n    var parent = node.parentNode;\n    return parent.nodeType == 1 ? parent : null;\n  }\n\n  function getNodeIndex(node) {\n    var i = 0;\n\n    while (node = node.previousSibling) {\n      i++;\n    }\n\n    return i;\n  }\n\n  function getNodeLength(node) {\n    var childNodes;\n    return isCharacterDataNode(node) ? node.length : (childNodes = node.childNodes) ? childNodes.length : 0;\n  }\n\n  function getCommonAncestor(node1, node2) {\n    var ancestors = [],\n        n;\n\n    for (n = node1; n; n = n.parentNode) {\n      ancestors.push(n);\n    }\n\n    for (n = node2; n; n = n.parentNode) {\n      if (arrayContains(ancestors, n)) {\n        return n;\n      }\n    }\n\n    return null;\n  }\n\n  function isAncestorOf(ancestor, descendant, selfIsAncestor) {\n    var n = selfIsAncestor ? descendant : descendant.parentNode;\n\n    while (n) {\n      if (n === ancestor) {\n        return true;\n      } else {\n        n = n.parentNode;\n      }\n    }\n\n    return false;\n  }\n\n  function getClosestAncestorIn(node, ancestor, selfIsAncestor) {\n    var p,\n        n = selfIsAncestor ? node : node.parentNode;\n\n    while (n) {\n      p = n.parentNode;\n\n      if (p === ancestor) {\n        return n;\n      }\n\n      n = p;\n    }\n\n    return null;\n  }\n\n  function isCharacterDataNode(node) {\n    var t = node.nodeType;\n    return t == 3 || t == 4 || t == 8; // Text, CDataSection or Comment\n  }\n\n  function insertAfter(node, precedingNode) {\n    var nextNode = precedingNode.nextSibling,\n        parent = precedingNode.parentNode;\n\n    if (nextNode) {\n      parent.insertBefore(node, nextNode);\n    } else {\n      parent.appendChild(node);\n    }\n\n    return node;\n  } // Note that we cannot use splitText() because it is bugridden in IE 9.\n\n\n  function splitDataNode(node, index) {\n    var newNode = node.cloneNode(false);\n    newNode.deleteData(0, index);\n    node.deleteData(index, node.length - index);\n    insertAfter(newNode, node);\n    return newNode;\n  }\n\n  function getDocument(node) {\n    if (node.nodeType == 9) {\n      return node;\n    } else if (_typeof(node.ownerDocument) != UNDEF) {\n      return node.ownerDocument;\n    } else if (_typeof(node.document) != UNDEF) {\n      return node.document;\n    } else if (node.parentNode) {\n      return getDocument(node.parentNode);\n    } else {\n      throw new Error(\"getDocument: no document found for node\");\n    }\n  }\n\n  function getWindow(node) {\n    var doc = getDocument(node);\n\n    if (_typeof(doc.defaultView) != UNDEF) {\n      return doc.defaultView;\n    } else if (_typeof(doc.parentWindow) != UNDEF) {\n      return doc.parentWindow;\n    } else {\n      throw new Error(\"Cannot get a window object for node\");\n    }\n  }\n\n  function getIframeDocument(iframeEl) {\n    if (_typeof(iframeEl.contentDocument) != UNDEF) {\n      return iframeEl.contentDocument;\n    } else if (_typeof(iframeEl.contentWindow) != UNDEF) {\n      return iframeEl.contentWindow.document;\n    } else {\n      throw new Error(\"getIframeWindow: No Document object found for iframe element\");\n    }\n  }\n\n  function getIframeWindow(iframeEl) {\n    if (_typeof(iframeEl.contentWindow) != UNDEF) {\n      return iframeEl.contentWindow;\n    } else if (_typeof(iframeEl.contentDocument) != UNDEF) {\n      return iframeEl.contentDocument.defaultView;\n    } else {\n      throw new Error(\"getIframeWindow: No Window object found for iframe element\");\n    }\n  }\n\n  function getBody(doc) {\n    return util.isHostObject(doc, \"body\") ? doc.body : doc.getElementsByTagName(\"body\")[0];\n  }\n\n  function getRootContainer(node) {\n    var parent;\n\n    while (parent = node.parentNode) {\n      node = parent;\n    }\n\n    return node;\n  }\n\n  function comparePoints(nodeA, offsetA, nodeB, offsetB) {\n    // See http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Comparing\n    var nodeC, root, childA, childB, n;\n\n    if (nodeA == nodeB) {\n      // Case 1: nodes are the same\n      return offsetA === offsetB ? 0 : offsetA < offsetB ? -1 : 1;\n    } else if (nodeC = getClosestAncestorIn(nodeB, nodeA, true)) {\n      // Case 2: node C (container B or an ancestor) is a child node of A\n      return offsetA <= getNodeIndex(nodeC) ? -1 : 1;\n    } else if (nodeC = getClosestAncestorIn(nodeA, nodeB, true)) {\n      // Case 3: node C (container A or an ancestor) is a child node of B\n      return getNodeIndex(nodeC) < offsetB ? -1 : 1;\n    } else {\n      // Case 4: containers are siblings or descendants of siblings\n      root = getCommonAncestor(nodeA, nodeB);\n      childA = nodeA === root ? root : getClosestAncestorIn(nodeA, root, true);\n      childB = nodeB === root ? root : getClosestAncestorIn(nodeB, root, true);\n\n      if (childA === childB) {\n        // This shouldn't be possible\n        throw new Error(\"comparePoints got to case 4 and childA and childB are the same!\");\n      } else {\n        n = root.firstChild;\n\n        while (n) {\n          if (n === childA) {\n            return -1;\n          } else if (n === childB) {\n            return 1;\n          }\n\n          n = n.nextSibling;\n        }\n\n        throw new Error(\"Should not be here!\");\n      }\n    }\n  }\n\n  function fragmentFromNodeChildren(node) {\n    var fragment = getDocument(node).createDocumentFragment(),\n        child;\n\n    while (child = node.firstChild) {\n      fragment.appendChild(child);\n    }\n\n    return fragment;\n  }\n\n  function inspectNode(node) {\n    if (!node) {\n      return \"[No node]\";\n    }\n\n    if (isCharacterDataNode(node)) {\n      return '\"' + node.data + '\"';\n    } else if (node.nodeType == 1) {\n      var idAttr = node.id ? ' id=\"' + node.id + '\"' : \"\";\n      return \"<\" + node.nodeName + idAttr + \">[\" + node.childNodes.length + \"]\";\n    } else {\n      return node.nodeName;\n    }\n  }\n  /**\n   * @constructor\n   */\n\n\n  function NodeIterator(root) {\n    this.root = root;\n    this._next = root;\n  }\n\n  NodeIterator.prototype = {\n    _current: null,\n    hasNext: function hasNext() {\n      return !!this._next;\n    },\n    next: function next() {\n      var n = this._current = this._next;\n      var child, next;\n\n      if (this._current) {\n        child = n.firstChild;\n\n        if (child) {\n          this._next = child;\n        } else {\n          next = null;\n\n          while (n !== this.root && !(next = n.nextSibling)) {\n            n = n.parentNode;\n          }\n\n          this._next = next;\n        }\n      }\n\n      return this._current;\n    },\n    detach: function detach() {\n      this._current = this._next = this.root = null;\n    }\n  };\n\n  function createIterator(root) {\n    return new NodeIterator(root);\n  }\n  /**\n   * @constructor\n   */\n\n\n  function DomPosition(node, offset) {\n    this.node = node;\n    this.offset = offset;\n  }\n\n  DomPosition.prototype = {\n    equals: function equals(pos) {\n      return this.node === pos.node & this.offset == pos.offset;\n    },\n    inspect: function inspect() {\n      return \"[DomPosition(\" + inspectNode(this.node) + \":\" + this.offset + \")]\";\n    }\n  };\n  /**\n   * @constructor\n   */\n\n  function DOMException(codeName) {\n    this.code = this[codeName];\n    this.codeName = codeName;\n    this.message = \"DOMException: \" + this.codeName;\n  }\n\n  DOMException.prototype = {\n    INDEX_SIZE_ERR: 1,\n    HIERARCHY_REQUEST_ERR: 3,\n    WRONG_DOCUMENT_ERR: 4,\n    NO_MODIFICATION_ALLOWED_ERR: 7,\n    NOT_FOUND_ERR: 8,\n    NOT_SUPPORTED_ERR: 9,\n    INVALID_STATE_ERR: 11\n  };\n\n  DOMException.prototype.toString = function () {\n    return this.message;\n  };\n\n  api.dom = {\n    arrayContains: arrayContains,\n    isHtmlNamespace: isHtmlNamespace,\n    parentElement: parentElement,\n    getNodeIndex: getNodeIndex,\n    getNodeLength: getNodeLength,\n    getCommonAncestor: getCommonAncestor,\n    isAncestorOf: isAncestorOf,\n    getClosestAncestorIn: getClosestAncestorIn,\n    isCharacterDataNode: isCharacterDataNode,\n    insertAfter: insertAfter,\n    splitDataNode: splitDataNode,\n    getDocument: getDocument,\n    getWindow: getWindow,\n    getIframeWindow: getIframeWindow,\n    getIframeDocument: getIframeDocument,\n    getBody: getBody,\n    getRootContainer: getRootContainer,\n    comparePoints: comparePoints,\n    inspectNode: inspectNode,\n    fragmentFromNodeChildren: fragmentFromNodeChildren,\n    createIterator: createIterator,\n    DomPosition: DomPosition\n  };\n  api.DOMException = DOMException;\n});\nrangy.createModule(\"DomRange\", function (api, module) {\n  api.requireModules([\"DomUtil\"]);\n  var dom = api.dom;\n  var DomPosition = dom.DomPosition;\n  var DOMException = api.DOMException;\n  /*----------------------------------------------------------------------------------------------------------------*/\n  // Utility functions\n\n  function isNonTextPartiallySelected(node, range) {\n    return node.nodeType != 3 && (dom.isAncestorOf(node, range.startContainer, true) || dom.isAncestorOf(node, range.endContainer, true));\n  }\n\n  function getRangeDocument(range) {\n    return dom.getDocument(range.startContainer);\n  }\n\n  function dispatchEvent(range, type, args) {\n    var listeners = range._listeners[type];\n\n    if (listeners) {\n      for (var i = 0, len = listeners.length; i < len; ++i) {\n        listeners[i].call(range, {\n          target: range,\n          args: args\n        });\n      }\n    }\n  }\n\n  function getBoundaryBeforeNode(node) {\n    return new DomPosition(node.parentNode, dom.getNodeIndex(node));\n  }\n\n  function getBoundaryAfterNode(node) {\n    return new DomPosition(node.parentNode, dom.getNodeIndex(node) + 1);\n  }\n\n  function insertNodeAtPosition(node, n, o) {\n    var firstNodeInserted = node.nodeType == 11 ? node.firstChild : node;\n\n    if (dom.isCharacterDataNode(n)) {\n      if (o == n.length) {\n        dom.insertAfter(node, n);\n      } else {\n        n.parentNode.insertBefore(node, o == 0 ? n : dom.splitDataNode(n, o));\n      }\n    } else if (o >= n.childNodes.length) {\n      n.appendChild(node);\n    } else {\n      n.insertBefore(node, n.childNodes[o]);\n    }\n\n    return firstNodeInserted;\n  }\n\n  function cloneSubtree(iterator) {\n    var partiallySelected;\n\n    for (var node, frag = getRangeDocument(iterator.range).createDocumentFragment(), subIterator; node = iterator.next();) {\n      partiallySelected = iterator.isPartiallySelectedSubtree();\n      node = node.cloneNode(!partiallySelected);\n\n      if (partiallySelected) {\n        subIterator = iterator.getSubtreeIterator();\n        node.appendChild(cloneSubtree(subIterator));\n        subIterator.detach(true);\n      }\n\n      if (node.nodeType == 10) {\n        // DocumentType\n        throw new DOMException(\"HIERARCHY_REQUEST_ERR\");\n      }\n\n      frag.appendChild(node);\n    }\n\n    return frag;\n  }\n\n  function iterateSubtree(rangeIterator, func, iteratorState) {\n    var it, n;\n    iteratorState = iteratorState || {\n      stop: false\n    };\n\n    for (var node, subRangeIterator; node = rangeIterator.next();) {\n      //log.debug(\"iterateSubtree, partially selected: \" + rangeIterator.isPartiallySelectedSubtree(), nodeToString(node));\n      if (rangeIterator.isPartiallySelectedSubtree()) {\n        // The node is partially selected by the Range, so we can use a new RangeIterator on the portion of the\n        // node selected by the Range.\n        if (func(node) === false) {\n          iteratorState.stop = true;\n          return;\n        } else {\n          subRangeIterator = rangeIterator.getSubtreeIterator();\n          iterateSubtree(subRangeIterator, func, iteratorState);\n          subRangeIterator.detach(true);\n\n          if (iteratorState.stop) {\n            return;\n          }\n        }\n      } else {\n        // The whole node is selected, so we can use efficient DOM iteration to iterate over the node and its\n        // descendant\n        it = dom.createIterator(node);\n\n        while (n = it.next()) {\n          if (func(n) === false) {\n            iteratorState.stop = true;\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  function deleteSubtree(iterator) {\n    var subIterator;\n\n    while (iterator.next()) {\n      if (iterator.isPartiallySelectedSubtree()) {\n        subIterator = iterator.getSubtreeIterator();\n        deleteSubtree(subIterator);\n        subIterator.detach(true);\n      } else {\n        iterator.remove();\n      }\n    }\n  }\n\n  function extractSubtree(iterator) {\n    for (var node, frag = getRangeDocument(iterator.range).createDocumentFragment(), subIterator; node = iterator.next();) {\n      if (iterator.isPartiallySelectedSubtree()) {\n        node = node.cloneNode(false);\n        subIterator = iterator.getSubtreeIterator();\n        node.appendChild(extractSubtree(subIterator));\n        subIterator.detach(true);\n      } else {\n        iterator.remove();\n      }\n\n      if (node.nodeType == 10) {\n        // DocumentType\n        throw new DOMException(\"HIERARCHY_REQUEST_ERR\");\n      }\n\n      frag.appendChild(node);\n    }\n\n    return frag;\n  }\n\n  function getNodesInRange(range, nodeTypes, filter) {\n    //log.info(\"getNodesInRange, \" + nodeTypes.join(\",\"));\n    var filterNodeTypes = !!(nodeTypes && nodeTypes.length),\n        regex;\n    var filterExists = !!filter;\n\n    if (filterNodeTypes) {\n      regex = new RegExp(\"^(\" + nodeTypes.join(\"|\") + \")$\");\n    }\n\n    var nodes = [];\n    iterateSubtree(new RangeIterator(range, false), function (node) {\n      if ((!filterNodeTypes || regex.test(node.nodeType)) && (!filterExists || filter(node))) {\n        nodes.push(node);\n      }\n    });\n    return nodes;\n  }\n\n  function _inspect(range) {\n    var name = typeof range.getName == \"undefined\" ? \"Range\" : range.getName();\n    return \"[\" + name + \"(\" + dom.inspectNode(range.startContainer) + \":\" + range.startOffset + \", \" + dom.inspectNode(range.endContainer) + \":\" + range.endOffset + \")]\";\n  }\n  /*----------------------------------------------------------------------------------------------------------------*/\n  // RangeIterator code partially borrows from IERange by Tim Ryan (http://github.com/timcameronryan/IERange)\n\n  /**\n   * @constructor\n   */\n\n\n  function RangeIterator(range, clonePartiallySelectedTextNodes) {\n    this.range = range;\n    this.clonePartiallySelectedTextNodes = clonePartiallySelectedTextNodes;\n\n    if (!range.collapsed) {\n      this.sc = range.startContainer;\n      this.so = range.startOffset;\n      this.ec = range.endContainer;\n      this.eo = range.endOffset;\n      var root = range.commonAncestorContainer;\n\n      if (this.sc === this.ec && dom.isCharacterDataNode(this.sc)) {\n        this.isSingleCharacterDataNode = true;\n        this._first = this._last = this._next = this.sc;\n      } else {\n        this._first = this._next = this.sc === root && !dom.isCharacterDataNode(this.sc) ? this.sc.childNodes[this.so] : dom.getClosestAncestorIn(this.sc, root, true);\n        this._last = this.ec === root && !dom.isCharacterDataNode(this.ec) ? this.ec.childNodes[this.eo - 1] : dom.getClosestAncestorIn(this.ec, root, true);\n      }\n    }\n  }\n\n  RangeIterator.prototype = {\n    _current: null,\n    _next: null,\n    _first: null,\n    _last: null,\n    isSingleCharacterDataNode: false,\n    reset: function reset() {\n      this._current = null;\n      this._next = this._first;\n    },\n    hasNext: function hasNext() {\n      return !!this._next;\n    },\n    next: function next() {\n      // Move to next node\n      var current = this._current = this._next;\n\n      if (current) {\n        this._next = current !== this._last ? current.nextSibling : null; // Check for partially selected text nodes\n\n        if (dom.isCharacterDataNode(current) && this.clonePartiallySelectedTextNodes) {\n          if (current === this.ec) {\n            (current = current.cloneNode(true)).deleteData(this.eo, current.length - this.eo);\n          }\n\n          if (this._current === this.sc) {\n            (current = current.cloneNode(true)).deleteData(0, this.so);\n          }\n        }\n      }\n\n      return current;\n    },\n    remove: function remove() {\n      var current = this._current,\n          start,\n          end;\n\n      if (dom.isCharacterDataNode(current) && (current === this.sc || current === this.ec)) {\n        start = current === this.sc ? this.so : 0;\n        end = current === this.ec ? this.eo : current.length;\n\n        if (start != end) {\n          current.deleteData(start, end - start);\n        }\n      } else {\n        if (current.parentNode) {\n          current.parentNode.removeChild(current);\n        } else {}\n      }\n    },\n    // Checks if the current node is partially selected\n    isPartiallySelectedSubtree: function isPartiallySelectedSubtree() {\n      var current = this._current;\n      return isNonTextPartiallySelected(current, this.range);\n    },\n    getSubtreeIterator: function getSubtreeIterator() {\n      var subRange;\n\n      if (this.isSingleCharacterDataNode) {\n        subRange = this.range.cloneRange();\n        subRange.collapse();\n      } else {\n        subRange = new Range(getRangeDocument(this.range));\n        var current = this._current;\n        var startContainer = current,\n            startOffset = 0,\n            endContainer = current,\n            endOffset = dom.getNodeLength(current);\n\n        if (dom.isAncestorOf(current, this.sc, true)) {\n          startContainer = this.sc;\n          startOffset = this.so;\n        }\n\n        if (dom.isAncestorOf(current, this.ec, true)) {\n          endContainer = this.ec;\n          endOffset = this.eo;\n        }\n\n        updateBoundaries(subRange, startContainer, startOffset, endContainer, endOffset);\n      }\n\n      return new RangeIterator(subRange, this.clonePartiallySelectedTextNodes);\n    },\n    detach: function detach(detachRange) {\n      if (detachRange) {\n        this.range.detach();\n      }\n\n      this.range = this._current = this._next = this._first = this._last = this.sc = this.so = this.ec = this.eo = null;\n    }\n  };\n  /*----------------------------------------------------------------------------------------------------------------*/\n  // Exceptions\n\n  /**\n   * @constructor\n   */\n\n  function RangeException(codeName) {\n    this.code = this[codeName];\n    this.codeName = codeName;\n    this.message = \"RangeException: \" + this.codeName;\n  }\n\n  RangeException.prototype = {\n    BAD_BOUNDARYPOINTS_ERR: 1,\n    INVALID_NODE_TYPE_ERR: 2\n  };\n\n  RangeException.prototype.toString = function () {\n    return this.message;\n  };\n  /*----------------------------------------------------------------------------------------------------------------*/\n\n  /**\n   * Currently iterates through all nodes in the range on creation until I think of a decent way to do it\n   * TODO: Look into making this a proper iterator, not requiring preloading everything first\n   * @constructor\n   */\n\n\n  function RangeNodeIterator(range, nodeTypes, filter) {\n    this.nodes = getNodesInRange(range, nodeTypes, filter);\n    this._next = this.nodes[0];\n    this._position = 0;\n  }\n\n  RangeNodeIterator.prototype = {\n    _current: null,\n    hasNext: function hasNext() {\n      return !!this._next;\n    },\n    next: function next() {\n      this._current = this._next;\n      this._next = this.nodes[++this._position];\n      return this._current;\n    },\n    detach: function detach() {\n      this._current = this._next = this.nodes = null;\n    }\n  };\n  var beforeAfterNodeTypes = [1, 3, 4, 5, 7, 8, 10];\n  var rootContainerNodeTypes = [2, 9, 11];\n  var readonlyNodeTypes = [5, 6, 10, 12];\n  var insertableNodeTypes = [1, 3, 4, 5, 7, 8, 10, 11];\n  var surroundNodeTypes = [1, 3, 4, 5, 7, 8];\n\n  function createAncestorFinder(nodeTypes) {\n    return function (node, selfIsAncestor) {\n      var t,\n          n = selfIsAncestor ? node : node.parentNode;\n\n      while (n) {\n        t = n.nodeType;\n\n        if (dom.arrayContains(nodeTypes, t)) {\n          return n;\n        }\n\n        n = n.parentNode;\n      }\n\n      return null;\n    };\n  }\n\n  var getRootContainer = dom.getRootContainer;\n  var getDocumentOrFragmentContainer = createAncestorFinder([9, 11]);\n  var getReadonlyAncestor = createAncestorFinder(readonlyNodeTypes);\n  var getDocTypeNotationEntityAncestor = createAncestorFinder([6, 10, 12]);\n\n  function assertNoDocTypeNotationEntityAncestor(node, allowSelf) {\n    if (getDocTypeNotationEntityAncestor(node, allowSelf)) {\n      throw new RangeException(\"INVALID_NODE_TYPE_ERR\");\n    }\n  }\n\n  function assertNotDetached(range) {\n    if (!range.startContainer) {\n      throw new DOMException(\"INVALID_STATE_ERR\");\n    }\n  }\n\n  function assertValidNodeType(node, invalidTypes) {\n    if (!dom.arrayContains(invalidTypes, node.nodeType)) {\n      throw new RangeException(\"INVALID_NODE_TYPE_ERR\");\n    }\n  }\n\n  function assertValidOffset(node, offset) {\n    if (offset < 0 || offset > (dom.isCharacterDataNode(node) ? node.length : node.childNodes.length)) {\n      throw new DOMException(\"INDEX_SIZE_ERR\");\n    }\n  }\n\n  function assertSameDocumentOrFragment(node1, node2) {\n    if (getDocumentOrFragmentContainer(node1, true) !== getDocumentOrFragmentContainer(node2, true)) {\n      throw new DOMException(\"WRONG_DOCUMENT_ERR\");\n    }\n  }\n\n  function assertNodeNotReadOnly(node) {\n    if (getReadonlyAncestor(node, true)) {\n      throw new DOMException(\"NO_MODIFICATION_ALLOWED_ERR\");\n    }\n  }\n\n  function assertNode(node, codeName) {\n    if (!node) {\n      throw new DOMException(codeName);\n    }\n  }\n\n  function isOrphan(node) {\n    return !dom.arrayContains(rootContainerNodeTypes, node.nodeType) && !getDocumentOrFragmentContainer(node, true);\n  }\n\n  function isValidOffset(node, offset) {\n    return offset <= (dom.isCharacterDataNode(node) ? node.length : node.childNodes.length);\n  }\n\n  function isRangeValid(range) {\n    var a = !!range.startContainer && !!range.endContainer;\n    var sorph = isOrphan(range.startContainer);\n    var eorph = isOrphan(range.endContainer);\n    var soff = isValidOffset(range.startContainer, range.startOffset);\n    var eoff = isValidOffset(range.endContainer, range.endOffset);\n    return !!range.startContainer && !!range.endContainer && !isOrphan(range.startContainer) && !isOrphan(range.endContainer) && isValidOffset(range.startContainer, range.startOffset) && isValidOffset(range.endContainer, range.endOffset);\n  }\n\n  function assertRangeValid(range) {\n    assertNotDetached(range);\n\n    if (!isRangeValid(range)) {\n      throw new Error(\"Range error: Range is no longer valid after DOM mutation (\" + range.inspect() + \")\");\n    }\n  }\n  /*----------------------------------------------------------------------------------------------------------------*/\n  // Test the browser's innerHTML support to decide how to implement createContextualFragment\n\n\n  var styleEl = document.createElement(\"style\");\n  var htmlParsingConforms = false;\n\n  try {\n    styleEl.innerHTML = \"<b>x</b>\";\n    htmlParsingConforms = styleEl.firstChild.nodeType == 3; // Opera incorrectly creates an element node\n  } catch (e) {// IE 6 and 7 throw\n  }\n\n  api.features.htmlParsingConforms = htmlParsingConforms;\n  var createContextualFragment = htmlParsingConforms ? // Implementation as per HTML parsing spec, trusting in the browser's implementation of innerHTML. See\n  // discussion and base code for this implementation at issue 67.\n  // Spec: http://html5.org/specs/dom-parsing.html#extensions-to-the-range-interface\n  // Thanks to Aleks Williams.\n  function (fragmentStr) {\n    // \"Let node the context object's start's node.\"\n    var node = this.startContainer;\n    var doc = dom.getDocument(node); // \"If the context object's start's node is null, raise an INVALID_STATE_ERR\n    // exception and abort these steps.\"\n\n    if (!node) {\n      throw new DOMException(\"INVALID_STATE_ERR\");\n    } // \"Let element be as follows, depending on node's interface:\"\n    // Document, Document Fragment: null\n\n\n    var el = null; // \"Element: node\"\n\n    if (node.nodeType == 1) {\n      el = node; // \"Text, Comment: node's parentElement\"\n    } else if (dom.isCharacterDataNode(node)) {\n      el = dom.parentElement(node);\n    } // \"If either element is null or element's ownerDocument is an HTML document\n    // and element's local name is \"html\" and element's namespace is the HTML\n    // namespace\"\n\n\n    if (el === null || el.nodeName == \"HTML\" && dom.isHtmlNamespace(dom.getDocument(el).documentElement) && dom.isHtmlNamespace(el)) {\n      // \"let element be a new Element with \"body\" as its local name and the HTML\n      // namespace as its namespace.\"\"\n      el = doc.createElement(\"body\");\n    } else {\n      el = el.cloneNode(false);\n    } // \"If the node's document is an HTML document: Invoke the HTML fragment parsing algorithm.\"\n    // \"If the node's document is an XML document: Invoke the XML fragment parsing algorithm.\"\n    // \"In either case, the algorithm must be invoked with fragment as the input\n    // and element as the context element.\"\n\n\n    el.innerHTML = fragmentStr; // \"If this raises an exception, then abort these steps. Otherwise, let new\n    // children be the nodes returned.\"\n    // \"Let fragment be a new DocumentFragment.\"\n    // \"Append all new children to fragment.\"\n    // \"Return fragment.\"\n\n    return dom.fragmentFromNodeChildren(el);\n  } : // In this case, innerHTML cannot be trusted, so fall back to a simpler, non-conformant implementation that\n  // previous versions of Rangy used (with the exception of using a body element rather than a div)\n  function (fragmentStr) {\n    assertNotDetached(this);\n    var doc = getRangeDocument(this);\n    var el = doc.createElement(\"body\");\n    el.innerHTML = fragmentStr;\n    return dom.fragmentFromNodeChildren(el);\n  };\n  /*----------------------------------------------------------------------------------------------------------------*/\n\n  var rangeProperties = [\"startContainer\", \"startOffset\", \"endContainer\", \"endOffset\", \"collapsed\", \"commonAncestorContainer\"];\n  var s2s = 0,\n      s2e = 1,\n      e2e = 2,\n      e2s = 3;\n  var n_b = 0,\n      n_a = 1,\n      n_b_a = 2,\n      n_i = 3;\n\n  function RangePrototype() {}\n\n  RangePrototype.prototype = {\n    attachListener: function attachListener(type, listener) {\n      this._listeners[type].push(listener);\n    },\n    compareBoundaryPoints: function compareBoundaryPoints(how, range) {\n      assertRangeValid(this);\n      assertSameDocumentOrFragment(this.startContainer, range.startContainer);\n      var nodeA, offsetA, nodeB, offsetB;\n      var prefixA = how == e2s || how == s2s ? \"start\" : \"end\";\n      var prefixB = how == s2e || how == s2s ? \"start\" : \"end\";\n      nodeA = this[prefixA + \"Container\"];\n      offsetA = this[prefixA + \"Offset\"];\n      nodeB = range[prefixB + \"Container\"];\n      offsetB = range[prefixB + \"Offset\"];\n      return dom.comparePoints(nodeA, offsetA, nodeB, offsetB);\n    },\n    insertNode: function insertNode(node) {\n      assertRangeValid(this);\n      assertValidNodeType(node, insertableNodeTypes);\n      assertNodeNotReadOnly(this.startContainer);\n\n      if (dom.isAncestorOf(node, this.startContainer, true)) {\n        throw new DOMException(\"HIERARCHY_REQUEST_ERR\");\n      } // No check for whether the container of the start of the Range is of a type that does not allow\n      // children of the type of node: the browser's DOM implementation should do this for us when we attempt\n      // to add the node\n\n\n      var firstNodeInserted = insertNodeAtPosition(node, this.startContainer, this.startOffset);\n      this.setStartBefore(firstNodeInserted);\n    },\n    cloneContents: function cloneContents() {\n      assertRangeValid(this);\n      var clone, frag;\n\n      if (this.collapsed) {\n        return getRangeDocument(this).createDocumentFragment();\n      } else {\n        if (this.startContainer === this.endContainer && dom.isCharacterDataNode(this.startContainer)) {\n          clone = this.startContainer.cloneNode(true);\n          clone.data = clone.data.slice(this.startOffset, this.endOffset);\n          frag = getRangeDocument(this).createDocumentFragment();\n          frag.appendChild(clone);\n          return frag;\n        } else {\n          var iterator = new RangeIterator(this, true);\n          clone = cloneSubtree(iterator);\n          iterator.detach();\n        }\n\n        return clone;\n      }\n    },\n    canSurroundContents: function canSurroundContents() {\n      assertRangeValid(this);\n      assertNodeNotReadOnly(this.startContainer);\n      assertNodeNotReadOnly(this.endContainer); // Check if the contents can be surrounded. Specifically, this means whether the range partially selects\n      // no non-text nodes.\n\n      var iterator = new RangeIterator(this, true);\n      var boundariesInvalid = iterator._first && isNonTextPartiallySelected(iterator._first, this) || iterator._last && isNonTextPartiallySelected(iterator._last, this);\n      iterator.detach();\n      return !boundariesInvalid;\n    },\n    surroundContents: function surroundContents(node) {\n      assertValidNodeType(node, surroundNodeTypes);\n\n      if (!this.canSurroundContents()) {\n        throw new RangeException(\"BAD_BOUNDARYPOINTS_ERR\");\n      } // Extract the contents\n\n\n      var content = this.extractContents(); // Clear the children of the node\n\n      if (node.hasChildNodes()) {\n        while (node.lastChild) {\n          node.removeChild(node.lastChild);\n        }\n      } // Insert the new node and add the extracted contents\n\n\n      insertNodeAtPosition(node, this.startContainer, this.startOffset);\n      node.appendChild(content);\n      this.selectNode(node);\n    },\n    cloneRange: function cloneRange() {\n      assertRangeValid(this);\n      var range = new Range(getRangeDocument(this));\n      var i = rangeProperties.length,\n          prop;\n\n      while (i--) {\n        prop = rangeProperties[i];\n        range[prop] = this[prop];\n      }\n\n      return range;\n    },\n    toString: function toString() {\n      assertRangeValid(this);\n      var sc = this.startContainer;\n\n      if (sc === this.endContainer && dom.isCharacterDataNode(sc)) {\n        return sc.nodeType == 3 || sc.nodeType == 4 ? sc.data.slice(this.startOffset, this.endOffset) : \"\";\n      } else {\n        var textBits = [],\n            iterator = new RangeIterator(this, true);\n        iterateSubtree(iterator, function (node) {\n          // Accept only text or CDATA nodes, not comments\n          if (node.nodeType == 3 || node.nodeType == 4) {\n            textBits.push(node.data);\n          }\n        });\n        iterator.detach();\n        return textBits.join(\"\");\n      }\n    },\n    // The methods below are all non-standard. The following batch were introduced by Mozilla but have since\n    // been removed from Mozilla.\n    compareNode: function compareNode(node) {\n      assertRangeValid(this);\n      var parent = node.parentNode;\n      var nodeIndex = dom.getNodeIndex(node);\n\n      if (!parent) {\n        throw new DOMException(\"NOT_FOUND_ERR\");\n      }\n\n      var startComparison = this.comparePoint(parent, nodeIndex),\n          endComparison = this.comparePoint(parent, nodeIndex + 1);\n\n      if (startComparison < 0) {\n        // Node starts before\n        return endComparison > 0 ? n_b_a : n_b;\n      } else {\n        return endComparison > 0 ? n_a : n_i;\n      }\n    },\n    comparePoint: function comparePoint(node, offset) {\n      assertRangeValid(this);\n      assertNode(node, \"HIERARCHY_REQUEST_ERR\");\n      assertSameDocumentOrFragment(node, this.startContainer);\n\n      if (dom.comparePoints(node, offset, this.startContainer, this.startOffset) < 0) {\n        return -1;\n      } else if (dom.comparePoints(node, offset, this.endContainer, this.endOffset) > 0) {\n        return 1;\n      }\n\n      return 0;\n    },\n    createContextualFragment: createContextualFragment,\n    toHtml: function toHtml() {\n      assertRangeValid(this);\n      var container = getRangeDocument(this).createElement(\"div\");\n      container.appendChild(this.cloneContents());\n      return container.innerHTML;\n    },\n    // touchingIsIntersecting determines whether this method considers a node that borders a range intersects\n    // with it (as in WebKit) or not (as in Gecko pre-1.9, and the default)\n    intersectsNode: function intersectsNode(node, touchingIsIntersecting) {\n      assertRangeValid(this);\n      assertNode(node, \"NOT_FOUND_ERR\");\n\n      if (dom.getDocument(node) !== getRangeDocument(this)) {\n        return false;\n      }\n\n      var parent = node.parentNode,\n          offset = dom.getNodeIndex(node);\n      assertNode(parent, \"NOT_FOUND_ERR\");\n      var startComparison = dom.comparePoints(parent, offset, this.endContainer, this.endOffset),\n          endComparison = dom.comparePoints(parent, offset + 1, this.startContainer, this.startOffset);\n      return touchingIsIntersecting ? startComparison <= 0 && endComparison >= 0 : startComparison < 0 && endComparison > 0;\n    },\n    isPointInRange: function isPointInRange(node, offset) {\n      assertRangeValid(this);\n      assertNode(node, \"HIERARCHY_REQUEST_ERR\");\n      assertSameDocumentOrFragment(node, this.startContainer);\n      return dom.comparePoints(node, offset, this.startContainer, this.startOffset) >= 0 && dom.comparePoints(node, offset, this.endContainer, this.endOffset) <= 0;\n    },\n    // The methods below are non-standard and invented by me.\n    // Sharing a boundary start-to-end or end-to-start does not count as intersection.\n    intersectsRange: function intersectsRange(range, touchingIsIntersecting) {\n      assertRangeValid(this);\n\n      if (getRangeDocument(range) != getRangeDocument(this)) {\n        throw new DOMException(\"WRONG_DOCUMENT_ERR\");\n      }\n\n      var startComparison = dom.comparePoints(this.startContainer, this.startOffset, range.endContainer, range.endOffset),\n          endComparison = dom.comparePoints(this.endContainer, this.endOffset, range.startContainer, range.startOffset);\n      return touchingIsIntersecting ? startComparison <= 0 && endComparison >= 0 : startComparison < 0 && endComparison > 0;\n    },\n    intersection: function intersection(range) {\n      if (this.intersectsRange(range)) {\n        var startComparison = dom.comparePoints(this.startContainer, this.startOffset, range.startContainer, range.startOffset),\n            endComparison = dom.comparePoints(this.endContainer, this.endOffset, range.endContainer, range.endOffset);\n        var intersectionRange = this.cloneRange();\n\n        if (startComparison == -1) {\n          intersectionRange.setStart(range.startContainer, range.startOffset);\n        }\n\n        if (endComparison == 1) {\n          intersectionRange.setEnd(range.endContainer, range.endOffset);\n        }\n\n        return intersectionRange;\n      }\n\n      return null;\n    },\n    union: function union(range) {\n      if (this.intersectsRange(range, true)) {\n        var unionRange = this.cloneRange();\n\n        if (dom.comparePoints(range.startContainer, range.startOffset, this.startContainer, this.startOffset) == -1) {\n          unionRange.setStart(range.startContainer, range.startOffset);\n        }\n\n        if (dom.comparePoints(range.endContainer, range.endOffset, this.endContainer, this.endOffset) == 1) {\n          unionRange.setEnd(range.endContainer, range.endOffset);\n        }\n\n        return unionRange;\n      } else {\n        throw new RangeException(\"Ranges do not intersect\");\n      }\n    },\n    containsNode: function containsNode(node, allowPartial) {\n      if (allowPartial) {\n        return this.intersectsNode(node, false);\n      } else {\n        return this.compareNode(node) == n_i;\n      }\n    },\n    containsNodeContents: function containsNodeContents(node) {\n      return this.comparePoint(node, 0) >= 0 && this.comparePoint(node, dom.getNodeLength(node)) <= 0;\n    },\n    containsRange: function containsRange(range) {\n      return this.intersection(range).equals(range);\n    },\n    containsNodeText: function containsNodeText(node) {\n      var nodeRange = this.cloneRange();\n      nodeRange.selectNode(node);\n      var textNodes = nodeRange.getNodes([3]);\n\n      if (textNodes.length > 0) {\n        nodeRange.setStart(textNodes[0], 0);\n        var lastTextNode = textNodes.pop();\n        nodeRange.setEnd(lastTextNode, lastTextNode.length);\n        var contains = this.containsRange(nodeRange);\n        nodeRange.detach();\n        return contains;\n      } else {\n        return this.containsNodeContents(node);\n      }\n    },\n    createNodeIterator: function createNodeIterator(nodeTypes, filter) {\n      assertRangeValid(this);\n      return new RangeNodeIterator(this, nodeTypes, filter);\n    },\n    getNodes: function getNodes(nodeTypes, filter) {\n      assertRangeValid(this);\n      return getNodesInRange(this, nodeTypes, filter);\n    },\n    getDocument: function getDocument() {\n      return getRangeDocument(this);\n    },\n    collapseBefore: function collapseBefore(node) {\n      assertNotDetached(this);\n      this.setEndBefore(node);\n      this.collapse(false);\n    },\n    collapseAfter: function collapseAfter(node) {\n      assertNotDetached(this);\n      this.setStartAfter(node);\n      this.collapse(true);\n    },\n    getName: function getName() {\n      return \"DomRange\";\n    },\n    equals: function equals(range) {\n      return Range.rangesEqual(this, range);\n    },\n    isValid: function isValid() {\n      return isRangeValid(this);\n    },\n    inspect: function inspect() {\n      return _inspect(this);\n    }\n  };\n\n  function copyComparisonConstantsToObject(obj) {\n    obj.START_TO_START = s2s;\n    obj.START_TO_END = s2e;\n    obj.END_TO_END = e2e;\n    obj.END_TO_START = e2s;\n    obj.NODE_BEFORE = n_b;\n    obj.NODE_AFTER = n_a;\n    obj.NODE_BEFORE_AND_AFTER = n_b_a;\n    obj.NODE_INSIDE = n_i;\n  }\n\n  function copyComparisonConstants(constructor) {\n    copyComparisonConstantsToObject(constructor);\n    copyComparisonConstantsToObject(constructor.prototype);\n  }\n\n  function createRangeContentRemover(remover, boundaryUpdater) {\n    return function () {\n      assertRangeValid(this);\n      var sc = this.startContainer,\n          so = this.startOffset,\n          root = this.commonAncestorContainer;\n      var iterator = new RangeIterator(this, true); // Work out where to position the range after content removal\n\n      var node, boundary;\n\n      if (sc !== root) {\n        node = dom.getClosestAncestorIn(sc, root, true);\n        boundary = getBoundaryAfterNode(node);\n        sc = boundary.node;\n        so = boundary.offset;\n      } // Check none of the range is read-only\n\n\n      iterateSubtree(iterator, assertNodeNotReadOnly);\n      iterator.reset(); // Remove the content\n\n      var returnValue = remover(iterator);\n      iterator.detach(); // Move to the new position\n\n      boundaryUpdater(this, sc, so, sc, so);\n      return returnValue;\n    };\n  }\n\n  function createPrototypeRange(constructor, boundaryUpdater, detacher) {\n    function createBeforeAfterNodeSetter(isBefore, isStart) {\n      return function (node) {\n        assertNotDetached(this);\n        assertValidNodeType(node, beforeAfterNodeTypes);\n        assertValidNodeType(getRootContainer(node), rootContainerNodeTypes);\n        var boundary = (isBefore ? getBoundaryBeforeNode : getBoundaryAfterNode)(node);\n        (isStart ? setRangeStart : setRangeEnd)(this, boundary.node, boundary.offset);\n      };\n    }\n\n    function setRangeStart(range, node, offset) {\n      var ec = range.endContainer,\n          eo = range.endOffset;\n\n      if (node !== range.startContainer || offset !== range.startOffset) {\n        // Check the root containers of the range and the new boundary, and also check whether the new boundary\n        // is after the current end. In either case, collapse the range to the new position\n        if (getRootContainer(node) != getRootContainer(ec) || dom.comparePoints(node, offset, ec, eo) == 1) {\n          ec = node;\n          eo = offset;\n        }\n\n        boundaryUpdater(range, node, offset, ec, eo);\n      }\n    }\n\n    function setRangeEnd(range, node, offset) {\n      var sc = range.startContainer,\n          so = range.startOffset;\n\n      if (node !== range.endContainer || offset !== range.endOffset) {\n        // Check the root containers of the range and the new boundary, and also check whether the new boundary\n        // is after the current end. In either case, collapse the range to the new position\n        if (getRootContainer(node) != getRootContainer(sc) || dom.comparePoints(node, offset, sc, so) == -1) {\n          sc = node;\n          so = offset;\n        }\n\n        boundaryUpdater(range, sc, so, node, offset);\n      }\n    }\n\n    function setRangeStartAndEnd(range, node, offset) {\n      if (node !== range.startContainer || offset !== range.startOffset || node !== range.endContainer || offset !== range.endOffset) {\n        boundaryUpdater(range, node, offset, node, offset);\n      }\n    }\n\n    constructor.prototype = new RangePrototype();\n    api.util.extend(constructor.prototype, {\n      setStart: function setStart(node, offset) {\n        assertNotDetached(this);\n        assertNoDocTypeNotationEntityAncestor(node, true);\n        assertValidOffset(node, offset);\n        setRangeStart(this, node, offset);\n      },\n      setEnd: function setEnd(node, offset) {\n        assertNotDetached(this);\n        assertNoDocTypeNotationEntityAncestor(node, true);\n        assertValidOffset(node, offset);\n        setRangeEnd(this, node, offset);\n      },\n      setStartBefore: createBeforeAfterNodeSetter(true, true),\n      setStartAfter: createBeforeAfterNodeSetter(false, true),\n      setEndBefore: createBeforeAfterNodeSetter(true, false),\n      setEndAfter: createBeforeAfterNodeSetter(false, false),\n      collapse: function collapse(isStart) {\n        assertRangeValid(this);\n\n        if (isStart) {\n          boundaryUpdater(this, this.startContainer, this.startOffset, this.startContainer, this.startOffset);\n        } else {\n          boundaryUpdater(this, this.endContainer, this.endOffset, this.endContainer, this.endOffset);\n        }\n      },\n      selectNodeContents: function selectNodeContents(node) {\n        // This doesn't seem well specified: the spec talks only about selecting the node's contents, which\n        // could be taken to mean only its children. However, browsers implement this the same as selectNode for\n        // text nodes, so I shall do likewise\n        assertNotDetached(this);\n        assertNoDocTypeNotationEntityAncestor(node, true);\n        boundaryUpdater(this, node, 0, node, dom.getNodeLength(node));\n      },\n      selectNode: function selectNode(node) {\n        assertNotDetached(this);\n        assertNoDocTypeNotationEntityAncestor(node, false);\n        assertValidNodeType(node, beforeAfterNodeTypes);\n        var start = getBoundaryBeforeNode(node),\n            end = getBoundaryAfterNode(node);\n        boundaryUpdater(this, start.node, start.offset, end.node, end.offset);\n      },\n      extractContents: createRangeContentRemover(extractSubtree, boundaryUpdater),\n      deleteContents: createRangeContentRemover(deleteSubtree, boundaryUpdater),\n      canSurroundContents: function canSurroundContents() {\n        assertRangeValid(this);\n        assertNodeNotReadOnly(this.startContainer);\n        assertNodeNotReadOnly(this.endContainer); // Check if the contents can be surrounded. Specifically, this means whether the range partially selects\n        // no non-text nodes.\n\n        var iterator = new RangeIterator(this, true);\n        var boundariesInvalid = iterator._first && isNonTextPartiallySelected(iterator._first, this) || iterator._last && isNonTextPartiallySelected(iterator._last, this);\n        iterator.detach();\n        return !boundariesInvalid;\n      },\n      detach: function detach() {\n        detacher(this);\n      },\n      splitBoundaries: function splitBoundaries() {\n        assertRangeValid(this);\n        var sc = this.startContainer,\n            so = this.startOffset,\n            ec = this.endContainer,\n            eo = this.endOffset;\n        var startEndSame = sc === ec;\n\n        if (dom.isCharacterDataNode(ec) && eo > 0 && eo < ec.length) {\n          dom.splitDataNode(ec, eo);\n        }\n\n        if (dom.isCharacterDataNode(sc) && so > 0 && so < sc.length) {\n          sc = dom.splitDataNode(sc, so);\n\n          if (startEndSame) {\n            eo -= so;\n            ec = sc;\n          } else if (ec == sc.parentNode && eo >= dom.getNodeIndex(sc)) {\n            eo++;\n          }\n\n          so = 0;\n        }\n\n        boundaryUpdater(this, sc, so, ec, eo);\n      },\n      normalizeBoundaries: function normalizeBoundaries() {\n        assertRangeValid(this);\n        var sc = this.startContainer,\n            so = this.startOffset,\n            ec = this.endContainer,\n            eo = this.endOffset;\n\n        var mergeForward = function mergeForward(node) {\n          var sibling = node.nextSibling;\n\n          if (sibling && sibling.nodeType == node.nodeType) {\n            ec = node;\n            eo = node.length;\n            node.appendData(sibling.data);\n            sibling.parentNode.removeChild(sibling);\n          }\n        };\n\n        var mergeBackward = function mergeBackward(node) {\n          var sibling = node.previousSibling;\n\n          if (sibling && sibling.nodeType == node.nodeType) {\n            sc = node;\n            var nodeLength = node.length;\n            so = sibling.length;\n            node.insertData(0, sibling.data);\n            sibling.parentNode.removeChild(sibling);\n\n            if (sc == ec) {\n              eo += so;\n              ec = sc;\n            } else if (ec == node.parentNode) {\n              var nodeIndex = dom.getNodeIndex(node);\n\n              if (eo == nodeIndex) {\n                ec = node;\n                eo = nodeLength;\n              } else if (eo > nodeIndex) {\n                eo--;\n              }\n            }\n          }\n        };\n\n        var normalizeStart = true;\n\n        if (dom.isCharacterDataNode(ec)) {\n          if (ec.length == eo) {\n            mergeForward(ec);\n          }\n        } else {\n          if (eo > 0) {\n            var endNode = ec.childNodes[eo - 1];\n\n            if (endNode && dom.isCharacterDataNode(endNode)) {\n              mergeForward(endNode);\n            }\n          }\n\n          normalizeStart = !this.collapsed;\n        }\n\n        if (normalizeStart) {\n          if (dom.isCharacterDataNode(sc)) {\n            if (so == 0) {\n              mergeBackward(sc);\n            }\n          } else {\n            if (so < sc.childNodes.length) {\n              var startNode = sc.childNodes[so];\n\n              if (startNode && dom.isCharacterDataNode(startNode)) {\n                mergeBackward(startNode);\n              }\n            }\n          }\n        } else {\n          sc = ec;\n          so = eo;\n        }\n\n        boundaryUpdater(this, sc, so, ec, eo);\n      },\n      collapseToPoint: function collapseToPoint(node, offset) {\n        assertNotDetached(this);\n        assertNoDocTypeNotationEntityAncestor(node, true);\n        assertValidOffset(node, offset);\n        setRangeStartAndEnd(this, node, offset);\n      }\n    });\n    copyComparisonConstants(constructor);\n  }\n  /*----------------------------------------------------------------------------------------------------------------*/\n  // Updates commonAncestorContainer and collapsed after boundary change\n\n\n  function updateCollapsedAndCommonAncestor(range) {\n    range.collapsed = range.startContainer === range.endContainer && range.startOffset === range.endOffset;\n    range.commonAncestorContainer = range.collapsed ? range.startContainer : dom.getCommonAncestor(range.startContainer, range.endContainer);\n  }\n\n  function updateBoundaries(range, startContainer, startOffset, endContainer, endOffset) {\n    var startMoved = range.startContainer !== startContainer || range.startOffset !== startOffset;\n    var endMoved = range.endContainer !== endContainer || range.endOffset !== endOffset;\n    range.startContainer = startContainer;\n    range.startOffset = startOffset;\n    range.endContainer = endContainer;\n    range.endOffset = endOffset;\n    updateCollapsedAndCommonAncestor(range);\n    dispatchEvent(range, \"boundarychange\", {\n      startMoved: startMoved,\n      endMoved: endMoved\n    });\n  }\n\n  function detach(range) {\n    assertNotDetached(range);\n    range.startContainer = range.startOffset = range.endContainer = range.endOffset = null;\n    range.collapsed = range.commonAncestorContainer = null;\n    dispatchEvent(range, \"detach\", null);\n    range._listeners = null;\n  }\n  /**\n   * @constructor\n   */\n\n\n  function Range(doc) {\n    this.startContainer = doc;\n    this.startOffset = 0;\n    this.endContainer = doc;\n    this.endOffset = 0;\n    this._listeners = {\n      boundarychange: [],\n      detach: []\n    };\n    updateCollapsedAndCommonAncestor(this);\n  }\n\n  createPrototypeRange(Range, updateBoundaries, detach);\n  api.rangePrototype = RangePrototype.prototype;\n  Range.rangeProperties = rangeProperties;\n  Range.RangeIterator = RangeIterator;\n  Range.copyComparisonConstants = copyComparisonConstants;\n  Range.createPrototypeRange = createPrototypeRange;\n  Range.inspect = _inspect;\n  Range.getRangeDocument = getRangeDocument;\n\n  Range.rangesEqual = function (r1, r2) {\n    return r1.startContainer === r2.startContainer && r1.startOffset === r2.startOffset && r1.endContainer === r2.endContainer && r1.endOffset === r2.endOffset;\n  };\n\n  api.DomRange = Range;\n  api.RangeException = RangeException;\n});\nrangy.createModule(\"WrappedRange\", function (api, module) {\n  api.requireModules([\"DomUtil\", \"DomRange\"]);\n  /**\n   * @constructor\n   */\n\n  var WrappedRange;\n  var dom = api.dom;\n  var DomPosition = dom.DomPosition;\n  var DomRange = api.DomRange;\n  /*----------------------------------------------------------------------------------------------------------------*/\n\n  /*\n  This is a workaround for a bug where IE returns the wrong container element from the TextRange's parentElement()\n  method. For example, in the following (where pipes denote the selection boundaries):\n   <ul id=\"ul\"><li id=\"a\">| a </li><li id=\"b\"> b |</li></ul>\n   var range = document.selection.createRange();\n  alert(range.parentElement().id); // Should alert \"ul\" but alerts \"b\"\n   This method returns the common ancestor node of the following:\n  - the parentElement() of the textRange\n  - the parentElement() of the textRange after calling collapse(true)\n  - the parentElement() of the textRange after calling collapse(false)\n   */\n\n  function getTextRangeContainerElement(textRange) {\n    var parentEl = textRange.parentElement();\n    var range = textRange.duplicate();\n    range.collapse(true);\n    var startEl = range.parentElement();\n    range = textRange.duplicate();\n    range.collapse(false);\n    var endEl = range.parentElement();\n    var startEndContainer = startEl == endEl ? startEl : dom.getCommonAncestor(startEl, endEl);\n    return startEndContainer == parentEl ? startEndContainer : dom.getCommonAncestor(parentEl, startEndContainer);\n  }\n\n  function textRangeIsCollapsed(textRange) {\n    return textRange.compareEndPoints(\"StartToEnd\", textRange) == 0;\n  } // Gets the boundary of a TextRange expressed as a node and an offset within that node. This function started out as\n  // an improved version of code found in Tim Cameron Ryan's IERange (http://code.google.com/p/ierange/) but has\n  // grown, fixing problems with line breaks in preformatted text, adding workaround for IE TextRange bugs, handling\n  // for inputs and images, plus optimizations.\n\n\n  function getTextRangeBoundaryPosition(textRange, wholeRangeContainerElement, isStart, isCollapsed) {\n    var workingRange = textRange.duplicate();\n    workingRange.collapse(isStart);\n    var containerElement = workingRange.parentElement(); // Sometimes collapsing a TextRange that's at the start of a text node can move it into the previous node, so\n    // check for that\n    // TODO: Find out when. Workaround for wholeRangeContainerElement may break this\n\n    if (!dom.isAncestorOf(wholeRangeContainerElement, containerElement, true)) {\n      containerElement = wholeRangeContainerElement;\n    } // Deal with nodes that cannot \"contain rich HTML markup\". In practice, this means form inputs, images and\n    // similar. See http://msdn.microsoft.com/en-us/library/aa703950%28VS.85%29.aspx\n\n\n    if (!containerElement.canHaveHTML) {\n      return new DomPosition(containerElement.parentNode, dom.getNodeIndex(containerElement));\n    }\n\n    var workingNode = dom.getDocument(containerElement).createElement(\"span\");\n    var comparison,\n        workingComparisonType = isStart ? \"StartToStart\" : \"StartToEnd\";\n    var previousNode, nextNode, boundaryPosition, boundaryNode; // Move the working range through the container's children, starting at the end and working backwards, until the\n    // working range reaches or goes past the boundary we're interested in\n\n    do {\n      containerElement.insertBefore(workingNode, workingNode.previousSibling);\n      workingRange.moveToElementText(workingNode);\n    } while ((comparison = workingRange.compareEndPoints(workingComparisonType, textRange)) > 0 && workingNode.previousSibling); // We've now reached or gone past the boundary of the text range we're interested in\n    // so have identified the node we want\n\n\n    boundaryNode = workingNode.nextSibling;\n\n    if (comparison == -1 && boundaryNode && dom.isCharacterDataNode(boundaryNode)) {\n      // This is a character data node (text, comment, cdata). The working range is collapsed at the start of the\n      // node containing the text range's boundary, so we move the end of the working range to the boundary point\n      // and measure the length of its text to get the boundary's offset within the node.\n      workingRange.setEndPoint(isStart ? \"EndToStart\" : \"EndToEnd\", textRange);\n      var offset;\n\n      if (/[\\r\\n]/.test(boundaryNode.data)) {\n        /*\n        For the particular case of a boundary within a text node containing line breaks (within a <pre> element,\n        for example), we need a slightly complicated approach to get the boundary's offset in IE. The facts:\n         - Each line break is represented as \\r in the text node's data/nodeValue properties\n        - Each line break is represented as \\r\\n in the TextRange's 'text' property\n        - The 'text' property of the TextRange does not contain trailing line breaks\n         To get round the problem presented by the final fact above, we can use the fact that TextRange's\n        moveStart() and moveEnd() methods return the actual number of characters moved, which is not necessarily\n        the same as the number of characters it was instructed to move. The simplest approach is to use this to\n        store the characters moved when moving both the start and end of the range to the start of the document\n        body and subtracting the start offset from the end offset (the \"move-negative-gazillion\" method).\n        However, this is extremely slow when the document is large and the range is near the end of it. Clearly\n        doing the mirror image (i.e. moving the range boundaries to the end of the document) has the same\n        problem.\n         Another approach that works is to use moveStart() to move the start boundary of the range up to the end\n        boundary one character at a time and incrementing a counter with the value returned by the moveStart()\n        call. However, the check for whether the start boundary has reached the end boundary is expensive, so\n        this method is slow (although unlike \"move-negative-gazillion\" is largely unaffected by the location of\n        the range within the document).\n         The method below is a hybrid of the two methods above. It uses the fact that a string containing the\n        TextRange's 'text' property with each \\r\\n converted to a single \\r character cannot be longer than the\n        text of the TextRange, so the start of the range is moved that length initially and then a character at\n        a time to make up for any trailing line breaks not contained in the 'text' property. This has good\n        performance in most situations compared to the previous two methods.\n        */\n        var tempRange = workingRange.duplicate();\n        var rangeLength = tempRange.text.replace(/\\r\\n/g, \"\\r\").length;\n        offset = tempRange.moveStart(\"character\", rangeLength);\n\n        while ((comparison = tempRange.compareEndPoints(\"StartToEnd\", tempRange)) == -1) {\n          offset++;\n          tempRange.moveStart(\"character\", 1);\n        }\n      } else {\n        offset = workingRange.text.length;\n      }\n\n      boundaryPosition = new DomPosition(boundaryNode, offset);\n    } else {\n      // If the boundary immediately follows a character data node and this is the end boundary, we should favour\n      // a position within that, and likewise for a start boundary preceding a character data node\n      previousNode = (isCollapsed || !isStart) && workingNode.previousSibling;\n      nextNode = (isCollapsed || isStart) && workingNode.nextSibling;\n\n      if (nextNode && dom.isCharacterDataNode(nextNode)) {\n        boundaryPosition = new DomPosition(nextNode, 0);\n      } else if (previousNode && dom.isCharacterDataNode(previousNode)) {\n        boundaryPosition = new DomPosition(previousNode, previousNode.length);\n      } else {\n        boundaryPosition = new DomPosition(containerElement, dom.getNodeIndex(workingNode));\n      }\n    } // Clean up\n\n\n    workingNode.parentNode.removeChild(workingNode);\n    return boundaryPosition;\n  } // Returns a TextRange representing the boundary of a TextRange expressed as a node and an offset within that node.\n  // This function started out as an optimized version of code found in Tim Cameron Ryan's IERange\n  // (http://code.google.com/p/ierange/)\n\n\n  function createBoundaryTextRange(boundaryPosition, isStart) {\n    var boundaryNode,\n        boundaryParent,\n        boundaryOffset = boundaryPosition.offset;\n    var doc = dom.getDocument(boundaryPosition.node);\n    var workingNode,\n        childNodes,\n        workingRange = doc.body.createTextRange();\n    var nodeIsDataNode = dom.isCharacterDataNode(boundaryPosition.node);\n\n    if (nodeIsDataNode) {\n      boundaryNode = boundaryPosition.node;\n      boundaryParent = boundaryNode.parentNode;\n    } else {\n      childNodes = boundaryPosition.node.childNodes;\n      boundaryNode = boundaryOffset < childNodes.length ? childNodes[boundaryOffset] : null;\n      boundaryParent = boundaryPosition.node;\n    } // Position the range immediately before the node containing the boundary\n\n\n    workingNode = doc.createElement(\"span\"); // Making the working element non-empty element persuades IE to consider the TextRange boundary to be within the\n    // element rather than immediately before or after it, which is what we want\n\n    workingNode.innerHTML = \"&#feff;\"; // insertBefore is supposed to work like appendChild if the second parameter is null. However, a bug report\n    // for IERange suggests that it can crash the browser: http://code.google.com/p/ierange/issues/detail?id=12\n\n    if (boundaryNode) {\n      boundaryParent.insertBefore(workingNode, boundaryNode);\n    } else {\n      boundaryParent.appendChild(workingNode);\n    }\n\n    workingRange.moveToElementText(workingNode);\n    workingRange.collapse(!isStart); // Clean up\n\n    boundaryParent.removeChild(workingNode); // Move the working range to the text offset, if required\n\n    if (nodeIsDataNode) {\n      workingRange[isStart ? \"moveStart\" : \"moveEnd\"](\"character\", boundaryOffset);\n    }\n\n    return workingRange;\n  }\n  /*----------------------------------------------------------------------------------------------------------------*/\n\n\n  if (api.features.implementsDomRange && (!api.features.implementsTextRange || !api.config.preferTextRange)) {\n    // This is a wrapper around the browser's native DOM Range. It has two aims:\n    // - Provide workarounds for specific browser bugs\n    // - provide convenient extensions, which are inherited from Rangy's DomRange\n    (function () {\n      var rangeProto;\n      var rangeProperties = DomRange.rangeProperties;\n      var canSetRangeStartAfterEnd;\n\n      function updateRangeProperties(range) {\n        var i = rangeProperties.length,\n            prop;\n\n        while (i--) {\n          prop = rangeProperties[i];\n          range[prop] = range.nativeRange[prop];\n        }\n      }\n\n      function updateNativeRange(range, startContainer, startOffset, endContainer, endOffset) {\n        var startMoved = range.startContainer !== startContainer || range.startOffset != startOffset;\n        var endMoved = range.endContainer !== endContainer || range.endOffset != endOffset; // Always set both boundaries for the benefit of IE9 (see issue 35)\n\n        if (startMoved || endMoved) {\n          range.setEnd(endContainer, endOffset);\n          range.setStart(startContainer, startOffset);\n        }\n      }\n\n      function detach(range) {\n        range.nativeRange.detach();\n        range.detached = true;\n        var i = rangeProperties.length,\n            prop;\n\n        while (i--) {\n          prop = rangeProperties[i];\n          range[prop] = null;\n        }\n      }\n\n      var createBeforeAfterNodeSetter;\n\n      WrappedRange = function WrappedRange(range) {\n        if (!range) {\n          throw new Error(\"Range must be specified\");\n        }\n\n        this.nativeRange = range;\n        updateRangeProperties(this);\n      };\n\n      DomRange.createPrototypeRange(WrappedRange, updateNativeRange, detach);\n      rangeProto = WrappedRange.prototype;\n\n      rangeProto.selectNode = function (node) {\n        this.nativeRange.selectNode(node);\n        updateRangeProperties(this);\n      };\n\n      rangeProto.deleteContents = function () {\n        this.nativeRange.deleteContents();\n        updateRangeProperties(this);\n      };\n\n      rangeProto.extractContents = function () {\n        var frag = this.nativeRange.extractContents();\n        updateRangeProperties(this);\n        return frag;\n      };\n\n      rangeProto.cloneContents = function () {\n        return this.nativeRange.cloneContents();\n      }; // TODO: Until I can find a way to programmatically trigger the Firefox bug (apparently long-standing, still\n      // present in 3.6.8) that throws \"Index or size is negative or greater than the allowed amount\" for\n      // insertNode in some circumstances, all browsers will have to use the Rangy's own implementation of\n      // insertNode, which works but is almost certainly slower than the native implementation.\n\n      /*\n                  rangeProto.insertNode = function(node) {\n                      this.nativeRange.insertNode(node);\n                      updateRangeProperties(this);\n                  };\n      */\n\n\n      rangeProto.surroundContents = function (node) {\n        this.nativeRange.surroundContents(node);\n        updateRangeProperties(this);\n      };\n\n      rangeProto.collapse = function (isStart) {\n        this.nativeRange.collapse(isStart);\n        updateRangeProperties(this);\n      };\n\n      rangeProto.cloneRange = function () {\n        return new WrappedRange(this.nativeRange.cloneRange());\n      };\n\n      rangeProto.refresh = function () {\n        updateRangeProperties(this);\n      };\n\n      rangeProto.toString = function () {\n        return this.nativeRange.toString();\n      }; // Create test range and node for feature detection\n\n\n      var testTextNode = document.createTextNode(\"test\");\n      dom.getBody(document).appendChild(testTextNode);\n      var range = document.createRange();\n      /*--------------------------------------------------------------------------------------------------------*/\n      // Test for Firefox 2 bug that prevents moving the start of a Range to a point after its current end and\n      // correct for it\n\n      range.setStart(testTextNode, 0);\n      range.setEnd(testTextNode, 0);\n\n      try {\n        range.setStart(testTextNode, 1);\n        canSetRangeStartAfterEnd = true;\n\n        rangeProto.setStart = function (node, offset) {\n          this.nativeRange.setStart(node, offset);\n          updateRangeProperties(this);\n        };\n\n        rangeProto.setEnd = function (node, offset) {\n          this.nativeRange.setEnd(node, offset);\n          updateRangeProperties(this);\n        };\n\n        createBeforeAfterNodeSetter = function createBeforeAfterNodeSetter(name) {\n          return function (node) {\n            this.nativeRange[name](node);\n            updateRangeProperties(this);\n          };\n        };\n      } catch (ex) {\n        canSetRangeStartAfterEnd = false;\n\n        rangeProto.setStart = function (node, offset) {\n          try {\n            this.nativeRange.setStart(node, offset);\n          } catch (ex) {\n            this.nativeRange.setEnd(node, offset);\n            this.nativeRange.setStart(node, offset);\n          }\n\n          updateRangeProperties(this);\n        };\n\n        rangeProto.setEnd = function (node, offset) {\n          try {\n            this.nativeRange.setEnd(node, offset);\n          } catch (ex) {\n            this.nativeRange.setStart(node, offset);\n            this.nativeRange.setEnd(node, offset);\n          }\n\n          updateRangeProperties(this);\n        };\n\n        createBeforeAfterNodeSetter = function createBeforeAfterNodeSetter(name, oppositeName) {\n          return function (node) {\n            try {\n              this.nativeRange[name](node);\n            } catch (ex) {\n              this.nativeRange[oppositeName](node);\n              this.nativeRange[name](node);\n            }\n\n            updateRangeProperties(this);\n          };\n        };\n      }\n\n      rangeProto.setStartBefore = createBeforeAfterNodeSetter(\"setStartBefore\", \"setEndBefore\");\n      rangeProto.setStartAfter = createBeforeAfterNodeSetter(\"setStartAfter\", \"setEndAfter\");\n      rangeProto.setEndBefore = createBeforeAfterNodeSetter(\"setEndBefore\", \"setStartBefore\");\n      rangeProto.setEndAfter = createBeforeAfterNodeSetter(\"setEndAfter\", \"setStartAfter\");\n      /*--------------------------------------------------------------------------------------------------------*/\n      // Test for and correct Firefox 2 behaviour with selectNodeContents on text nodes: it collapses the range to\n      // the 0th character of the text node\n\n      range.selectNodeContents(testTextNode);\n\n      if (range.startContainer == testTextNode && range.endContainer == testTextNode && range.startOffset == 0 && range.endOffset == testTextNode.length) {\n        rangeProto.selectNodeContents = function (node) {\n          this.nativeRange.selectNodeContents(node);\n          updateRangeProperties(this);\n        };\n      } else {\n        rangeProto.selectNodeContents = function (node) {\n          this.setStart(node, 0);\n          this.setEnd(node, DomRange.getEndOffset(node));\n        };\n      }\n      /*--------------------------------------------------------------------------------------------------------*/\n      // Test for WebKit bug that has the beahviour of compareBoundaryPoints round the wrong way for constants\n      // START_TO_END and END_TO_START: https://bugs.webkit.org/show_bug.cgi?id=20738\n\n\n      range.selectNodeContents(testTextNode);\n      range.setEnd(testTextNode, 3);\n      var range2 = document.createRange();\n      range2.selectNodeContents(testTextNode);\n      range2.setEnd(testTextNode, 4);\n      range2.setStart(testTextNode, 2);\n\n      if (range.compareBoundaryPoints(range.START_TO_END, range2) == -1 & range.compareBoundaryPoints(range.END_TO_START, range2) == 1) {\n        // This is the wrong way round, so correct for it\n        rangeProto.compareBoundaryPoints = function (type, range) {\n          range = range.nativeRange || range;\n\n          if (type == range.START_TO_END) {\n            type = range.END_TO_START;\n          } else if (type == range.END_TO_START) {\n            type = range.START_TO_END;\n          }\n\n          return this.nativeRange.compareBoundaryPoints(type, range);\n        };\n      } else {\n        rangeProto.compareBoundaryPoints = function (type, range) {\n          return this.nativeRange.compareBoundaryPoints(type, range.nativeRange || range);\n        };\n      }\n      /*--------------------------------------------------------------------------------------------------------*/\n      // Test for existence of createContextualFragment and delegate to it if it exists\n\n\n      if (api.util.isHostMethod(range, \"createContextualFragment\")) {\n        rangeProto.createContextualFragment = function (fragmentStr) {\n          return this.nativeRange.createContextualFragment(fragmentStr);\n        };\n      }\n      /*--------------------------------------------------------------------------------------------------------*/\n      // Clean up\n\n\n      dom.getBody(document).removeChild(testTextNode);\n      range.detach();\n      range2.detach();\n    })();\n\n    api.createNativeRange = function (doc) {\n      doc = doc || document;\n      return doc.createRange();\n    };\n  } else if (api.features.implementsTextRange) {\n    // This is a wrapper around a TextRange, providing full DOM Range functionality using rangy's DomRange as a\n    // prototype\n    WrappedRange = function WrappedRange(textRange) {\n      this.textRange = textRange;\n      this.refresh();\n    };\n\n    WrappedRange.prototype = new DomRange(document);\n\n    WrappedRange.prototype.refresh = function () {\n      var start, end; // TextRange's parentElement() method cannot be trusted. getTextRangeContainerElement() works around that.\n\n      var rangeContainerElement = getTextRangeContainerElement(this.textRange);\n\n      if (textRangeIsCollapsed(this.textRange)) {\n        end = start = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, true, true);\n      } else {\n        start = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, true, false);\n        end = getTextRangeBoundaryPosition(this.textRange, rangeContainerElement, false, false);\n      }\n\n      this.setStart(start.node, start.offset);\n      this.setEnd(end.node, end.offset);\n    };\n\n    DomRange.copyComparisonConstants(WrappedRange); // Add WrappedRange as the Range property of the global object to allow expression like Range.END_TO_END to work\n\n    var globalObj = function () {\n      return this;\n    }();\n\n    if (typeof globalObj.Range == \"undefined\") {\n      globalObj.Range = WrappedRange;\n    }\n\n    api.createNativeRange = function (doc) {\n      doc = doc || document;\n      return doc.body.createTextRange();\n    };\n  }\n\n  if (api.features.implementsTextRange) {\n    WrappedRange.rangeToTextRange = function (range) {\n      if (range.collapsed) {\n        var tr = createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);\n        return tr; //return createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);\n      } else {\n        var startRange = createBoundaryTextRange(new DomPosition(range.startContainer, range.startOffset), true);\n        var endRange = createBoundaryTextRange(new DomPosition(range.endContainer, range.endOffset), false);\n        var textRange = dom.getDocument(range.startContainer).body.createTextRange();\n        textRange.setEndPoint(\"StartToStart\", startRange);\n        textRange.setEndPoint(\"EndToEnd\", endRange);\n        return textRange;\n      }\n    };\n  }\n\n  WrappedRange.prototype.getName = function () {\n    return \"WrappedRange\";\n  };\n\n  api.WrappedRange = WrappedRange;\n\n  api.createRange = function (doc) {\n    doc = doc || document;\n    return new WrappedRange(api.createNativeRange(doc));\n  };\n\n  api.createRangyRange = function (doc) {\n    doc = doc || document;\n    return new DomRange(doc);\n  };\n\n  api.createIframeRange = function (iframeEl) {\n    return api.createRange(dom.getIframeDocument(iframeEl));\n  };\n\n  api.createIframeRangyRange = function (iframeEl) {\n    return api.createRangyRange(dom.getIframeDocument(iframeEl));\n  };\n\n  api.addCreateMissingNativeApiListener(function (win) {\n    var doc = win.document;\n\n    if (typeof doc.createRange == \"undefined\") {\n      doc.createRange = function () {\n        return api.createRange(this);\n      };\n    }\n\n    doc = win = null;\n  });\n});\nrangy.createModule(\"WrappedSelection\", function (api, module) {\n  // This will create a selection object wrapper that follows the Selection object found in the WHATWG draft DOM Range\n  // spec (http://html5.org/specs/dom-range.html)\n  api.requireModules([\"DomUtil\", \"DomRange\", \"WrappedRange\"]);\n  api.config.checkSelectionRanges = true;\n  var BOOLEAN = \"boolean\",\n      windowPropertyName = \"_rangySelection\",\n      dom = api.dom,\n      util = api.util,\n      DomRange = api.DomRange,\n      WrappedRange = api.WrappedRange,\n      DOMException = api.DOMException,\n      DomPosition = dom.DomPosition,\n      getSelection,\n      selectionIsCollapsed,\n      CONTROL = \"Control\";\n\n  function getWinSelection(winParam) {\n    return (winParam || window).getSelection();\n  }\n\n  function getDocSelection(winParam) {\n    return (winParam || window).document.selection;\n  } // Test for the Range/TextRange and Selection features required\n  // Test for ability to retrieve selection\n\n\n  var implementsWinGetSelection = api.util.isHostMethod(window, \"getSelection\"),\n      implementsDocSelection = api.util.isHostObject(document, \"selection\");\n  var useDocumentSelection = implementsDocSelection && (!implementsWinGetSelection || api.config.preferTextRange);\n\n  if (useDocumentSelection) {\n    getSelection = getDocSelection;\n\n    api.isSelectionValid = function (winParam) {\n      var doc = (winParam || window).document,\n          nativeSel = doc.selection; // Check whether the selection TextRange is actually contained within the correct document\n\n      return nativeSel.type != \"None\" || dom.getDocument(nativeSel.createRange().parentElement()) == doc;\n    };\n  } else if (implementsWinGetSelection) {\n    getSelection = getWinSelection;\n\n    api.isSelectionValid = function () {\n      return true;\n    };\n  } else {\n    module.fail(\"Neither document.selection or window.getSelection() detected.\");\n  }\n\n  api.getNativeSelection = getSelection;\n  var testSelection = getSelection();\n  var testRange = api.createNativeRange(document);\n  var body = dom.getBody(document); // Obtaining a range from a selection\n\n  var selectionHasAnchorAndFocus = util.areHostObjects(testSelection,  true && util.areHostProperties(testSelection, [\"anchorOffset\", \"focusOffset\"]));\n  api.features.selectionHasAnchorAndFocus = selectionHasAnchorAndFocus; // Test for existence of native selection extend() method\n\n  var selectionHasExtend = util.isHostMethod(testSelection, \"extend\");\n  api.features.selectionHasExtend = selectionHasExtend; // Test if rangeCount exists\n\n  var selectionHasRangeCount = typeof testSelection.rangeCount == \"number\";\n  api.features.selectionHasRangeCount = selectionHasRangeCount;\n  var selectionSupportsMultipleRanges = false;\n  var collapsedNonEditableSelectionsSupported = true;\n\n  if (util.areHostMethods(testSelection, [\"addRange\", \"getRangeAt\", \"removeAllRanges\"]) && typeof testSelection.rangeCount == \"number\" && api.features.implementsDomRange) {\n    (function () {\n      var iframe = document.createElement(\"iframe\");\n      iframe.frameBorder = 0;\n      iframe.style.position = \"absolute\";\n      iframe.style.left = \"-10000px\";\n      body.appendChild(iframe);\n      var iframeDoc = dom.getIframeDocument(iframe);\n      iframeDoc.open();\n      iframeDoc.write(\"<html><head></head><body>12</body></html>\");\n      iframeDoc.close();\n      var sel = dom.getIframeWindow(iframe).getSelection();\n      var docEl = iframeDoc.documentElement;\n      var iframeBody = docEl.lastChild,\n          textNode = iframeBody.firstChild; // Test whether the native selection will allow a collapsed selection within a non-editable element\n\n      var r1 = iframeDoc.createRange();\n      r1.setStart(textNode, 1);\n      r1.collapse(true);\n      sel.addRange(r1);\n      collapsedNonEditableSelectionsSupported = sel.rangeCount == 1;\n      sel.removeAllRanges(); // Test whether the native selection is capable of supporting multiple ranges\n\n      var r2 = r1.cloneRange();\n      r1.setStart(textNode, 0);\n      r2.setEnd(textNode, 2);\n      sel.addRange(r1);\n      sel.addRange(r2);\n      selectionSupportsMultipleRanges = sel.rangeCount == 2; // Clean up\n\n      r1.detach();\n      r2.detach();\n      body.removeChild(iframe);\n    })();\n  }\n\n  api.features.selectionSupportsMultipleRanges = selectionSupportsMultipleRanges;\n  api.features.collapsedNonEditableSelectionsSupported = collapsedNonEditableSelectionsSupported; // ControlRanges\n\n  var implementsControlRange = false,\n      testControlRange;\n\n  if (body && util.isHostMethod(body, \"createControlRange\")) {\n    testControlRange = body.createControlRange();\n\n    if (util.areHostProperties(testControlRange, [\"item\", \"add\"])) {\n      implementsControlRange = true;\n    }\n  }\n\n  api.features.implementsControlRange = implementsControlRange; // Selection collapsedness\n\n  if (selectionHasAnchorAndFocus) {\n    selectionIsCollapsed = function selectionIsCollapsed(sel) {\n      return sel.anchorNode === sel.focusNode && sel.anchorOffset === sel.focusOffset;\n    };\n  } else {\n    selectionIsCollapsed = function selectionIsCollapsed(sel) {\n      return sel.rangeCount ? sel.getRangeAt(sel.rangeCount - 1).collapsed : false;\n    };\n  }\n\n  function updateAnchorAndFocusFromRange(sel, range, backwards) {\n    var anchorPrefix = backwards ? \"end\" : \"start\",\n        focusPrefix = backwards ? \"start\" : \"end\";\n    sel.anchorNode = range[anchorPrefix + \"Container\"];\n    sel.anchorOffset = range[anchorPrefix + \"Offset\"];\n    sel.focusNode = range[focusPrefix + \"Container\"];\n    sel.focusOffset = range[focusPrefix + \"Offset\"];\n  }\n\n  function updateAnchorAndFocusFromNativeSelection(sel) {\n    var nativeSel = sel.nativeSelection;\n    sel.anchorNode = nativeSel.anchorNode;\n    sel.anchorOffset = nativeSel.anchorOffset;\n    sel.focusNode = nativeSel.focusNode;\n    sel.focusOffset = nativeSel.focusOffset;\n  }\n\n  function updateEmptySelection(sel) {\n    sel.anchorNode = sel.focusNode = null;\n    sel.anchorOffset = sel.focusOffset = 0;\n    sel.rangeCount = 0;\n    sel.isCollapsed = true;\n    sel._ranges.length = 0;\n  }\n\n  function getNativeRange(range) {\n    var nativeRange;\n\n    if (range instanceof DomRange) {\n      nativeRange = range._selectionNativeRange;\n\n      if (!nativeRange) {\n        nativeRange = api.createNativeRange(dom.getDocument(range.startContainer));\n        nativeRange.setEnd(range.endContainer, range.endOffset);\n        nativeRange.setStart(range.startContainer, range.startOffset);\n        range._selectionNativeRange = nativeRange;\n        range.attachListener(\"detach\", function () {\n          this._selectionNativeRange = null;\n        });\n      }\n    } else if (range instanceof WrappedRange) {\n      nativeRange = range.nativeRange;\n    } else if (api.features.implementsDomRange && range instanceof dom.getWindow(range.startContainer).Range) {\n      nativeRange = range;\n    }\n\n    return nativeRange;\n  }\n\n  function rangeContainsSingleElement(rangeNodes) {\n    if (!rangeNodes.length || rangeNodes[0].nodeType != 1) {\n      return false;\n    }\n\n    for (var i = 1, len = rangeNodes.length; i < len; ++i) {\n      if (!dom.isAncestorOf(rangeNodes[0], rangeNodes[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getSingleElementFromRange(range) {\n    var nodes = range.getNodes();\n\n    if (!rangeContainsSingleElement(nodes)) {\n      throw new Error(\"getSingleElementFromRange: range \" + range.inspect() + \" did not consist of a single element\");\n    }\n\n    return nodes[0];\n  }\n\n  function isTextRange(range) {\n    return !!range && typeof range.text != \"undefined\";\n  }\n\n  function updateFromTextRange(sel, range) {\n    // Create a Range from the selected TextRange\n    var wrappedRange = new WrappedRange(range);\n    sel._ranges = [wrappedRange];\n    updateAnchorAndFocusFromRange(sel, wrappedRange, false);\n    sel.rangeCount = 1;\n    sel.isCollapsed = wrappedRange.collapsed;\n  }\n\n  function updateControlSelection(sel) {\n    // Update the wrapped selection based on what's now in the native selection\n    sel._ranges.length = 0;\n\n    if (sel.docSelection.type == \"None\") {\n      updateEmptySelection(sel);\n    } else {\n      var controlRange = sel.docSelection.createRange();\n\n      if (isTextRange(controlRange)) {\n        // This case (where the selection type is \"Control\" and calling createRange() on the selection returns\n        // a TextRange) can happen in IE 9. It happens, for example, when all elements in the selected\n        // ControlRange have been removed from the ControlRange and removed from the document.\n        updateFromTextRange(sel, controlRange);\n      } else {\n        sel.rangeCount = controlRange.length;\n        var range,\n            doc = dom.getDocument(controlRange.item(0));\n\n        for (var i = 0; i < sel.rangeCount; ++i) {\n          range = api.createRange(doc);\n          range.selectNode(controlRange.item(i));\n\n          sel._ranges.push(range);\n        }\n\n        sel.isCollapsed = sel.rangeCount == 1 && sel._ranges[0].collapsed;\n        updateAnchorAndFocusFromRange(sel, sel._ranges[sel.rangeCount - 1], false);\n      }\n    }\n  }\n\n  function addRangeToControlSelection(sel, range) {\n    var controlRange = sel.docSelection.createRange();\n    var rangeElement = getSingleElementFromRange(range); // Create a new ControlRange containing all the elements in the selected ControlRange plus the element\n    // contained by the supplied range\n\n    var doc = dom.getDocument(controlRange.item(0));\n    var newControlRange = dom.getBody(doc).createControlRange();\n\n    for (var i = 0, len = controlRange.length; i < len; ++i) {\n      newControlRange.add(controlRange.item(i));\n    }\n\n    try {\n      newControlRange.add(rangeElement);\n    } catch (ex) {\n      throw new Error(\"addRange(): Element within the specified Range could not be added to control selection (does it have layout?)\");\n    }\n\n    newControlRange.select(); // Update the wrapped selection based on what's now in the native selection\n\n    updateControlSelection(sel);\n  }\n\n  var getSelectionRangeAt;\n\n  if (util.isHostMethod(testSelection, \"getRangeAt\")) {\n    getSelectionRangeAt = function getSelectionRangeAt(sel, index) {\n      try {\n        return sel.getRangeAt(index);\n      } catch (ex) {\n        return null;\n      }\n    };\n  } else if (selectionHasAnchorAndFocus) {\n    getSelectionRangeAt = function getSelectionRangeAt(sel) {\n      var doc = dom.getDocument(sel.anchorNode);\n      var range = api.createRange(doc);\n      range.setStart(sel.anchorNode, sel.anchorOffset);\n      range.setEnd(sel.focusNode, sel.focusOffset); // Handle the case when the selection was selected backwards (from the end to the start in the\n      // document)\n\n      if (range.collapsed !== this.isCollapsed) {\n        range.setStart(sel.focusNode, sel.focusOffset);\n        range.setEnd(sel.anchorNode, sel.anchorOffset);\n      }\n\n      return range;\n    };\n  }\n  /**\n   * @constructor\n   */\n\n\n  function WrappedSelection(selection, docSelection, win) {\n    this.nativeSelection = selection;\n    this.docSelection = docSelection;\n    this._ranges = [];\n    this.win = win;\n    this.refresh();\n  }\n\n  api.getSelection = function (win) {\n    win = win || window;\n    var sel = win[windowPropertyName];\n    var nativeSel = getSelection(win),\n        docSel = implementsDocSelection ? getDocSelection(win) : null;\n\n    if (sel) {\n      sel.nativeSelection = nativeSel;\n      sel.docSelection = docSel;\n      sel.refresh(win);\n    } else {\n      sel = new WrappedSelection(nativeSel, docSel, win);\n      win[windowPropertyName] = sel;\n    }\n\n    return sel;\n  };\n\n  api.getIframeSelection = function (iframeEl) {\n    return api.getSelection(dom.getIframeWindow(iframeEl));\n  };\n\n  var selProto = WrappedSelection.prototype;\n\n  function createControlSelection(sel, ranges) {\n    // Ensure that the selection becomes of type \"Control\"\n    var doc = dom.getDocument(ranges[0].startContainer);\n    var controlRange = dom.getBody(doc).createControlRange();\n\n    for (var i = 0, el; i < rangeCount; ++i) {\n      el = getSingleElementFromRange(ranges[i]);\n\n      try {\n        controlRange.add(el);\n      } catch (ex) {\n        throw new Error(\"setRanges(): Element within the one of the specified Ranges could not be added to control selection (does it have layout?)\");\n      }\n    }\n\n    controlRange.select(); // Update the wrapped selection based on what's now in the native selection\n\n    updateControlSelection(sel);\n  } // Selecting a range\n\n\n  if (!useDocumentSelection && selectionHasAnchorAndFocus && util.areHostMethods(testSelection, [\"removeAllRanges\", \"addRange\"])) {\n    selProto.removeAllRanges = function () {\n      this.nativeSelection.removeAllRanges();\n      updateEmptySelection(this);\n    };\n\n    var addRangeBackwards = function addRangeBackwards(sel, range) {\n      var doc = DomRange.getRangeDocument(range);\n      var endRange = api.createRange(doc);\n      endRange.collapseToPoint(range.endContainer, range.endOffset);\n      sel.nativeSelection.addRange(getNativeRange(endRange));\n      sel.nativeSelection.extend(range.startContainer, range.startOffset);\n      sel.refresh();\n    };\n\n    if (selectionHasRangeCount) {\n      selProto.addRange = function (range, backwards) {\n        if (implementsControlRange && implementsDocSelection && this.docSelection.type == CONTROL) {\n          addRangeToControlSelection(this, range);\n        } else {\n          if (backwards && selectionHasExtend) {\n            addRangeBackwards(this, range);\n          } else {\n            var previousRangeCount;\n\n            if (selectionSupportsMultipleRanges) {\n              previousRangeCount = this.rangeCount;\n            } else {\n              this.removeAllRanges();\n              previousRangeCount = 0;\n            }\n\n            this.nativeSelection.addRange(getNativeRange(range)); // Check whether adding the range was successful\n\n            this.rangeCount = this.nativeSelection.rangeCount;\n\n            if (this.rangeCount == previousRangeCount + 1) {\n              // The range was added successfully\n              // Check whether the range that we added to the selection is reflected in the last range extracted from\n              // the selection\n              if (api.config.checkSelectionRanges) {\n                var nativeRange = getSelectionRangeAt(this.nativeSelection, this.rangeCount - 1);\n\n                if (nativeRange && !DomRange.rangesEqual(nativeRange, range)) {\n                  // Happens in WebKit with, for example, a selection placed at the start of a text node\n                  range = new WrappedRange(nativeRange);\n                }\n              }\n\n              this._ranges[this.rangeCount - 1] = range;\n              updateAnchorAndFocusFromRange(this, range, selectionIsBackwards(this.nativeSelection));\n              this.isCollapsed = selectionIsCollapsed(this);\n            } else {\n              // The range was not added successfully. The simplest thing is to refresh\n              this.refresh();\n            }\n          }\n        }\n      };\n    } else {\n      selProto.addRange = function (range, backwards) {\n        if (backwards && selectionHasExtend) {\n          addRangeBackwards(this, range);\n        } else {\n          this.nativeSelection.addRange(getNativeRange(range));\n          this.refresh();\n        }\n      };\n    }\n\n    selProto.setRanges = function (ranges) {\n      if (implementsControlRange && ranges.length > 1) {\n        createControlSelection(this, ranges);\n      } else {\n        this.removeAllRanges();\n\n        for (var i = 0, len = ranges.length; i < len; ++i) {\n          this.addRange(ranges[i]);\n        }\n      }\n    };\n  } else if (util.isHostMethod(testSelection, \"empty\") && util.isHostMethod(testRange, \"select\") && implementsControlRange && useDocumentSelection) {\n    selProto.removeAllRanges = function () {\n      // Added try/catch as fix for issue #21\n      try {\n        this.docSelection.empty(); // Check for empty() not working (issue #24)\n\n        if (this.docSelection.type != \"None\") {\n          // Work around failure to empty a control selection by instead selecting a TextRange and then\n          // calling empty()\n          var doc;\n\n          if (this.anchorNode) {\n            doc = dom.getDocument(this.anchorNode);\n          } else if (this.docSelection.type == CONTROL) {\n            var controlRange = this.docSelection.createRange();\n\n            if (controlRange.length) {\n              doc = dom.getDocument(controlRange.item(0)).body.createTextRange();\n            }\n          }\n\n          if (doc) {\n            var textRange = doc.body.createTextRange();\n            textRange.select();\n            this.docSelection.empty();\n          }\n        }\n      } catch (ex) {}\n\n      updateEmptySelection(this);\n    };\n\n    selProto.addRange = function (range) {\n      if (this.docSelection.type == CONTROL) {\n        addRangeToControlSelection(this, range);\n      } else {\n        WrappedRange.rangeToTextRange(range).select();\n        this._ranges[0] = range;\n        this.rangeCount = 1;\n        this.isCollapsed = this._ranges[0].collapsed;\n        updateAnchorAndFocusFromRange(this, range, false);\n      }\n    };\n\n    selProto.setRanges = function (ranges) {\n      this.removeAllRanges();\n      var rangeCount = ranges.length;\n\n      if (rangeCount > 1) {\n        createControlSelection(this, ranges);\n      } else if (rangeCount) {\n        this.addRange(ranges[0]);\n      }\n    };\n  } else {\n    module.fail(\"No means of selecting a Range or TextRange was found\");\n    return false;\n  }\n\n  selProto.getRangeAt = function (index) {\n    if (index < 0 || index >= this.rangeCount) {\n      throw new DOMException(\"INDEX_SIZE_ERR\");\n    } else {\n      return this._ranges[index];\n    }\n  };\n\n  var refreshSelection;\n\n  if (useDocumentSelection) {\n    refreshSelection = function refreshSelection(sel) {\n      var range;\n\n      if (api.isSelectionValid(sel.win)) {\n        range = sel.docSelection.createRange();\n      } else {\n        range = dom.getBody(sel.win.document).createTextRange();\n        range.collapse(true);\n      }\n\n      if (sel.docSelection.type == CONTROL) {\n        updateControlSelection(sel);\n      } else if (isTextRange(range)) {\n        updateFromTextRange(sel, range);\n      } else {\n        updateEmptySelection(sel);\n      }\n    };\n  } else if (util.isHostMethod(testSelection, \"getRangeAt\") && typeof testSelection.rangeCount == \"number\") {\n    refreshSelection = function refreshSelection(sel) {\n      if (implementsControlRange && implementsDocSelection && sel.docSelection.type == CONTROL) {\n        updateControlSelection(sel);\n      } else {\n        sel._ranges.length = sel.rangeCount = sel.nativeSelection.rangeCount;\n\n        if (sel.rangeCount) {\n          for (var i = 0, len = sel.rangeCount; i < len; ++i) {\n            sel._ranges[i] = new api.WrappedRange(sel.nativeSelection.getRangeAt(i));\n          }\n\n          updateAnchorAndFocusFromRange(sel, sel._ranges[sel.rangeCount - 1], selectionIsBackwards(sel.nativeSelection));\n          sel.isCollapsed = selectionIsCollapsed(sel);\n        } else {\n          updateEmptySelection(sel);\n        }\n      }\n    };\n  } else if (selectionHasAnchorAndFocus && _typeof(testSelection.isCollapsed) == BOOLEAN && _typeof(testRange.collapsed) == BOOLEAN && api.features.implementsDomRange) {\n    refreshSelection = function refreshSelection(sel) {\n      var range,\n          nativeSel = sel.nativeSelection;\n\n      if (nativeSel.anchorNode) {\n        range = getSelectionRangeAt(nativeSel, 0);\n        sel._ranges = [range];\n        sel.rangeCount = 1;\n        updateAnchorAndFocusFromNativeSelection(sel);\n        sel.isCollapsed = selectionIsCollapsed(sel);\n      } else {\n        updateEmptySelection(sel);\n      }\n    };\n  } else {\n    module.fail(\"No means of obtaining a Range or TextRange from the user's selection was found\");\n    return false;\n  }\n\n  selProto.refresh = function (checkForChanges) {\n    var oldRanges = checkForChanges ? this._ranges.slice(0) : null;\n    refreshSelection(this);\n\n    if (checkForChanges) {\n      var i = oldRanges.length;\n\n      if (i != this._ranges.length) {\n        return false;\n      }\n\n      while (i--) {\n        if (!DomRange.rangesEqual(oldRanges[i], this._ranges[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }; // Removal of a single range\n\n\n  var removeRangeManually = function removeRangeManually(sel, range) {\n    var ranges = sel.getAllRanges(),\n        removed = false;\n    sel.removeAllRanges();\n\n    for (var i = 0, len = ranges.length; i < len; ++i) {\n      if (removed || range !== ranges[i]) {\n        sel.addRange(ranges[i]);\n      } else {\n        // According to the draft WHATWG Range spec, the same range may be added to the selection multiple\n        // times. removeRange should only remove the first instance, so the following ensures only the first\n        // instance is removed\n        removed = true;\n      }\n    }\n\n    if (!sel.rangeCount) {\n      updateEmptySelection(sel);\n    }\n  };\n\n  if (implementsControlRange) {\n    selProto.removeRange = function (range) {\n      if (this.docSelection.type == CONTROL) {\n        var controlRange = this.docSelection.createRange();\n        var rangeElement = getSingleElementFromRange(range); // Create a new ControlRange containing all the elements in the selected ControlRange minus the\n        // element contained by the supplied range\n\n        var doc = dom.getDocument(controlRange.item(0));\n        var newControlRange = dom.getBody(doc).createControlRange();\n        var el,\n            removed = false;\n\n        for (var i = 0, len = controlRange.length; i < len; ++i) {\n          el = controlRange.item(i);\n\n          if (el !== rangeElement || removed) {\n            newControlRange.add(controlRange.item(i));\n          } else {\n            removed = true;\n          }\n        }\n\n        newControlRange.select(); // Update the wrapped selection based on what's now in the native selection\n\n        updateControlSelection(this);\n      } else {\n        removeRangeManually(this, range);\n      }\n    };\n  } else {\n    selProto.removeRange = function (range) {\n      removeRangeManually(this, range);\n    };\n  } // Detecting if a selection is backwards\n\n\n  var selectionIsBackwards;\n\n  if (!useDocumentSelection && selectionHasAnchorAndFocus && api.features.implementsDomRange) {\n    selectionIsBackwards = function selectionIsBackwards(sel) {\n      var backwards = false;\n\n      if (sel.anchorNode) {\n        backwards = dom.comparePoints(sel.anchorNode, sel.anchorOffset, sel.focusNode, sel.focusOffset) == 1;\n      }\n\n      return backwards;\n    };\n\n    selProto.isBackwards = function () {\n      return selectionIsBackwards(this);\n    };\n  } else {\n    selectionIsBackwards = selProto.isBackwards = function () {\n      return false;\n    };\n  } // Selection text\n  // This is conformant to the new WHATWG DOM Range draft spec but differs from WebKit and Mozilla's implementation\n\n\n  selProto.toString = function () {\n    var rangeTexts = [];\n\n    for (var i = 0, len = this.rangeCount; i < len; ++i) {\n      rangeTexts[i] = \"\" + this._ranges[i];\n    }\n\n    return rangeTexts.join(\"\");\n  };\n\n  function assertNodeInSameDocument(sel, node) {\n    if (sel.anchorNode && dom.getDocument(sel.anchorNode) !== dom.getDocument(node)) {\n      throw new DOMException(\"WRONG_DOCUMENT_ERR\");\n    }\n  } // No current browsers conform fully to the HTML 5 draft spec for this method, so Rangy's own method is always used\n\n\n  selProto.collapse = function (node, offset) {\n    assertNodeInSameDocument(this, node);\n    var range = api.createRange(dom.getDocument(node));\n    range.collapseToPoint(node, offset);\n    this.removeAllRanges();\n    this.addRange(range);\n    this.isCollapsed = true;\n  };\n\n  selProto.collapseToStart = function () {\n    if (this.rangeCount) {\n      var range = this._ranges[0];\n      this.collapse(range.startContainer, range.startOffset);\n    } else {\n      throw new DOMException(\"INVALID_STATE_ERR\");\n    }\n  };\n\n  selProto.collapseToEnd = function () {\n    if (this.rangeCount) {\n      var range = this._ranges[this.rangeCount - 1];\n      this.collapse(range.endContainer, range.endOffset);\n    } else {\n      throw new DOMException(\"INVALID_STATE_ERR\");\n    }\n  }; // The HTML 5 spec is very specific on how selectAllChildren should be implemented so the native implementation is\n  // never used by Rangy.\n\n\n  selProto.selectAllChildren = function (node) {\n    assertNodeInSameDocument(this, node);\n    var range = api.createRange(dom.getDocument(node));\n    range.selectNodeContents(node);\n    this.removeAllRanges();\n    this.addRange(range);\n  };\n\n  selProto.deleteFromDocument = function () {\n    // Sepcial behaviour required for Control selections\n    if (implementsControlRange && implementsDocSelection && this.docSelection.type == CONTROL) {\n      var controlRange = this.docSelection.createRange();\n      var element;\n\n      while (controlRange.length) {\n        element = controlRange.item(0);\n        controlRange.remove(element);\n        element.parentNode.removeChild(element);\n      }\n\n      this.refresh();\n    } else if (this.rangeCount) {\n      var ranges = this.getAllRanges();\n      this.removeAllRanges();\n\n      for (var i = 0, len = ranges.length; i < len; ++i) {\n        ranges[i].deleteContents();\n      } // The HTML5 spec says nothing about what the selection should contain after calling deleteContents on each\n      // range. Firefox moves the selection to where the final selected range was, so we emulate that\n\n\n      this.addRange(ranges[len - 1]);\n    }\n  }; // The following are non-standard extensions\n\n\n  selProto.getAllRanges = function () {\n    return this._ranges.slice(0);\n  };\n\n  selProto.setSingleRange = function (range) {\n    this.setRanges([range]);\n  };\n\n  selProto.containsNode = function (node, allowPartial) {\n    for (var i = 0, len = this._ranges.length; i < len; ++i) {\n      if (this._ranges[i].containsNode(node, allowPartial)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  selProto.toHtml = function () {\n    var html = \"\";\n\n    if (this.rangeCount) {\n      var container = DomRange.getRangeDocument(this._ranges[0]).createElement(\"div\");\n\n      for (var i = 0, len = this._ranges.length; i < len; ++i) {\n        container.appendChild(this._ranges[i].cloneContents());\n      }\n\n      html = container.innerHTML;\n    }\n\n    return html;\n  };\n\n  function inspect(sel) {\n    var rangeInspects = [];\n    var anchor = new DomPosition(sel.anchorNode, sel.anchorOffset);\n    var focus = new DomPosition(sel.focusNode, sel.focusOffset);\n    var name = typeof sel.getName == \"function\" ? sel.getName() : \"Selection\";\n\n    if (typeof sel.rangeCount != \"undefined\") {\n      for (var i = 0, len = sel.rangeCount; i < len; ++i) {\n        rangeInspects[i] = DomRange.inspect(sel.getRangeAt(i));\n      }\n    }\n\n    return \"[\" + name + \"(Ranges: \" + rangeInspects.join(\", \") + \")(anchor: \" + anchor.inspect() + \", focus: \" + focus.inspect() + \"]\";\n  }\n\n  selProto.getName = function () {\n    return \"WrappedSelection\";\n  };\n\n  selProto.inspect = function () {\n    return inspect(this);\n  };\n\n  selProto.detach = function () {\n    this.win[windowPropertyName] = null;\n    this.win = this.anchorNode = this.focusNode = null;\n  };\n\n  WrappedSelection.inspect = inspect;\n  api.Selection = WrappedSelection;\n  api.selectionPrototype = selProto;\n  api.addCreateMissingNativeApiListener(function (win) {\n    if (typeof win.getSelection == \"undefined\") {\n      win.getSelection = function () {\n        return api.getSelection(this);\n      };\n    }\n\n    win = null;\n  });\n});\n/*!\n  * Bowser - a browser detector\n  * https://github.com/ded/bowser\n  * MIT License | (c) Dustin Diaz 2014\n  */\n\nvar bowser = function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n  var t = true;\n\n  function detect(ua) {\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return match && match.length > 1 && match[1] || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),\n        likeAndroid = /like android/i.test(ua),\n        android = !likeAndroid && /android/i.test(ua),\n        versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i),\n        tablet = /tablet/i.test(ua),\n        mobile = !tablet && /[^-]mobi/i.test(ua),\n        result;\n\n    if (/opera|opr/i.test(ua)) {\n      result = {\n        name: 'Opera',\n        opera: t,\n        version: versionIdentifier || getFirstMatch(/(?:opera|opr)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/windows phone/i.test(ua)) {\n      result = {\n        name: 'Windows Phone',\n        windowsphone: t,\n        msie: t,\n        version: getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer',\n        msie: t,\n        version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome',\n        chrome: t,\n        version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (iosdevice) {\n      result = {\n        name: iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod' // WTF: version is not part of user agent in web apps\n\n      };\n\n      if (versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (/sailfish/i.test(ua)) {\n      result = {\n        name: 'Sailfish',\n        sailfish: t,\n        version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey',\n        seamonkey: t,\n        version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/firefox|iceweasel/i.test(ua)) {\n      result = {\n        name: 'Firefox',\n        firefox: t,\n        version: getFirstMatch(/(?:firefox|iceweasel)[ \\/](\\d+(\\.\\d+)?)/i)\n      };\n\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t;\n      }\n    } else if (/silk/i.test(ua)) {\n      result = {\n        name: 'Amazon Silk',\n        silk: t,\n        version: getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (android) {\n      result = {\n        name: 'Android',\n        version: versionIdentifier\n      };\n    } else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS',\n        phantom: t,\n        version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry',\n        blackberry: t,\n        version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/(web|hpw)os/i.test(ua)) {\n      result = {\n        name: 'WebOS',\n        webos: t,\n        version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t);\n    } else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada',\n        bada: t,\n        version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    } else if (/tizen/i.test(ua)) {\n      result = {\n        name: 'Tizen',\n        tizen: t,\n        version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    } else if (/safari/i.test(ua)) {\n      result = {\n        name: 'Safari',\n        safari: t,\n        version: versionIdentifier\n      };\n    } else result = {}; // set webkit or gecko flag for browsers based on these engines\n\n\n    if (/(apple)?webkit/i.test(ua)) {\n      result.name = result.name || \"Webkit\";\n      result.webkit = t;\n\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier;\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\";\n      result.gecko = t;\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i);\n    } // set OS flags for platforms that have multiple browsers\n\n\n    if (android || result.silk) {\n      result.android = t;\n    } else if (iosdevice) {\n      result[iosdevice] = t;\n      result.ios = t;\n    } // OS version extraction\n\n\n    var osVersion = '';\n\n    if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n\n    if (osVersion) {\n      result.osversion = osVersion;\n    } // device type extraction\n\n\n    var osMajorVersion = osVersion.split('.')[0];\n\n    if (tablet || iosdevice == 'ipad' || android && (osMajorVersion == 3 || osMajorVersion == 4 && !mobile) || result.silk) {\n      result.tablet = t;\n    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || result.blackberry || result.webos || result.bada) {\n      result.mobile = t;\n    } // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n\n\n    if (result.msie && result.version >= 10 || result.chrome && result.version >= 20 || result.firefox && result.version >= 20.0 || result.safari && result.version >= 6 || result.opera && result.version >= 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6 || result.blackberry && result.version >= 10.1) {\n      result.a = t;\n    } else if (result.msie && result.version < 10 || result.chrome && result.version < 20 || result.firefox && result.version < 20.0 || result.safari && result.version < 6 || result.opera && result.version < 10.0 || result.ios && result.osversion && result.osversion.split(\".\")[0] < 6) {\n      result.c = t;\n    } else result.x = t;\n\n    return result;\n  }\n\n  var bd = detect(typeof navigator !== 'undefined' ? navigator.userAgent : '');\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n\n  bd._detect = detect;\n  return bd;\n}();\n\n;\n\n(function (window, document, jQuery, undefined) {\n  'use strict';\n\n  var Editable = {};\n\n  var $ = function () {\n    return jQuery || function () {\n      throw new Error('jQuery-like library not yet implemented');\n    };\n  }();\n\n  var log, error; // Allows for safe console logging\n  // If the last param is the string \"trace\" console.trace will be called\n  // configuration: disable with config.log = false\n\n  log = function log() {\n    if (config.log === false) {\n      return;\n    }\n\n    var args, _ref;\n\n    args = Array.prototype.slice.call(arguments);\n\n    if (args.length) {\n      if (args[args.length - 1] === \"trace\") {\n        args.pop();\n\n        if ((_ref = window.console) ? _ref.trace : void 0) {\n          console.trace();\n        }\n      }\n    }\n\n    if (args.length === 1) {\n      args = args[0];\n    }\n\n    if (window.console) {\n      return console.log(args);\n    }\n  }; // Allows for safe error logging\n  // Falls back to console.log if console.error is not available\n\n\n  error = function error() {\n    if (config.logErrors === false) {\n      return;\n    }\n\n    var args;\n    args = Array.prototype.slice.call(arguments);\n\n    if (args.length === 1) {\n      args = args[0];\n    }\n\n    if (window.console && typeof window.console.error === \"function\") {\n      return console.error(args);\n    } else if (window.console) {\n      return console.log(args);\n    }\n  };\n\n  var string = function () {\n    var toString = Object.prototype.toString;\n    var htmlCharacters = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      '\\'': '&#39;'\n    };\n    return {\n      trimRight: function trimRight(text) {\n        return text.replace(/\\s+$/, '');\n      },\n      trimLeft: function trimLeft(text) {\n        return text.replace(/^\\s+/, '');\n      },\n      trim: function trim(text) {\n        return text.replace(/^\\s+|\\s+$/g, '');\n      },\n      isString: function isString(obj) {\n        return toString.call(obj) === '[object String]';\n      },\n\n      /**\n       * Turn any string into a regular expression.\n       * This can be used to search or replace a string conveniently.\n       */\n      regexp: function regexp(str, flags) {\n        if (!flags) flags = 'g';\n        var escapedStr = str.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n        return new RegExp(escapedStr, flags);\n      },\n\n      /**\n       * Escape HTML characters <, > and &\n       * Usage: escapeHtml('<div>');\n       *\n       * @param { String }\n       * @param { Boolean } Optional. If true \" and ' will also be escaped.\n       * @return { String } Escaped Html you can assign to innerHTML of an element.\n       */\n      escapeHtml: function escapeHtml(s, forAttribute) {\n        return s.replace(forAttribute ? /[&<>'\"]/g : /[&<>]/g, function (c) {\n          // \"'\n          return htmlCharacters[c];\n        });\n      },\n\n      /**\n       * Escape a string the browser way.\n       */\n      browserEscapeHtml: function browserEscapeHtml(str) {\n        var div = document.createElement('div');\n        div.appendChild(document.createTextNode(str));\n        return div.innerHTML;\n      }\n    };\n  }();\n  /**\n   * Defines all supported event types by Editable.JS and provides default\n   * implementations for them defined in {{#crossLink \"Behavior\"}}{{/crossLink}}\n   *\n   * @type {Object}\n   */\n\n\n  var config = {\n    log: false,\n    logErrors: true,\n    editableClass: 'js-editable',\n    editableDisabledClass: 'js-editable-disabled',\n    pastingAttribute: 'data-editable-is-pasting',\n    boldTag: 'strong',\n    italicTag: 'em',\n    // Rules that are applied when filtering pasted content\n    pastedHtmlRules: {\n      // Elements and their attributes to keep in pasted text\n      allowedElements: {\n        'a': {\n          'href': true\n        },\n        'strong': {},\n        'em': {},\n        'br': {}\n      },\n      // Elements that have required attributes.\n      // If these are not present the elements are filtered out.\n      // Required attributes have to be present in the 'allowed' object\n      // as well if they should not be filtered out.\n      requiredAttributes: {\n        'a': ['href']\n      },\n      // Elements that should be transformed into other elements\n      transformElements: {\n        'b': 'strong',\n        'i': 'em'\n      },\n      // A list of elements which should be split into paragraphs.\n      splitIntoBlocks: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'blockquote'],\n      // A list of HTML block level elements.\n      blockLevelElements: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'div', 'p', 'pre', 'hr', 'blockquote', 'article', 'figure', 'header', 'footer', 'ul', 'ol', 'li', 'section', 'table', 'video']\n    }\n  };\n  /**\n   * The Core module provides the Editable class that defines the Editable.JS\n   * API and is the main entry point for Editable.JS.\n   * It also provides the cursor module for cross-browser cursors, and the dom\n   * submodule.\n   *\n   * @module core\n   */\n\n  /**\n   * Constructor for the Editable.JS API that is externally visible.\n   * Note that the Editable literal is defined\n   * first in editable.prefix in order for it to be the only externally visible\n   * variable.\n   *\n   * @param {Object} configuration for this editable instance.\n   *   window: The window where to attach the editable events.\n   *   defaultBehavior: {Boolean} Load default-behavior.js.\n   *   mouseMoveSelectionChanges: {Boolean} Whether to get cursor and selection events on mousemove.\n   *   browserSpellcheck: {Boolean} Set the spellcheck attribute on editable elements\n   *\n   * @class Editable\n   */\n\n  Editable = function Editable(instanceConfig) {\n    var defaultInstanceConfig = {\n      window: window,\n      defaultBehavior: true,\n      mouseMoveSelectionChanges: false,\n      browserSpellcheck: true\n    };\n    this.config = $.extend(defaultInstanceConfig, instanceConfig);\n    this.win = this.config.window;\n    this.editableSelector = '.' + config.editableClass;\n\n    if (!rangy.initialized) {\n      rangy.init();\n    }\n\n    this.dispatcher = new Dispatcher(this);\n\n    if (this.config.defaultBehavior === true) {\n      this.dispatcher.on(createDefaultEvents(this));\n    }\n  };\n  /**\n   * Set configuration options that affect all editable\n   * instances.\n   *\n   * @param {Object} global configuration options (defaults are defined in config.js)\n   *   log: {Boolean}\n   *   logErrors: {Boolean}\n   *   editableClass: {String} e.g. 'js-editable'\n   *   editableDisabledClass: {String} e.g. 'js-editable-disabled'\n   *   pastingAttribute: {String} default: e.g. 'data-editable-is-pasting'\n   *   boldTag: e.g. '<strong>'\n   *   italicTag: e.g. '<em>'\n   */\n\n\n  Editable.globalConfig = function (globalConfig) {\n    $.extend(config, globalConfig);\n    clipboard.updateConfig(config);\n  };\n  /**\n   * Adds the Editable.JS API to the given target elements.\n   * Opposite of {{#crossLink \"Editable/remove\"}}{{/crossLink}}.\n   * Calls dispatcher.setup to setup all event listeners.\n   *\n   * @method add\n   * @param {HTMLElement|Array(HTMLElement)|String} target A HTMLElement, an\n   *    array of HTMLElement or a query selector representing the target where\n   *    the API should be added on.\n   * @chainable\n   */\n\n\n  Editable.prototype.add = function (target) {\n    this.enable($(target)); // todo: check css whitespace settings\n\n    return this;\n  };\n  /**\n   * Removes the Editable.JS API from the given target elements.\n   * Opposite of {{#crossLink \"Editable/add\"}}{{/crossLink}}.\n   *\n   * @method remove\n   * @param {HTMLElement|Array(HTMLElement)|String} target A HTMLElement, an\n   *    array of HTMLElement or a query selector representing the target where\n   *    the API should be removed from.\n   * @chainable\n   */\n\n\n  Editable.prototype.remove = function (target) {\n    var $target = $(target);\n    this.disable($target);\n    $target.removeClass(config.editableDisabledClass);\n    return this;\n  };\n  /**\n   * Removes the Editable.JS API from the given target elements.\n   * The target elements are marked as disabled.\n   *\n   * @method disable\n   * @param { jQuery element | undefined  } target editable root element(s)\n   *    If no param is specified all editables are disabled.\n   * @chainable\n   */\n\n\n  Editable.prototype.disable = function ($elem) {\n    var body = this.win.document.body;\n    $elem = $elem || $('.' + config.editableClass, body);\n    $elem.removeAttr('contenteditable').removeAttr('spellcheck').removeClass(config.editableClass).addClass(config.editableDisabledClass);\n    return this;\n  };\n  /**\n   * Adds the Editable.JS API to the given target elements.\n   *\n   * @method enable\n   * @param { jQuery element | undefined } target editable root element(s)\n   *    If no param is specified all editables marked as disabled are enabled.\n   * @chainable\n   */\n\n\n  Editable.prototype.enable = function ($elem, normalize) {\n    var body = this.win.document.body;\n    $elem = $elem || $('.' + config.editableDisabledClass, body);\n    $elem.attr('contenteditable', true).attr('spellcheck', this.config.browserSpellcheck).removeClass(config.editableDisabledClass).addClass(config.editableClass);\n\n    if (normalize) {\n      $elem.each(function (index, el) {\n        content.tidyHtml(el);\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Temporarily disable an editable.\n   * Can be used to prevent text selction while dragging an element\n   * for example.\n   *\n   * @method suspend\n   * @param jQuery object\n   */\n\n\n  Editable.prototype.suspend = function ($elem) {\n    var body = this.win.document.body;\n    $elem = $elem || $('.' + config.editableClass, body);\n    $elem.removeAttr('contenteditable');\n    return this;\n  };\n  /**\n   * Reverse the effects of suspend()\n   *\n   * @method continue\n   * @param jQuery object\n   */\n\n\n  Editable.prototype.continue = function ($elem) {\n    var body = this.win.document.body;\n    $elem = $elem || $('.' + config.editableClass, body);\n    $elem.attr('contenteditable', true);\n    return this;\n  };\n  /**\n   * Set the cursor inside of an editable block.\n   *\n   * @method createCursor\n   * @param position 'beginning', 'end', 'before', 'after'\n   */\n\n\n  Editable.prototype.createCursor = function (element, position) {\n    var cursor;\n    var $host = $(element).closest(this.editableSelector);\n    position = position || 'beginning';\n\n    if ($host.length) {\n      var range = rangy.createRange();\n\n      if (position === 'beginning' || position === 'end') {\n        range.selectNodeContents(element);\n        range.collapse(position === 'beginning' ? true : false);\n      } else if (element !== $host[0]) {\n        if (position === 'before') {\n          range.setStartBefore(element);\n          range.setEndBefore(element);\n        } else if (position === 'after') {\n          range.setStartAfter(element);\n          range.setEndAfter(element);\n        }\n      } else {\n        error('EditableJS: cannot create cursor outside of an editable block.');\n      }\n\n      cursor = new Cursor($host[0], range);\n    }\n\n    return cursor;\n  };\n\n  Editable.prototype.createCursorAtBeginning = function (element) {\n    return this.createCursor(element, 'beginning');\n  };\n\n  Editable.prototype.createCursorAtEnd = function (element) {\n    return this.createCursor(element, 'end');\n  };\n\n  Editable.prototype.createCursorBefore = function (element) {\n    return this.createCursor(element, 'before');\n  };\n\n  Editable.prototype.createCursorAfter = function (element) {\n    return this.createCursor(element, 'after');\n  };\n  /**\n   * Extract the content from an editable host or document fragment.\n   * This method will remove all internal elements and ui-elements.\n   *\n   * @param {DOM node or Document Fragment} The innerHTML of this element or fragment will be extracted.\n   * @returns {String} The cleaned innerHTML.\n   */\n\n\n  Editable.prototype.getContent = function (element) {\n    return content.extractContent(element);\n  };\n  /**\n   * @param {String | DocumentFragment} content to append.\n   * @returns {Cursor} A new Cursor object just before the inserted content.\n   */\n\n\n  Editable.prototype.appendTo = function (element, contentToAppend) {\n    element = content.adoptElement(element, this.win.document);\n\n    if (typeof contentToAppend === 'string') {\n      // todo: create content in the right window\n      contentToAppend = content.createFragmentFromString(contentToAppend);\n    }\n\n    var cursor = this.createCursor(element, 'end');\n    cursor.insertAfter(contentToAppend);\n    return cursor;\n  };\n  /**\n   * @param {String | DocumentFragment} content to prepend\n   * @returns {Cursor} A new Cursor object just after the inserted content.\n   */\n\n\n  Editable.prototype.prependTo = function (element, contentToPrepend) {\n    element = content.adoptElement(element, this.win.document);\n\n    if (typeof contentToPrepend === 'string') {\n      // todo: create content in the right window\n      contentToPrepend = content.createFragmentFromString(contentToPrepend);\n    }\n\n    var cursor = this.createCursor(element, 'beginning');\n    cursor.insertBefore(contentToPrepend);\n    return cursor;\n  };\n  /**\n   * Get the current selection.\n   * Only returns something if the selection is within an editable element.\n   * If you pass an editable host as param it only returns something if the selection is inside this\n   * very editable element.\n   *\n   * @param {DOMNode} Optional. An editable host where the selection needs to be contained.\n   * @returns A Cursor or Selection object or undefined.\n   */\n\n\n  Editable.prototype.getSelection = function (editableHost) {\n    var selection = this.dispatcher.selectionWatcher.getFreshSelection();\n\n    if (editableHost && selection) {\n      var range = selection.range; // Check if the selection is inside the editableHost\n      // The try...catch is required if the editableHost was removed from the DOM.\n\n      try {\n        if (range.compareNode(editableHost) !== range.NODE_BEFORE_AND_AFTER) {\n          selection = undefined;\n        }\n      } catch (e) {\n        selection = undefined;\n      }\n    }\n\n    return selection;\n  };\n  /**\n   * Enable spellchecking\n   *\n   * @chainable\n   */\n\n\n  Editable.prototype.setupSpellcheck = function (spellcheckConfig) {\n    this.spellcheck = new Spellcheck(this, spellcheckConfig);\n    return this;\n  };\n  /**\n   * Subscribe a callback function to a custom event fired by the API.\n   *\n   * @param {String} event The name of the event.\n   * @param {Function} handler The callback to execute in response to the\n   *     event.\n   *\n   * @chainable\n   */\n\n\n  Editable.prototype.on = function (event, handler) {\n    // TODO throw error if event is not one of EVENTS\n    // TODO throw error if handler is not a function\n    this.dispatcher.on(event, handler);\n    return this;\n  };\n  /**\n   * Unsubscribe a callback function from a custom event fired by the API.\n   * Opposite of {{#crossLink \"Editable/on\"}}{{/crossLink}}.\n   *\n   * @param {String} event The name of the event.\n   * @param {Function} handler The callback to remove from the\n   *     event or the special value false to remove all callbacks.\n   *\n   * @chainable\n   */\n\n\n  Editable.prototype.off = function (event, handler) {\n    var args = Array.prototype.slice.call(arguments);\n    this.dispatcher.off.apply(this.dispatcher, args);\n    return this;\n  };\n  /**\n   * Unsubscribe all callbacks and event listeners.\n   *\n   * @chainable\n   */\n\n\n  Editable.prototype.unload = function () {\n    this.dispatcher.unload();\n    return this;\n  };\n  /**\n   * Generate a callback function to subscribe to an event.\n   *\n   * @method createEventSubscriber\n   * @param {String} Event name\n   */\n\n\n  var createEventSubscriber = function createEventSubscriber(name) {\n    Editable.prototype[name] = function (handler) {\n      return this.on(name, handler);\n    };\n  };\n  /**\n   * Set up callback functions for several events.\n   */\n\n\n  var events = ['focus', 'blur', 'flow', 'selection', 'cursor', 'newline', 'insert', 'split', 'merge', 'empty', 'change', 'switch', 'move', 'clipboard', 'paste'];\n\n  for (var i = 0; i < events.length; ++i) {\n    var eventName = events[i];\n    createEventSubscriber(eventName);\n  }\n\n  var block = function () {\n    var getSibling = function getSibling(type) {\n      return function (element) {\n        var sibling = element[type];\n        if (sibling && sibling.getAttribute('contenteditable')) return sibling;\n        return null;\n      };\n    };\n\n    return {\n      next: getSibling('nextElementSibling'),\n      previous: getSibling('previousElementSibling')\n    };\n  }();\n\n  var clipboard = function () {\n    var allowedElements, requiredAttributes, transformElements;\n    var blockLevelElements, splitIntoBlocks;\n    var whitespaceOnly = /^\\s*$/;\n    var blockPlaceholder = '<!-- BLOCK -->';\n\n    var updateConfig = function updateConfig(config) {\n      var i,\n          name,\n          rules = config.pastedHtmlRules;\n      allowedElements = rules.allowedElements || {};\n      requiredAttributes = rules.requiredAttributes || {};\n      transformElements = rules.transformElements || {};\n      blockLevelElements = {};\n\n      for (i = 0; i < rules.blockLevelElements.length; i++) {\n        name = rules.blockLevelElements[i];\n        blockLevelElements[name] = true;\n      }\n\n      splitIntoBlocks = {};\n\n      for (i = 0; i < rules.splitIntoBlocks.length; i++) {\n        name = rules.splitIntoBlocks[i];\n        splitIntoBlocks[name] = true;\n      }\n    };\n\n    updateConfig(config);\n    return {\n      updateConfig: updateConfig,\n      paste: function paste(element, cursor, callback) {\n        var document = element.ownerDocument;\n        element.setAttribute(config.pastingAttribute, true);\n\n        if (cursor.isSelection) {\n          cursor = cursor.deleteContent();\n        } // Create a placeholder and set the focus to the pasteholder\n        // to redirect the browser pasting into the pasteholder.\n\n\n        cursor.save();\n        var pasteHolder = this.injectPasteholder(document);\n        pasteHolder.focus(); // Use a timeout to give the browser some time to paste the content.\n        // After that grab the pasted content, filter it and restore the focus.\n\n        var _this = this;\n\n        setTimeout(function () {\n          var blocks;\n          blocks = _this.parseContent(pasteHolder);\n          $(pasteHolder).remove();\n          element.removeAttribute(config.pastingAttribute);\n          cursor.restore();\n          callback(blocks, cursor);\n        }, 0);\n      },\n      injectPasteholder: function injectPasteholder(document) {\n        var pasteHolder = $(document.createElement('div')).attr('contenteditable', true).css({\n          position: 'fixed',\n          right: '5px',\n          top: '50%',\n          width: '1px',\n          height: '1px',\n          overflow: 'hidden',\n          outline: 'none'\n        })[0];\n        $(document.body).append(pasteHolder);\n        return pasteHolder;\n      },\n\n      /**\n       * - Parse pasted content\n       * - Split it up into blocks\n       * - clean and normalize every block\n       *\n       * @param {DOM node} A container where the pasted content is located.\n       * @returns {Array of Strings} An array of cleaned innerHTML like strings.\n       */\n      parseContent: function parseContent(element) {\n        // Filter pasted content\n        var pastedString = this.filterHtmlElements(element); // Handle Blocks\n\n        var blocks = pastedString.split(blockPlaceholder);\n\n        for (var i = 0; i < blocks.length; i++) {\n          var entry = blocks[i]; // Clean Whitesapce\n\n          entry = this.cleanWhitespace(entry); // Trim pasted Text\n\n          entry = string.trim(entry);\n          blocks[i] = entry;\n        }\n\n        blocks = blocks.filter(function (entry) {\n          return !whitespaceOnly.test(entry);\n        });\n        return blocks;\n      },\n      filterHtmlElements: function filterHtmlElements(elem, parents) {\n        if (!parents) parents = [];\n        var child,\n            content = '';\n\n        for (var i = 0; i < elem.childNodes.length; i++) {\n          child = elem.childNodes[i];\n\n          if (child.nodeType === nodeType.elementNode) {\n            var childContent = this.filterHtmlElements(child, parents);\n            content += this.conditionalNodeWrap(child, childContent);\n          } else if (child.nodeType === nodeType.textNode) {\n            // Escape HTML characters <, > and &\n            content += string.escapeHtml(child.nodeValue);\n          }\n        }\n\n        return content;\n      },\n      conditionalNodeWrap: function conditionalNodeWrap(child, content) {\n        var nodeName = child.nodeName.toLowerCase();\n        nodeName = this.transformNodeName(nodeName);\n\n        if (this.shouldKeepNode(nodeName, child)) {\n          var attributes = this.filterAttributes(nodeName, child);\n\n          if (nodeName === 'br') {\n            return '<' + nodeName + attributes + '>';\n          } else if (!whitespaceOnly.test(content)) {\n            return '<' + nodeName + attributes + '>' + content + '</' + nodeName + '>';\n          } else {\n            return content;\n          }\n        } else {\n          if (splitIntoBlocks[nodeName]) {\n            return blockPlaceholder + content + blockPlaceholder;\n          } else if (blockLevelElements[nodeName]) {\n            // prevent missing whitespace between text when block-level\n            // elements are removed.\n            return content + ' ';\n          } else {\n            return content;\n          }\n        }\n      },\n      filterAttributes: function filterAttributes(nodeName, node) {\n        var attributes = '';\n\n        for (var i = 0, len = (node.attributes || []).length; i < len; i++) {\n          var name = node.attributes[i].name;\n          var value = node.attributes[i].value;\n\n          if (allowedElements[nodeName][name] && value) {\n            attributes += ' ' + name + '=\"' + value + '\"';\n          }\n        }\n\n        return attributes;\n      },\n      transformNodeName: function transformNodeName(nodeName) {\n        if (transformElements[nodeName]) {\n          return transformElements[nodeName];\n        } else {\n          return nodeName;\n        }\n      },\n      hasRequiredAttributes: function hasRequiredAttributes(nodeName, node) {\n        var attrName, attrValue;\n        var requiredAttrs = requiredAttributes[nodeName];\n\n        if (requiredAttrs) {\n          for (var i = 0; i < requiredAttrs.length; i++) {\n            attrName = requiredAttrs[i];\n            attrValue = node.getAttribute(attrName);\n\n            if (!attrValue) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      },\n      shouldKeepNode: function shouldKeepNode(nodeName, node) {\n        return allowedElements[nodeName] && this.hasRequiredAttributes(nodeName, node);\n      },\n      cleanWhitespace: function cleanWhitespace(str) {\n        var cleanedStr = str.replace(/(.)(\\u00A0)/g, function (match, group1, group2, offset, string) {\n          if (/[\\u0020]/.test(group1)) {\n            return group1 + \"\\xA0\";\n          } else {\n            return group1 + ' ';\n          }\n        });\n        return cleanedStr;\n      }\n    };\n  }();\n\n  var content = function () {\n    var restoreRange = function restoreRange(host, range, func) {\n      range = rangeSaveRestore.save(range);\n      func.call(content);\n      return rangeSaveRestore.restore(host, range);\n    };\n\n    var zeroWidthSpace = /\\u200B/g;\n    var zeroWidthNonBreakingSpace = /\\uFEFF/g;\n    var whitespaceExceptSpace = /[^\\S ]/g;\n    return {\n      /**\n       * Clean up the Html.\n       */\n      tidyHtml: function tidyHtml(element) {\n        this.normalizeTags(element);\n      },\n\n      /**\n       * Remove empty tags and merge consecutive tags (they must have the same\n       * attributes).\n       *\n       * @method normalizeTags\n       * @param  {HTMLElement} element The element to process.\n       */\n      normalizeTags: function normalizeTags(element) {\n        var i, j, node, sibling;\n        var fragment = document.createDocumentFragment();\n\n        for (i = 0; i < element.childNodes.length; i++) {\n          node = element.childNodes[i];\n          if (!node) continue; // skip empty tags, so they'll get removed\n\n          if (node.nodeName !== 'BR' && !node.textContent) continue;\n\n          if (node.nodeType === nodeType.elementNode && node.nodeName !== 'BR') {\n            sibling = node;\n\n            while ((sibling = sibling.nextSibling) !== null) {\n              if (!parser.isSameNode(sibling, node)) break;\n\n              for (j = 0; j < sibling.childNodes.length; j++) {\n                node.appendChild(sibling.childNodes[j].cloneNode(true));\n              }\n\n              sibling.parentNode.removeChild(sibling);\n            }\n\n            this.normalizeTags(node);\n          }\n\n          fragment.appendChild(node.cloneNode(true));\n        }\n\n        while (element.firstChild) {\n          element.removeChild(element.firstChild);\n        }\n\n        element.appendChild(fragment);\n      },\n      normalizeWhitespace: function normalizeWhitespace(text) {\n        return text.replace(whitespaceExceptSpace, ' ');\n      },\n\n      /**\n       * Clean the element from character, tags, etc... added by the plugin logic.\n       *\n       * @method cleanInternals\n       * @param  {HTMLElement} element The element to process.\n       */\n      cleanInternals: function cleanInternals(element) {\n        // Uses extract content for simplicity. A custom method\n        // that does not clone the element could be faster if needed.\n        element.innerHTML = this.extractContent(element, true);\n      },\n\n      /**\n       * Extracts the content from a host element.\n       * Does not touch or change the host. Just returns\n       * the content and removes elements marked for removal by editable.\n       *\n       * @param {DOM node or document framgent} Element where to clean out the innerHTML. If you pass a document fragment it will be empty after this call.\n       * @param {Boolean} Flag whether to keep ui elements like spellchecking highlights.\n       * @returns {String} The cleaned innerHTML of the passed element or document fragment.\n       */\n      extractContent: function extractContent(element, keepUiElements) {\n        var innerHtml;\n\n        if (element.nodeType === nodeType.documentFragmentNode) {\n          innerHtml = this.getInnerHtmlOfFragment(element);\n        } else {\n          innerHtml = element.innerHTML;\n        }\n\n        innerHtml = innerHtml.replace(zeroWidthNonBreakingSpace, ''); // Used for forcing inline elments to have a height\n\n        innerHtml = innerHtml.replace(zeroWidthSpace, '<br>'); // Used for cross-browser newlines\n\n        var clone = document.createElement('div');\n        clone.innerHTML = innerHtml;\n        this.unwrapInternalNodes(clone, keepUiElements);\n        return clone.innerHTML;\n      },\n      getInnerHtmlOfFragment: function getInnerHtmlOfFragment(documentFragment) {\n        var div = document.createElement('div');\n        div.appendChild(documentFragment);\n        return div.innerHTML;\n      },\n\n      /**\n       * Create a document fragment from an html string\n       * @param {String} e.g. 'some html <span>text</span>.'\n       */\n      createFragmentFromString: function createFragmentFromString(htmlString) {\n        var fragment = document.createDocumentFragment();\n        var contents = $('<div>').html(htmlString).contents();\n\n        for (var i = 0; i < contents.length; i++) {\n          var el = contents[i];\n          fragment.appendChild(el);\n        }\n\n        return fragment;\n      },\n      adoptElement: function adoptElement(node, doc) {\n        if (node.ownerDocument !== doc) {\n          return doc.adoptNode(node);\n        } else {\n          return node;\n        }\n      },\n\n      /**\n       * This is a slight variation of the cloneContents method of a rangyRange.\n       * It will return a fragment with the cloned contents of the range\n       * without the commonAncestorElement.\n       *\n       * @param {rangyRange}\n       * @return {DocumentFragment}\n       */\n      cloneRangeContents: function cloneRangeContents(range) {\n        var rangeFragment = range.cloneContents();\n        var parent = rangeFragment.childNodes[0];\n        var fragment = document.createDocumentFragment();\n\n        while (parent.childNodes.length) {\n          fragment.appendChild(parent.childNodes[0]);\n        }\n\n        return fragment;\n      },\n\n      /**\n       * Remove elements that were inserted for internal or user interface purposes\n       *\n       * @param {DOM node}\n       * @param {Boolean} whether to keep ui elements like spellchecking highlights\n       * Currently:\n       * - Saved ranges\n       */\n      unwrapInternalNodes: function unwrapInternalNodes(sibling, keepUiElements) {\n        while (sibling) {\n          var nextSibling = sibling.nextSibling;\n\n          if (sibling.nodeType === nodeType.elementNode) {\n            var attr = sibling.getAttribute('data-editable');\n\n            if (sibling.firstChild) {\n              this.unwrapInternalNodes(sibling.firstChild, keepUiElements);\n            }\n\n            if (attr === 'remove') {\n              $(sibling).remove();\n            } else if (attr === 'unwrap') {\n              this.unwrap(sibling);\n            } else if (attr === 'ui-remove' && !keepUiElements) {\n              $(sibling).remove();\n            } else if (attr === 'ui-unwrap' && !keepUiElements) {\n              this.unwrap(sibling);\n            }\n          }\n\n          sibling = nextSibling;\n        }\n      },\n\n      /**\n       * Get all tags that start or end inside the range\n       */\n      getTags: function getTags(host, range, filterFunc) {\n        var tags = this.getInnerTags(range, filterFunc); // get all tags that surround the range\n\n        var node = range.commonAncestorContainer;\n\n        while (node !== host) {\n          if (!filterFunc || filterFunc(node)) {\n            tags.push(node);\n          }\n\n          node = node.parentNode;\n        }\n\n        return tags;\n      },\n      getTagsByName: function getTagsByName(host, range, tagName) {\n        return this.getTags(host, range, function (node) {\n          return node.nodeName === tagName.toUpperCase();\n        });\n      },\n\n      /**\n       * Get all tags that start or end inside the range\n       */\n      getInnerTags: function getInnerTags(range, filterFunc) {\n        return range.getNodes([nodeType.elementNode], filterFunc);\n      },\n\n      /**\n       * Transform an array of elements into a an array\n       * of tagnames in uppercase\n       *\n       * @return example: ['STRONG', 'B']\n       */\n      getTagNames: function getTagNames(elements) {\n        var names = [];\n        if (!elements) return names;\n\n        for (var i = 0; i < elements.length; i++) {\n          names.push(elements[i].nodeName);\n        }\n\n        return names;\n      },\n      isAffectedBy: function isAffectedBy(host, range, tagName) {\n        var elem;\n        var tags = this.getTags(host, range);\n\n        for (var i = 0; i < tags.length; i++) {\n          elem = tags[i];\n\n          if (elem.nodeName === tagName.toUpperCase()) {\n            return true;\n          }\n        }\n\n        return false;\n      },\n\n      /**\n       * Check if the range selects all of the elements contents,\n       * not less or more.\n       *\n       * @param visible: Only compare visible text. That way it does not\n       *   matter if the user selects an additional whitespace or not.\n       */\n      isExactSelection: function isExactSelection(range, elem, visible) {\n        var elemRange = rangy.createRange();\n        elemRange.selectNodeContents(elem);\n\n        if (range.intersectsRange(elemRange)) {\n          var rangeText = range.toString();\n          var elemText = $(elem).text();\n\n          if (visible) {\n            rangeText = string.trim(rangeText);\n            elemText = string.trim(elemText);\n          }\n\n          return rangeText !== '' && rangeText === elemText;\n        } else {\n          return false;\n        }\n      },\n      expandTo: function expandTo(host, range, elem) {\n        range.selectNodeContents(elem);\n        return range;\n      },\n      toggleTag: function toggleTag(host, range, elem) {\n        var elems = this.getTagsByName(host, range, elem.nodeName);\n\n        if (elems.length === 1 && this.isExactSelection(range, elems[0], 'visible')) {\n          return this.removeFormatting(host, range, elem.nodeName);\n        }\n\n        return this.forceWrap(host, range, elem);\n      },\n      isWrappable: function isWrappable(range) {\n        return range.canSurroundContents();\n      },\n      forceWrap: function forceWrap(host, range, elem) {\n        range = restoreRange(host, range, function () {\n          this.nuke(host, range, elem.nodeName);\n        }); // remove all tags if the range is not wrappable\n\n        if (!this.isWrappable(range)) {\n          range = restoreRange(host, range, function () {\n            this.nuke(host, range);\n          });\n        }\n\n        this.wrap(range, elem);\n        return range;\n      },\n      wrap: function wrap(range, elem) {\n        elem = string.isString(elem) ? $(elem)[0] : elem;\n\n        if (this.isWrappable(range)) {\n          var a = range.surroundContents(elem);\n        } else {\n          console.log('content.wrap(): can not surround range');\n        }\n      },\n      unwrap: function unwrap(elem) {\n        var $elem = $(elem);\n        var contents = $elem.contents();\n\n        if (contents.length) {\n          contents.unwrap();\n        } else {\n          $elem.remove();\n        }\n      },\n      removeFormatting: function removeFormatting(host, range, tagName) {\n        return restoreRange(host, range, function () {\n          this.nuke(host, range, tagName);\n        });\n      },\n\n      /**\n       * Unwrap all tags this range is affected by.\n       * Can also affect content outside of the range.\n       */\n      nuke: function nuke(host, range, tagName) {\n        var tags = this.getTags(host, range);\n\n        for (var i = 0; i < tags.length; i++) {\n          var elem = tags[i];\n\n          if (elem.nodeName !== 'BR' && (!tagName || elem.nodeName === tagName.toUpperCase())) {\n            this.unwrap(elem);\n          }\n        }\n      },\n\n      /**\n       * Insert a single character (or string) before or after the\n       * the range.\n       */\n      insertCharacter: function insertCharacter(range, character, atStart) {\n        var insertEl = document.createTextNode(character);\n        var boundaryRange = range.cloneRange();\n        boundaryRange.collapse(atStart);\n        boundaryRange.insertNode(insertEl);\n\n        if (atStart) {\n          range.setStartBefore(insertEl);\n        } else {\n          range.setEndAfter(insertEl);\n        }\n\n        range.normalizeBoundaries();\n      },\n\n      /**\n       * Surround the range with characters like start and end quotes.\n       *\n       * @method surround\n       */\n      surround: function surround(host, range, startCharacter, endCharacter) {\n        if (!endCharacter) endCharacter = startCharacter;\n        this.insertCharacter(range, endCharacter, false);\n        this.insertCharacter(range, startCharacter, true);\n        return range;\n      },\n\n      /**\n       * Removes a character from the text within a range.\n       *\n       * @method deleteCharacter\n       */\n      deleteCharacter: function deleteCharacter(host, range, character) {\n        if (this.containsString(range, character)) {\n          range.splitBoundaries();\n          range = restoreRange(host, range, function () {\n            var charRegexp = string.regexp(character);\n            var textNodes = range.getNodes([nodeType.textNode], function (node) {\n              return node.nodeValue.search(charRegexp) >= 0;\n            });\n\n            for (var i = 0; i < textNodes.length; i++) {\n              var node = textNodes[i];\n              node.nodeValue = node.nodeValue.replace(charRegexp, '');\n            }\n          });\n          range.normalizeBoundaries();\n        }\n\n        return range;\n      },\n      containsString: function containsString(range, str) {\n        var text = range.toString();\n        return text.indexOf(str) >= 0;\n      },\n\n      /**\n       * Unwrap all tags this range is affected by.\n       * Can also affect content outside of the range.\n       */\n      nukeTag: function nukeTag(host, range, tagName) {\n        var tags = this.getTags(host, range);\n\n        for (var i = 0; i < tags.length; i++) {\n          var elem = tags[i];\n          if (elem.nodeName === tagName) this.unwrap(elem);\n        }\n      }\n    };\n  }();\n  /**\n   * The Cursor module provides a cross-browser abstraction layer for cursor.\n   *\n   * @module core\n   * @submodule cursor\n   */\n\n\n  var Cursor = function () {\n    /**\n     * Class for the Cursor module.\n     *\n     * @class Cursor\n     * @constructor\n     */\n    var Cursor = function Cursor(editableHost, rangyRange) {\n      this.setHost(editableHost);\n      this.range = rangyRange;\n      this.isCursor = true;\n    };\n\n    Cursor.prototype = function () {\n      return {\n        isAtEnd: function isAtEnd() {\n          return parser.isEndOfHost(this.host, this.range.endContainer, this.range.endOffset);\n        },\n        isAtTextEnd: function isAtTextEnd() {\n          return parser.isTextEndOfHost(this.host, this.range.endContainer, this.range.endOffset);\n        },\n        isAtBeginning: function isAtBeginning() {\n          return parser.isBeginningOfHost(this.host, this.range.startContainer, this.range.startOffset);\n        },\n\n        /**\n         * Insert content before the cursor\n         *\n         * @param {String, DOM node or document fragment}\n         */\n        insertBefore: function insertBefore(element) {\n          if (string.isString(element)) {\n            element = content.createFragmentFromString(element);\n          }\n\n          if (parser.isDocumentFragmentWithoutChildren(element)) return;\n          element = this.adoptElement(element);\n          var preceedingElement = element;\n\n          if (element.nodeType === nodeType.documentFragmentNode) {\n            var lastIndex = element.childNodes.length - 1;\n            preceedingElement = element.childNodes[lastIndex];\n          }\n\n          this.range.insertNode(element);\n          this.range.setStartAfter(preceedingElement);\n          this.range.setEndAfter(preceedingElement);\n        },\n\n        /**\n         * Insert content after the cursor\n         *\n         * @param {String, DOM node or document fragment}\n         */\n        insertAfter: function insertAfter(element) {\n          if (string.isString(element)) {\n            element = content.createFragmentFromString(element);\n          }\n\n          if (parser.isDocumentFragmentWithoutChildren(element)) return;\n          element = this.adoptElement(element);\n          this.range.insertNode(element);\n        },\n\n        /**\n         * Alias for #setVisibleSelection()\n         */\n        setSelection: function setSelection() {\n          this.setVisibleSelection();\n        },\n        setVisibleSelection: function setVisibleSelection() {\n          // Without setting focus() Firefox is not happy (seems setting a selection is not enough.\n          // Probably because Firefox can handle multiple selections).\n          if (this.win.document.activeElement !== this.host) {\n            $(this.host).focus();\n          }\n\n          rangy.getSelection(this.win).setSingleRange(this.range);\n        },\n\n        /**\n         * Take the following example:\n         * (The character '|' represents the cursor position)\n         *\n         * <div contenteditable=\"true\">fo|o</div>\n         * before() will return a document frament containing a text node 'fo'.\n         *\n         * @returns {Document Fragment} content before the cursor or selection.\n         */\n        before: function before() {\n          var fragment = null;\n          var range = this.range.cloneRange();\n          range.setStartBefore(this.host);\n          fragment = content.cloneRangeContents(range);\n          return fragment;\n        },\n\n        /**\n         * Same as before() but returns a string.\n         */\n        beforeHtml: function beforeHtml() {\n          return content.getInnerHtmlOfFragment(this.before());\n        },\n\n        /**\n         * Take the following example:\n         * (The character '|' represents the cursor position)\n         *\n         * <div contenteditable=\"true\">fo|o</div>\n         * after() will return a document frament containing a text node 'o'.\n         *\n         * @returns {Document Fragment} content after the cursor or selection.\n         */\n        after: function after() {\n          var fragment = null;\n          var range = this.range.cloneRange();\n          range.setEndAfter(this.host);\n          fragment = content.cloneRangeContents(range);\n          return fragment;\n        },\n\n        /**\n         * Same as after() but returns a string.\n         */\n        afterHtml: function afterHtml() {\n          return content.getInnerHtmlOfFragment(this.after());\n        },\n\n        /**\n         * Get the BoundingClientRect of the cursor.\n         * The returned values are transformed to be absolute\n         # (relative to the document).\n         */\n        getCoordinates: function getCoordinates(positioning) {\n          positioning = positioning || 'absolute';\n          var coords = this.range.nativeRange.getBoundingClientRect();\n          if (positioning === 'fixed') return coords; // code from mdn: https://developer.mozilla.org/en-US/docs/Web/API/window.scrollX\n\n          var win = this.win;\n          var x = win.pageXOffset !== undefined ? win.pageXOffset : (win.document.documentElement || win.document.body.parentNode || win.document.body).scrollLeft;\n          var y = win.pageYOffset !== undefined ? win.pageYOffset : (win.document.documentElement || win.document.body.parentNode || win.document.body).scrollTop; // translate into absolute positions\n\n          return {\n            top: coords.top + y,\n            bottom: coords.bottom + y,\n            left: coords.left + x,\n            right: coords.right + x,\n            height: coords.height,\n            width: coords.width\n          };\n        },\n        moveBefore: function moveBefore(element) {\n          this.updateHost(element);\n          this.range.setStartBefore(element);\n          this.range.setEndBefore(element);\n          if (this.isSelection) return new Cursor(this.host, this.range);\n        },\n        moveAfter: function moveAfter(element) {\n          this.updateHost(element);\n          this.range.setStartAfter(element);\n          this.range.setEndAfter(element);\n          if (this.isSelection) return new Cursor(this.host, this.range);\n        },\n\n        /**\n         * Move the cursor to the beginning of the host.\n         */\n        moveAtBeginning: function moveAtBeginning(element) {\n          if (!element) element = this.host;\n          this.updateHost(element);\n          this.range.selectNodeContents(element);\n          this.range.collapse(true);\n          if (this.isSelection) return new Cursor(this.host, this.range);\n        },\n\n        /**\n         * Move the cursor to the end of the host.\n         */\n        moveAtEnd: function moveAtEnd(element) {\n          if (!element) element = this.host;\n          this.updateHost(element);\n          this.range.selectNodeContents(element);\n          this.range.collapse(false);\n          if (this.isSelection) return new Cursor(this.host, this.range);\n        },\n\n        /**\n         * Move the cursor after the last visible character of the host.\n         */\n        moveAtTextEnd: function moveAtTextEnd(element) {\n          return this.moveAtEnd(parser.latestChild(element));\n        },\n        setHost: function setHost(element) {\n          if (element.jquery) element = element[0];\n          this.host = element;\n          this.win = element === undefined || element === null ? window : element.ownerDocument.defaultView;\n        },\n        updateHost: function updateHost(element) {\n          var host = parser.getHost(element);\n\n          if (!host) {\n            error('Can not set cursor outside of an editable block');\n          }\n\n          this.setHost(host);\n        },\n        retainVisibleSelection: function retainVisibleSelection(callback) {\n          this.save();\n          callback();\n          this.restore();\n          this.setVisibleSelection();\n        },\n        save: function save() {\n          this.savedRangeInfo = rangeSaveRestore.save(this.range);\n          this.savedRangeInfo.host = this.host;\n        },\n        restore: function restore() {\n          if (this.savedRangeInfo) {\n            this.host = this.savedRangeInfo.host;\n            this.range = rangeSaveRestore.restore(this.host, this.savedRangeInfo);\n            this.savedRangeInfo = undefined;\n          } else {\n            error('Could not restore selection');\n          }\n        },\n        equals: function equals(cursor) {\n          if (!cursor) return false;\n          if (!cursor.host) return false;\n          if (!cursor.host.isEqualNode(this.host)) return false;\n          if (!cursor.range) return false;\n          if (!cursor.range.equals(this.range)) return false;\n          return true;\n        },\n        // Create an element with the correct ownerWindow\n        // (see: http://www.w3.org/DOM/faq.html#ownerdoc)\n        createElement: function createElement(tagName) {\n          return this.win.document.createElement(tagName);\n        },\n        // Make sure a node has the correct ownerWindow\n        // (see: https://developer.mozilla.org/en-US/docs/Web/API/Document/importNode)\n        adoptElement: function adoptElement(node) {\n          return content.adoptElement(node, this.win.document);\n        },\n        // Currently we call triggerChange manually after format changes.\n        // This is to prevent excessive triggering of the change event during\n        // merge or split operations or other manipulations by scripts.\n        triggerChange: function triggerChange() {\n          $(this.host).trigger('formatEditable');\n        }\n      };\n    }();\n\n    return Cursor;\n  }();\n  /**\n   * The Behavior module defines the behavior triggered in response to the Editable.JS\n   * events (see {{#crossLink \"Editable\"}}{{/crossLink}}).\n   * The behavior can be overwritten by a user with Editable.init() or on\n   * Editable.add() per element.\n   *\n   * @module core\n   * @submodule behavior\n   */\n\n\n  var createDefaultBehavior = function createDefaultBehavior(editable) {\n    var document = editable.win.document;\n    var selectionWatcher = editable.dispatcher.selectionWatcher;\n    /**\n      * Factory for the default behavior.\n      * Provides default behavior of the Editable.JS API.\n      *\n      * @static\n      */\n\n    return {\n      focus: function focus(element) {\n        // Add a <br> element if the editable is empty to force it to have height\n        // E.g. Firefox does not render empty block elements and most browsers do\n        // not render  empty inline elements.\n        if (parser.isVoid(element)) {\n          var br = document.createElement('br');\n          br.setAttribute('data-editable', 'remove');\n          element.appendChild(br);\n        }\n      },\n      blur: function blur(element) {\n        content.cleanInternals(element);\n      },\n      selection: function selection(element, _selection) {\n        if (_selection) {\n          log('Default selection behavior');\n        } else {\n          log('Default selection empty behavior');\n        }\n      },\n      cursor: function cursor(element, _cursor) {\n        if (_cursor) {\n          log('Default cursor behavior');\n        } else {\n          log('Default cursor empty behavior');\n        }\n      },\n      newline: function newline(element, cursor) {\n        var atEnd = cursor.isAtEnd();\n        var br = document.createElement('br');\n        cursor.insertBefore(br);\n\n        if (atEnd) {\n          log('at the end');\n          var noWidthSpace = document.createTextNode(\"\\u200B\");\n          cursor.insertAfter(noWidthSpace); // var trailingBr = document.createElement('br');\n          // trailingBr.setAttribute('type', '-editablejs');\n          // cursor.insertAfter(trailingBr);\n        } else {\n          log('not at the end');\n        }\n\n        cursor.setVisibleSelection();\n      },\n      insert: function insert(element, direction, cursor) {\n        var parent = element.parentNode;\n        var newElement = element.cloneNode(false);\n        if (newElement.id) newElement.removeAttribute('id');\n\n        switch (direction) {\n          case 'before':\n            parent.insertBefore(newElement, element);\n            element.focus();\n            break;\n\n          case 'after':\n            parent.insertBefore(newElement, element.nextSibling);\n            newElement.focus();\n            break;\n        }\n      },\n      split: function split(element, before, after, cursor) {\n        var newNode = element.cloneNode();\n        newNode.appendChild(before);\n        var parent = element.parentNode;\n        parent.insertBefore(newNode, element);\n\n        while (element.firstChild) {\n          element.removeChild(element.firstChild);\n        }\n\n        element.appendChild(after);\n        content.tidyHtml(newNode);\n        content.tidyHtml(element);\n        element.focus();\n      },\n      merge: function merge(element, direction, cursor) {\n        var container, merger, fragment, chunks, i, newChild, range;\n\n        switch (direction) {\n          case 'before':\n            container = block.previous(element);\n            merger = element;\n            break;\n\n          case 'after':\n            container = element;\n            merger = block.next(element);\n            break;\n        }\n\n        if (!(container && merger)) return;\n\n        if (container.childNodes.length > 0) {\n          cursor = editable.appendTo(container, merger.innerHTML);\n        } else {\n          cursor = editable.prependTo(container, merger.innerHTML);\n        } // remove merged node\n\n\n        merger.parentNode.removeChild(merger);\n        cursor.save();\n        content.tidyHtml(container);\n        cursor.restore();\n        cursor.setVisibleSelection();\n      },\n      empty: function empty(element) {\n        log('Default empty behavior');\n      },\n      'switch': function _switch(element, direction, cursor) {\n        var next, previous;\n\n        switch (direction) {\n          case 'before':\n            previous = block.previous(element);\n\n            if (previous) {\n              cursor.moveAtTextEnd(previous);\n              cursor.setVisibleSelection();\n            }\n\n            break;\n\n          case 'after':\n            next = block.next(element);\n\n            if (next) {\n              cursor.moveAtBeginning(next);\n              cursor.setVisibleSelection();\n            }\n\n            break;\n        }\n      },\n      move: function move(element, selection, direction) {\n        log('Default move behavior');\n      },\n      paste: function paste(element, blocks, cursor) {\n        var fragment;\n        var firstBlock = blocks[0];\n        cursor.insertBefore(firstBlock);\n\n        if (blocks.length <= 1) {\n          cursor.setVisibleSelection();\n        } else {\n          var parent = element.parentNode;\n          var currentElement = element;\n\n          for (var i = 1; i < blocks.length; i++) {\n            var newElement = element.cloneNode(false);\n            if (newElement.id) newElement.removeAttribute('id');\n            fragment = content.createFragmentFromString(blocks[i]);\n            $(newElement).append(fragment);\n            parent.insertBefore(newElement, currentElement.nextSibling);\n            currentElement = newElement;\n          } // focus last element\n\n\n          cursor = editable.createCursorAtEnd(currentElement);\n          cursor.setVisibleSelection();\n        }\n      },\n      clipboard: function clipboard(element, action, cursor) {\n        log('Default clipboard behavior');\n      }\n    };\n  };\n\n  var createDefaultEvents = function createDefaultEvents(editable) {\n    var behavior = createDefaultBehavior(editable);\n    return {\n      /**\n       * The focus event is triggered when an element gains focus.\n       * The default behavior is to... TODO\n       *\n       * @event focus\n       * @param {HTMLElement} element The element triggering the event.\n       */\n      focus: function focus(element) {\n        behavior.focus(element);\n      },\n\n      /**\n       * The blur event is triggered when an element looses focus.\n       * The default behavior is to... TODO\n       *\n       * @event blur\n       * @param {HTMLElement} element The element triggering the event.\n       */\n      blur: function blur(element) {\n        behavior.blur(element);\n      },\n\n      /**\n       * The flow event is triggered when the user starts typing or pause typing.\n       * The default behavior is to... TODO\n       *\n       * @event flow\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {String} action The flow action: \"start\" or \"pause\".\n       */\n      flow: function flow(element, action) {\n        behavior.flow(element, action);\n      },\n\n      /**\n       * The selection event is triggered after the user has selected some\n       * content.\n       * The default behavior is to... TODO\n       *\n       * @event selection\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {Selection} selection The actual Selection object.\n       */\n      selection: function selection(element, _selection2) {\n        behavior.selection(element, _selection2);\n      },\n\n      /**\n       * The cursor event is triggered after cursor position has changed.\n       * The default behavior is to... TODO\n       *\n       * @event cursor\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {Cursor} cursor The actual Cursor object.\n       */\n      cursor: function cursor(element, _cursor2) {\n        behavior.cursor(element, _cursor2);\n      },\n\n      /**\n       * The newline event is triggered when a newline should be inserted. This\n       * happens when SHIFT+ENTER key is pressed.\n       * The default behavior is to add a <br />\n       *\n       * @event newline\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {Cursor} cursor The actual cursor object.\n       */\n      newline: function newline(element, cursor) {\n        behavior.newline(element, cursor);\n      },\n\n      /**\n       * The split event is triggered when a block should be splitted into two\n       * blocks. This happens when ENTER is pressed within a non-empty block.\n       * The default behavior is to... TODO\n       *\n       * @event split\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {String} before The HTML string before the split.\n       * @param {String} after The HTML string after the split.\n       * @param {Cursor} cursor The actual cursor object.\n       */\n      split: function split(element, before, after, cursor) {\n        behavior.split(element, before, after, cursor);\n      },\n\n      /**\n       * The insert event is triggered when a new block should be inserted. This\n       * happens when ENTER key is pressed at the beginning of a block (should\n       * insert before) or at the end of a block (should insert after).\n       * The default behavior is to... TODO\n       *\n       * @event insert\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {String} direction The insert direction: \"before\" or \"after\".\n       * @param {Cursor} cursor The actual cursor object.\n       */\n      insert: function insert(element, direction, cursor) {\n        behavior.insert(element, direction, cursor);\n      },\n\n      /**\n       * The merge event is triggered when two needs to be merged. This happens\n       * when BACKSPACE is pressed at the beginning of a block (should merge with\n       * the preceeding block) or DEL is pressed at the end of a block (should\n       * merge with the following block).\n       * The default behavior is to... TODO\n       *\n       * @event merge\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {String} direction The merge direction: \"before\" or \"after\".\n       * @param {Cursor} cursor The actual cursor object.\n       */\n      merge: function merge(element, direction, cursor) {\n        behavior.merge(element, direction, cursor);\n      },\n\n      /**\n       * The empty event is triggered when a block is emptied.\n       * The default behavior is to... TODO\n       *\n       * @event empty\n       * @param {HTMLElement} element The element triggering the event.\n       */\n      empty: function empty(element) {\n        behavior.empty(element);\n      },\n\n      /**\n       * The switch event is triggered when the user switches to another block.\n       * This happens when an ARROW key is pressed near the boundaries of a block.\n       * The default behavior is to... TODO\n       *\n       * @event switch\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {String} direction The switch direction: \"before\" or \"after\".\n       * @param {Cursor} cursor The actual cursor object.*\n       */\n      'switch': function _switch(element, direction, cursor) {\n        behavior.switch(element, direction, cursor);\n      },\n\n      /**\n       * The move event is triggered when the user moves a selection in a block.\n       * This happens when the user selects some (or all) content in a block and\n       * an ARROW key is pressed (up: drag before, down: drag after).\n       * The default behavior is to... TODO\n       *\n       * @event move\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {Selection} selection The actual Selection object.\n       * @param {String} direction The move direction: \"before\" or \"after\".\n       */\n      move: function move(element, selection, direction) {\n        behavior.move(element, selection, direction);\n      },\n\n      /**\n       * The clipboard event is triggered when the user copies or cuts\n       * a selection within a block.\n       *\n       * @event clipboard\n       * @param {HTMLElement} element The element triggering the event.\n       * @param {String} action The clipboard action: \"copy\" or \"cut\".\n       * @param {Cursor} cursor The actual cursor object.\n       */\n      clipboard: function clipboard(element, action, cursor) {\n        behavior.clipboard(element, action, cursor);\n      },\n\n      /**\n       * The paste event is triggered when the user pastes text\n       *\n       * @event paste\n       * @param {HTMLElement} The element triggering the event.\n       * @param {Array of String} The pasted blocks\n       * @param {Cursor} The cursor object.\n       */\n      paste: function paste(element, blocks, cursor) {\n        behavior.paste(element, blocks, cursor);\n      }\n    };\n  };\n  /**\n   * The Dispatcher module is responsible for dealing with events and their handlers.\n   *\n   * @module core\n   * @submodule dispatcher\n   */\n\n\n  var Dispatcher = function Dispatcher(editable) {\n    var win = editable.win;\n    eventable(this, editable);\n    this.supportsInputEvent = false;\n    this.$document = $(win.document);\n    this.config = editable.config;\n    this.editable = editable;\n    this.editableSelector = editable.editableSelector;\n    this.keyboard = new Keyboard();\n    this.selectionWatcher = new SelectionWatcher(this, win);\n    this.setup();\n  }; // This will be set to true once we detect the input event is working.\n  // Input event description on MDN:\n  // https://developer.mozilla.org/en-US/docs/Web/Reference/Events/input\n\n\n  var isInputEventSupported = false;\n  /**\n   * Sets up all events that Editable.JS is catching.\n   *\n   * @method setup\n   */\n\n  Dispatcher.prototype.setup = function () {\n    // setup all events notifications\n    this.setupElementEvents();\n    this.setupKeyboardEvents();\n\n    if (browserFeatures.selectionchange) {\n      this.setupSelectionChangeEvents();\n    } else {\n      this.setupSelectionChangeFallback();\n    }\n  };\n\n  Dispatcher.prototype.unload = function () {\n    this.off();\n    this.$document.off('.editable');\n  };\n  /**\n   * Sets up events that are triggered on modifying an element.\n   *\n   * @method setupElementEvents\n   * @param {HTMLElement} $document: The document element.\n   * @param {Function} notifier: The callback to be triggered when the event is caught.\n   */\n\n\n  Dispatcher.prototype.setupElementEvents = function () {\n    var _this = this;\n\n    this.$document.on('focus.editable', _this.editableSelector, function (event) {\n      if (this.getAttribute(config.pastingAttribute)) return;\n\n      _this.notify('focus', this);\n    }).on('blur.editable', _this.editableSelector, function (event) {\n      if (this.getAttribute(config.pastingAttribute)) return;\n\n      _this.notify('blur', this);\n    }).on('copy.editable', _this.editableSelector, function (event) {\n      _this.notify('clipboard', this, 'copy', _this.selectionWatcher.getFreshSelection());\n    }).on('cut.editable', _this.editableSelector, function (event) {\n      _this.notify('clipboard', this, 'cut', _this.selectionWatcher.getFreshSelection());\n\n      _this.triggerChangeEvent(this);\n    }).on('paste.editable', _this.editableSelector, function (event) {\n      var element = this;\n\n      var afterPaste = function afterPaste(blocks, cursor) {\n        if (blocks.length) {\n          _this.notify('paste', element, blocks, cursor); // The input event does not fire when we process the content manually\n          // and insert it via script\n\n\n          _this.notify('change', element);\n        } else {\n          cursor.setVisibleSelection();\n        }\n      };\n\n      var cursor = _this.selectionWatcher.getFreshSelection();\n\n      clipboard.paste(this, cursor, afterPaste);\n    }).on('input.editable', _this.editableSelector, function (event) {\n      if (isInputEventSupported) {\n        _this.notify('change', this);\n      } else {\n        // Most likely the event was already handled manually by\n        // triggerChangeEvent so the first time we just switch the\n        // isInputEventSupported flag without notifiying the change event.\n        isInputEventSupported = true;\n      }\n    }).on('formatEditable.editable', _this.editableSelector, function (event) {\n      _this.notify('change', this);\n    });\n  };\n  /**\n   * Trigger a change event\n   *\n   * This should be done in these cases:\n   * - typing a letter\n   * - delete (backspace and delete keys)\n   * - cut\n   * - paste\n   * - copy and paste (not easily possible manually as far as I know)\n   *\n   * Preferrably this is done using the input event. But the input event is not\n   * supported on all browsers for contenteditable elements.\n   * To make things worse it is not detectable either. So instead of detecting\n   * we set 'isInputEventSupported' when the input event fires the first time.\n   */\n\n\n  Dispatcher.prototype.triggerChangeEvent = function (target) {\n    if (isInputEventSupported) return;\n    this.notify('change', target);\n  };\n\n  Dispatcher.prototype.dispatchSwitchEvent = function (event, element, direction) {\n    var cursor;\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) return;\n    cursor = this.selectionWatcher.getSelection();\n    if (!cursor || cursor.isSelection) return; // Detect if the browser moved the cursor in the next tick.\n    // If the cursor stays at its position, fire the switch event.\n\n    var dispatcher = this;\n    setTimeout(function () {\n      var newCursor = dispatcher.selectionWatcher.forceCursor();\n\n      if (newCursor.equals(cursor)) {\n        event.preventDefault();\n        event.stopPropagation();\n        dispatcher.notify('switch', element, direction, newCursor);\n      }\n    }, 1);\n  };\n  /**\n   * Sets up events that are triggered on keyboard events.\n   * Keyboard definitions are in {{#crossLink \"Keyboard\"}}{{/crossLink}}.\n   *\n   * @method setupKeyboardEvents\n   * @param {HTMLElement} $document: The document element.\n   * @param {Function} notifier: The callback to be triggered when the event is caught.\n   */\n\n\n  Dispatcher.prototype.setupKeyboardEvents = function () {\n    var _this = this;\n\n    this.$document.on('keydown.editable', this.editableSelector, function (event) {\n      var notifyCharacterEvent = !isInputEventSupported;\n\n      _this.keyboard.dispatchKeyEvent(event, this, notifyCharacterEvent);\n    });\n    this.keyboard.on('left', function (event) {\n      _this.dispatchSwitchEvent(event, this, 'before');\n    }).on('up', function (event) {\n      _this.dispatchSwitchEvent(event, this, 'before');\n    }).on('right', function (event) {\n      _this.dispatchSwitchEvent(event, this, 'after');\n    }).on('down', function (event) {\n      _this.dispatchSwitchEvent(event, this, 'after');\n    }).on('tab', function (event) {}).on('shiftTab', function (event) {}).on('esc', function (event) {}).on('backspace', function (event) {\n      var range = _this.selectionWatcher.getFreshRange();\n\n      if (range.isCursor) {\n        var cursor = range.getCursor();\n\n        if (cursor.isAtBeginning()) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          _this.notify('merge', this, 'before', cursor);\n        } else {\n          _this.triggerChangeEvent(this);\n        }\n      } else {\n        _this.triggerChangeEvent(this);\n      }\n    }).on('delete', function (event) {\n      var range = _this.selectionWatcher.getFreshRange();\n\n      if (range.isCursor) {\n        var cursor = range.getCursor();\n\n        if (cursor.isAtTextEnd()) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          _this.notify('merge', this, 'after', cursor);\n        } else {\n          _this.triggerChangeEvent(this);\n        }\n      } else {\n        _this.triggerChangeEvent(this);\n      }\n    }).on('enter', function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      var range = _this.selectionWatcher.getFreshRange();\n\n      var cursor = range.forceCursor();\n\n      if (cursor.isAtTextEnd()) {\n        _this.notify('insert', this, 'after', cursor);\n      } else if (cursor.isAtBeginning()) {\n        _this.notify('insert', this, 'before', cursor);\n      } else {\n        _this.notify('split', this, cursor.before(), cursor.after(), cursor);\n      }\n    }).on('shiftEnter', function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      var cursor = _this.selectionWatcher.forceCursor();\n\n      _this.notify('newline', this, cursor);\n    }).on('character', function (event) {\n      _this.notify('change', this);\n    });\n  };\n  /**\n   * Sets up events that are triggered on a selection change.\n   *\n   * @method setupSelectionChangeEvents\n   * @param {HTMLElement} $document: The document element.\n   * @param {Function} notifier: The callback to be triggered when the event is caught.\n   */\n\n\n  Dispatcher.prototype.setupSelectionChangeEvents = function () {\n    var selectionDirty = false;\n    var suppressSelectionChanges = false;\n    var $document = this.$document;\n    var selectionWatcher = this.selectionWatcher;\n\n    var _this = this; // fires on mousemove (thats probably a bit too much)\n    // catches changes like 'select all' from context menu\n\n\n    $document.on('selectionchange.editable', function (event) {\n      if (suppressSelectionChanges) {\n        selectionDirty = true;\n      } else {\n        selectionWatcher.selectionChanged();\n      }\n    }); // listen for selection changes by mouse so we can\n    // suppress the selectionchange event and only fire the\n    // change event on mouseup\n\n    $document.on('mousedown.editable', this.editableSelector, function (event) {\n      if (_this.config.mouseMoveSelectionChanges === false) {\n        suppressSelectionChanges = true; // Without this timeout the previous selection is active\n        // until the mouseup event (no. not good).\n\n        setTimeout($.proxy(selectionWatcher, 'selectionChanged'), 0);\n      }\n\n      $document.on('mouseup.editableSelection', function (event) {\n        $document.off('.editableSelection');\n        suppressSelectionChanges = false;\n\n        if (selectionDirty) {\n          selectionDirty = false;\n          selectionWatcher.selectionChanged();\n        }\n      });\n    });\n  };\n  /**\n   * Fallback solution to support selection change events on browsers that don't\n   * support selectionChange.\n   *\n   * @method setupSelectionChangeFallback\n   * @param {HTMLElement} $document: The document element.\n   * @param {Function} notifier: The callback to be triggered when the event is caught.\n   */\n\n\n  Dispatcher.prototype.setupSelectionChangeFallback = function () {\n    var $document = this.$document;\n    var selectionWatcher = this.selectionWatcher; // listen for selection changes by mouse\n\n    $document.on('mouseup.editableSelection', function (event) {\n      // In Opera when clicking outside of a block\n      // it does not update the selection as it should\n      // without the timeout\n      setTimeout($.proxy(selectionWatcher, 'selectionChanged'), 0);\n    }); // listen for selection changes by keys\n\n    $document.on('keyup.editable', this.editableSelector, function (event) {\n      // when pressing Command + Shift + Left for example the keyup is only triggered\n      // after at least two keys are released. Strange. The culprit seems to be the\n      // Command key. Do we need a workaround?\n      selectionWatcher.selectionChanged();\n    });\n  }; // Eventable Mixin.\n  //\n  // Simple mixin to add event emitter methods to an object (Publish/Subscribe).\n  //\n  // Add on, off and notify methods to an object:\n  // eventable(obj);\n  //\n  // publish an event:\n  // obj.notify(context, 'action', param1, param2);\n  //\n  // Optionally pass a context that will be applied to every event:\n  // eventable(obj, context);\n  //\n  // With this publishing can omit the context argument:\n  // obj.notify('action', param1, param2);\n  //\n  // Subscribe to a 'channel'\n  // obj.on('action', funtion(param1, param2){ ... });\n  //\n  // Unsubscribe an individual listener:\n  // obj.off('action', method);\n  //\n  // Unsubscribe all listeners of a channel:\n  // obj.off('action');\n  //\n  // Unsubscribe all listeners of all channels:\n  // obj.off();\n\n\n  var getEventableModule = function getEventableModule(notifyContext) {\n    var listeners = {};\n\n    var addListener = function addListener(event, listener) {\n      if (listeners[event] === undefined) {\n        listeners[event] = [];\n      }\n\n      listeners[event].push(listener);\n    };\n\n    var removeListener = function removeListener(event, listener) {\n      var eventListeners = listeners[event];\n      if (eventListeners === undefined) return;\n\n      for (var i = 0, len = eventListeners.length; i < len; i++) {\n        if (eventListeners[i] === listener) {\n          eventListeners.splice(i, 1);\n          break;\n        }\n      }\n    }; // Public Methods\n\n\n    return {\n      on: function on(event, listener) {\n        if (arguments.length === 2) {\n          addListener(event, listener);\n        } else if (arguments.length === 1) {\n          var eventObj = event;\n\n          for (var eventType in eventObj) {\n            addListener(eventType, eventObj[eventType]);\n          }\n        }\n\n        return this;\n      },\n      off: function off(event, listener) {\n        if (arguments.length === 2) {\n          removeListener(event, listener);\n        } else if (arguments.length === 1) {\n          listeners[event] = [];\n        } else {\n          listeners = {};\n        }\n      },\n      notify: function notify(context, event) {\n        var args;\n\n        if (notifyContext) {\n          event = context;\n          context = notifyContext;\n          args = Array.prototype.slice.call(arguments).splice(1);\n        } else {\n          args = Array.prototype.slice.call(arguments).splice(2);\n        }\n\n        var eventListeners = listeners[event];\n        if (eventListeners === undefined) return; // Traverse backwards and execute the newest listeners first.\n        // Stop if a listener returns false.\n\n        for (var i = eventListeners.length - 1; i >= 0; i--) {\n          if (eventListeners[i].apply(context, args) === false) break;\n        }\n      }\n    };\n  };\n\n  var eventable = function eventable(obj, notifyContext) {\n    var module = getEventableModule(notifyContext);\n\n    for (var prop in module) {\n      obj[prop] = module[prop];\n    }\n  };\n\n  var browserFeatures = function () {\n    /**\n     * Check for contenteditable support\n     *\n     * (from Modernizr)\n     * this is known to false positive in some mobile browsers\n     * here is a whitelist of verified working browsers:\n     * https://github.com/NielsLeenheer/html5test/blob/549f6eac866aa861d9649a0707ff2c0157895706/scripts/engine.js#L2083\n     */\n    var contenteditable = typeof document.documentElement.contentEditable !== 'undefined';\n    /**\n     * Check selectionchange event (currently supported in IE, Chrome and Safari)\n     *\n     * To handle selectionchange in firefox see CKEditor selection object\n     * https://github.com/ckeditor/ckeditor-dev/blob/master/core/selection.js#L388\n     */\n\n    var selectionchange = function () {\n      // not exactly feature detection... is it?\n      return !(bowser.gecko || bowser.opera);\n    }();\n\n    return {\n      contenteditable: contenteditable,\n      selectionchange: selectionchange\n    };\n  }();\n\n  var highlightText = function () {\n    return {\n      extractText: function extractText(element) {\n        var text = '';\n        this.getText(element, function (part) {\n          text += part;\n        });\n        return text;\n      },\n      // Extract the text of an element.\n      // This has two notable behaviours:\n      // - It uses a NodeIterator which will skip elements\n      //   with data-editable=\"remove\"\n      // - It returns a space for <br> elements\n      //   (The only block level element allowed inside of editables)\n      getText: function getText(element, callback) {\n        var iterator = new NodeIterator(element);\n        var next;\n\n        while (next = iterator.getNext()) {\n          if (next.nodeType === nodeType.textNode && next.data !== '') {\n            callback(next.data);\n          } else if (next.nodeType === nodeType.elementNode && next.nodeName === 'BR') {\n            callback(' ');\n          }\n        }\n      },\n      highlight: function highlight(element, regex, stencilElement) {\n        var matches = this.find(element, regex);\n        this.highlightMatches(element, matches, stencilElement);\n      },\n      find: function find(element, regex) {\n        var text = this.extractText(element);\n        var match;\n        var matches = [];\n        var matchIndex = 0;\n\n        while (match = regex.exec(text)) {\n          matches.push(this.prepareMatch(match, matchIndex));\n          matchIndex += 1;\n        }\n\n        return matches;\n      },\n      highlightMatches: function highlightMatches(element, matches, stencilElement) {\n        if (!matches || matches.length === 0) {\n          return;\n        }\n\n        var next, textNode, length, offset, isFirstPortion, isLastPortion, wordId;\n        var currentMatchIndex = 0;\n        var currentMatch = matches[currentMatchIndex];\n        var totalOffset = 0;\n        var iterator = new NodeIterator(element);\n        var portions = [];\n\n        while (next = iterator.getNext()) {\n          // Account for <br> elements\n          if (next.nodeType === nodeType.textNode && next.data !== '') {\n            textNode = next;\n          } else if (next.nodeType === nodeType.elementNode && next.nodeName === 'BR') {\n            totalOffset = totalOffset + 1;\n            continue;\n          } else {\n            continue;\n          }\n\n          var nodeText = textNode.data;\n          var nodeEndOffset = totalOffset + nodeText.length;\n\n          if (currentMatch.startIndex < nodeEndOffset && totalOffset < currentMatch.endIndex) {\n            // get portion position (fist, last or in the middle)\n            isFirstPortion = isLastPortion = false;\n\n            if (totalOffset <= currentMatch.startIndex) {\n              isFirstPortion = true;\n              wordId = currentMatch.startIndex;\n            }\n\n            if (nodeEndOffset >= currentMatch.endIndex) {\n              isLastPortion = true;\n            } // calculate offset and length\n\n\n            if (isFirstPortion) {\n              offset = currentMatch.startIndex - totalOffset;\n            } else {\n              offset = 0;\n            }\n\n            if (isLastPortion) {\n              length = currentMatch.endIndex - totalOffset - offset;\n            } else {\n              length = nodeText.length - offset;\n            } // create portion object\n\n\n            var portion = {\n              element: textNode,\n              text: nodeText.substring(offset, offset + length),\n              offset: offset,\n              length: length,\n              isLastPortion: isLastPortion,\n              wordId: wordId\n            };\n            portions.push(portion);\n\n            if (isLastPortion) {\n              var lastNode = this.wrapWord(portions, stencilElement);\n              iterator.replaceCurrent(lastNode); // recalculate nodeEndOffset if we have to replace the current node.\n\n              nodeEndOffset = totalOffset + portion.length + portion.offset;\n              portions = [];\n              currentMatchIndex += 1;\n\n              if (currentMatchIndex < matches.length) {\n                currentMatch = matches[currentMatchIndex];\n              }\n            }\n          }\n\n          totalOffset = nodeEndOffset;\n        }\n      },\n      getRange: function getRange(element) {\n        var range = rangy.createRange();\n        range.selectNodeContents(element);\n        return range;\n      },\n      // @return the last wrapped element\n      wrapWord: function wrapWord(portions, stencilElement) {\n        var element;\n\n        for (var i = 0; i < portions.length; i++) {\n          var portion = portions[i];\n          element = this.wrapPortion(portion, stencilElement);\n        }\n\n        return element;\n      },\n      wrapPortion: function wrapPortion(portion, stencilElement) {\n        var range = rangy.createRange();\n        range.setStart(portion.element, portion.offset);\n        range.setEnd(portion.element, portion.offset + portion.length);\n        var node = stencilElement.cloneNode(true);\n        node.setAttribute('data-word-id', portion.wordId);\n        range.surroundContents(node); // Fix a weird behaviour where an empty text node is inserted after the range\n\n        if (node.nextSibling) {\n          var next = node.nextSibling;\n\n          if (next.nodeType === nodeType.textNode && next.data === '') {\n            next.parentNode.removeChild(next);\n          }\n        }\n\n        return node;\n      },\n      prepareMatch: function prepareMatch(match, matchIndex) {\n        // Quickfix for the spellcheck regex where we need to match the second subgroup.\n        if (match[2]) {\n          return this.prepareMatchForSecondSubgroup(match, matchIndex);\n        }\n\n        return {\n          startIndex: match.index,\n          endIndex: match.index + match[0].length,\n          matchIndex: matchIndex,\n          search: match[0]\n        };\n      },\n      prepareMatchForSecondSubgroup: function prepareMatchForSecondSubgroup(match, matchIndex) {\n        var index = match.index;\n        index += match[1].length;\n        return {\n          startIndex: index,\n          endIndex: index + match[2].length,\n          matchIndex: matchIndex,\n          search: match[0]\n        };\n      }\n    };\n  }();\n  /**\n   * The Keyboard module defines an event API for key events.\n   */\n\n\n  var Keyboard = function Keyboard() {\n    eventable(this);\n  };\n\n  Keyboard.prototype.dispatchKeyEvent = function (event, target, notifyCharacterEvent) {\n    switch (event.keyCode) {\n      case this.key.left:\n        this.notify(target, 'left', event);\n        break;\n\n      case this.key.right:\n        this.notify(target, 'right', event);\n        break;\n\n      case this.key.up:\n        this.notify(target, 'up', event);\n        break;\n\n      case this.key.down:\n        this.notify(target, 'down', event);\n        break;\n\n      case this.key.tab:\n        if (event.shiftKey) {\n          this.notify(target, 'shiftTab', event);\n        } else {\n          this.notify(target, 'tab', event);\n        }\n\n        break;\n\n      case this.key.esc:\n        this.notify(target, 'esc', event);\n        break;\n\n      case this.key.backspace:\n        this.notify(target, 'backspace', event);\n        break;\n\n      case this.key['delete']:\n        this.notify(target, 'delete', event);\n        break;\n\n      case this.key.enter:\n        if (event.shiftKey) {\n          this.notify(target, 'shiftEnter', event);\n        } else {\n          this.notify(target, 'enter', event);\n        }\n\n        break;\n\n      case this.key.ctrl:\n      case this.key.shift:\n      case this.key.alt:\n        break;\n      // Metakey\n\n      case 224: // Firefox: 224\n\n      case 17: // Opera: 17\n\n      case 91: // Chrome/Safari: 91 (Left)\n\n      case 93:\n        // Chrome/Safari: 93 (Right)\n        break;\n\n      default:\n        if (notifyCharacterEvent) {\n          this.notify(target, 'character', event);\n        }\n\n    }\n  };\n\n  Keyboard.prototype.key = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    tab: 9,\n    esc: 27,\n    backspace: 8,\n    'delete': 46,\n    enter: 13,\n    shift: 16,\n    ctrl: 17,\n    alt: 18\n  };\n  Keyboard.key = Keyboard.prototype.key; // A DOM node iterator.\n  //\n  // Has the ability to replace nodes on the fly and continue\n  // the iteration.\n\n  var NodeIterator = function () {\n    var NodeIterator = function NodeIterator(root) {\n      this.root = root;\n      this.current = this.next = this.root;\n    };\n\n    NodeIterator.prototype.getNextTextNode = function () {\n      var next;\n\n      while (next = this.getNext()) {\n        if (next.nodeType === nodeType.textNode && next.data !== '') {\n          return next;\n        }\n      }\n    };\n\n    NodeIterator.prototype.getNext = function () {\n      var child, n;\n      n = this.current = this.next;\n      child = this.next = undefined;\n\n      if (this.current) {\n        child = n.firstChild; // Skip the children of elements with the attribute data-editable=\"remove\"\n        // This prevents text nodes that are not part of the content to be included.\n\n        if (child && n.getAttribute('data-editable') !== 'remove') {\n          this.next = child;\n        } else {\n          while (n !== this.root && !(this.next = n.nextSibling)) {\n            n = n.parentNode;\n          }\n        }\n      }\n\n      return this.current;\n    };\n\n    NodeIterator.prototype.replaceCurrent = function (replacement) {\n      this.current = replacement;\n      this.next = undefined;\n      var n = this.current;\n\n      while (n !== this.root && !(this.next = n.nextSibling)) {\n        n = n.parentNode;\n      }\n    };\n\n    return NodeIterator;\n  }(); // DOM node types\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType\n\n\n  var nodeType = {\n    elementNode: 1,\n    attributeNode: 2,\n    textNode: 3,\n    cdataSectionNode: 4,\n    entityReferenceNode: 5,\n    entityNode: 6,\n    processingInstructionNode: 7,\n    commentNode: 8,\n    documentNode: 9,\n    documentTypeNode: 10,\n    documentFragmentNode: 11,\n    notationNode: 12\n  };\n  /**\n   * The parser module provides helper methods to parse html-chunks\n   * manipulations and helpers for common tasks.\n   *\n   * @module core\n   * @submodule parser\n   */\n\n  var parser = function () {\n    /**\n     * Singleton that provides DOM lookup helpers.\n     * @static\n     */\n    return {\n      /**\n       * Get the editableJS host block of a node.\n       *\n       * @method getHost\n       * @param {DOM Node}\n       * @return {DOM Node}\n       */\n      getHost: function getHost(node) {\n        var editableSelector = '.' + config.editableClass;\n        var hostNode = $(node).closest(editableSelector);\n        return hostNode.length ? hostNode[0] : undefined;\n      },\n\n      /**\n       * Get the index of a node.\n       * So that parent.childNodes[ getIndex(node) ] would return the node again\n       *\n       * @method getNodeIndex\n       * @param {HTMLElement}\n       */\n      getNodeIndex: function getNodeIndex(node) {\n        var index = 0;\n\n        while ((node = node.previousSibling) !== null) {\n          index += 1;\n        }\n\n        return index;\n      },\n\n      /**\n       * Check if node contains text or element nodes\n       * whitespace counts too!\n       *\n       * @method isVoid\n       * @param {HTMLElement}\n       */\n      isVoid: function isVoid(node) {\n        var child, i, len;\n        var childNodes = node.childNodes;\n\n        for (i = 0, len = childNodes.length; i < len; i++) {\n          child = childNodes[i];\n\n          if (child.nodeType === nodeType.textNode && !this.isVoidTextNode(child)) {\n            return false;\n          } else if (child.nodeType === nodeType.elementNode) {\n            return false;\n          }\n        }\n\n        return true;\n      },\n\n      /**\n       * Check if node is a text node and completely empty without any whitespace\n       *\n       * @method isVoidTextNode\n       * @param {HTMLElement}\n       */\n      isVoidTextNode: function isVoidTextNode(node) {\n        return node.nodeType === nodeType.textNode && !node.nodeValue;\n      },\n\n      /**\n       * Check if node is a text node and contains nothing but whitespace\n       *\n       * @method isWhitespaceOnly\n       * @param {HTMLElement}\n       */\n      isWhitespaceOnly: function isWhitespaceOnly(node) {\n        return node.nodeType === nodeType.textNode && this.lastOffsetWithContent(node) === 0;\n      },\n      isLinebreak: function isLinebreak(node) {\n        return node.nodeType === nodeType.elementNode && node.tagName === 'BR';\n      },\n\n      /**\n       * Returns the last offset where the cursor can be positioned to\n       * be at the visible end of its container.\n       * Currently works only for empty text nodes (not empty tags)\n       *\n       * @method isWhitespaceOnly\n       * @param {HTMLElement}\n       */\n      lastOffsetWithContent: function lastOffsetWithContent(node) {\n        if (node.nodeType === nodeType.textNode) {\n          return string.trimRight(node.nodeValue).length;\n        } else {\n          var i,\n              childNodes = node.childNodes;\n\n          for (i = childNodes.length - 1; i >= 0; i--) {\n            node = childNodes[i];\n\n            if (this.isWhitespaceOnly(node) || this.isLinebreak(node)) {\n              continue;\n            } else {\n              // The offset starts at 0 before the first element\n              // and ends with the length after the last element.\n              return i + 1;\n            }\n          }\n\n          return 0;\n        }\n      },\n      isBeginningOfHost: function isBeginningOfHost(host, container, offset) {\n        if (container === host) {\n          return this.isStartOffset(container, offset);\n        }\n\n        if (this.isStartOffset(container, offset)) {\n          var parentContainer = container.parentNode; // The index of the element simulates a range offset\n          // right before the element.\n\n          var offsetInParent = this.getNodeIndex(container);\n          return this.isBeginningOfHost(host, parentContainer, offsetInParent);\n        } else {\n          return false;\n        }\n      },\n      isEndOfHost: function isEndOfHost(host, container, offset) {\n        if (container === host) {\n          return this.isEndOffset(container, offset);\n        }\n\n        if (this.isEndOffset(container, offset)) {\n          var parentContainer = container.parentNode; // The index of the element plus one simulates a range offset\n          // right after the element.\n\n          var offsetInParent = this.getNodeIndex(container) + 1;\n          return this.isEndOfHost(host, parentContainer, offsetInParent);\n        } else {\n          return false;\n        }\n      },\n      isStartOffset: function isStartOffset(container, offset) {\n        if (container.nodeType === nodeType.textNode) {\n          return offset === 0;\n        } else {\n          if (container.childNodes.length === 0) return true;else return container.childNodes[offset] === container.firstChild;\n        }\n      },\n      isEndOffset: function isEndOffset(container, offset) {\n        if (container.nodeType === nodeType.textNode) {\n          return offset === container.length;\n        } else {\n          if (container.childNodes.length === 0) return true;else if (offset > 0) return container.childNodes[offset - 1] === container.lastChild;else return false;\n        }\n      },\n      isTextEndOfHost: function isTextEndOfHost(host, container, offset) {\n        if (container === host) {\n          return this.isTextEndOffset(container, offset);\n        }\n\n        if (this.isTextEndOffset(container, offset)) {\n          var parentContainer = container.parentNode; // The index of the element plus one simulates a range offset\n          // right after the element.\n\n          var offsetInParent = this.getNodeIndex(container) + 1;\n          return this.isTextEndOfHost(host, parentContainer, offsetInParent);\n        } else {\n          return false;\n        }\n      },\n      isTextEndOffset: function isTextEndOffset(container, offset) {\n        if (container.nodeType === nodeType.textNode) {\n          var text = string.trimRight(container.nodeValue);\n          return offset >= text.length;\n        } else if (container.childNodes.length === 0) {\n          return true;\n        } else {\n          var lastOffset = this.lastOffsetWithContent(container);\n          return offset >= lastOffset;\n        }\n      },\n      isSameNode: function isSameNode(target, source) {\n        var i, len, attr;\n        if (target.nodeType !== source.nodeType) return false;\n        if (target.nodeName !== source.nodeName) return false;\n\n        for (i = 0, len = target.attributes.length; i < len; i++) {\n          attr = target.attributes[i];\n          if (source.getAttribute(attr.name) !== attr.value) return false;\n        }\n\n        return true;\n      },\n\n      /**\n       * Return the deepest last child of a node.\n       *\n       * @method  latestChild\n       * @param  {HTMLElement} container The container to iterate on.\n       * @return {HTMLElement}           THe deepest last child in the container.\n       */\n      latestChild: function latestChild(container) {\n        if (container.lastChild) return this.latestChild(container.lastChild);else return container;\n      },\n\n      /**\n       * Checks if a documentFragment has no children.\n       * Fragments without children can cause errors if inserted into ranges.\n       *\n       * @method  isDocumentFragmentWithoutChildren\n       * @param  {HTMLElement} DOM node.\n       * @return {Boolean}\n       */\n      isDocumentFragmentWithoutChildren: function isDocumentFragmentWithoutChildren(fragment) {\n        if (fragment && fragment.nodeType === nodeType.documentFragmentNode && fragment.childNodes.length === 0) {\n          return true;\n        }\n\n        return false;\n      },\n\n      /**\n       * Determine if an element behaves like an inline element.\n       */\n      isInlineElement: function isInlineElement(window, element) {\n        var styles = element.currentStyle || window.getComputedStyle(element, '');\n        var display = styles.display;\n\n        switch (display) {\n          case 'inline':\n          case 'inline-block':\n            return true;\n\n          default:\n            return false;\n        }\n      }\n    };\n  }();\n  /** RangeContainer\n   *\n   * primarily used to compare ranges\n   * its designed to work with undefined ranges as well\n   * so we can easily compare them without checking for undefined\n   * all the time\n   */\n\n\n  var RangeContainer = function RangeContainer(editableHost, rangyRange) {\n    this.host = editableHost && editableHost.jquery ? editableHost[0] : editableHost;\n    this.range = rangyRange;\n    this.isAnythingSelected = rangyRange !== undefined;\n    this.isCursor = this.isAnythingSelected && rangyRange.collapsed;\n    this.isSelection = this.isAnythingSelected && !this.isCursor;\n  };\n\n  RangeContainer.prototype.getCursor = function () {\n    if (this.isCursor) {\n      return new Cursor(this.host, this.range);\n    }\n  };\n\n  RangeContainer.prototype.getSelection = function () {\n    if (this.isSelection) {\n      return new Selection(this.host, this.range);\n    }\n  };\n\n  RangeContainer.prototype.forceCursor = function () {\n    if (this.isSelection) {\n      var selection = this.getSelection();\n      return selection.deleteContent();\n    } else {\n      return this.getCursor();\n    }\n  };\n\n  RangeContainer.prototype.isDifferentFrom = function (otherRangeContainer) {\n    otherRangeContainer = otherRangeContainer || new RangeContainer();\n    var self = this.range;\n    var other = otherRangeContainer.range;\n\n    if (self && other) {\n      return !self.equals(other);\n    } else if (!self && !other) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * Inspired by the Selection save and restore module for Rangy by Tim Down\n   * Saves and restores ranges using invisible marker elements in the DOM.\n   */\n\n\n  var rangeSaveRestore = function () {\n    var boundaryMarkerId = 0; // (U+FEFF) zero width no-break space\n\n    var markerTextChar = \"\\uFEFF\";\n\n    var getMarker = function getMarker(host, id) {\n      return host.querySelector('#' + id);\n    };\n\n    return {\n      insertRangeBoundaryMarker: function insertRangeBoundaryMarker(range, atStart) {\n        var markerId = 'editable-range-boundary-' + (boundaryMarkerId += 1);\n        var markerEl;\n        var container = range.commonAncestorContainer; // If ownerDocument is null the commonAncestorContainer is window.document\n\n        if (container.ownerDocument === null || container.ownerDocument === undefined) {\n          error('Cannot save range: range is emtpy');\n        }\n\n        var doc = container.ownerDocument.defaultView.document; // Clone the Range and collapse to the appropriate boundary point\n\n        var boundaryRange = range.cloneRange();\n        boundaryRange.collapse(atStart); // Create the marker element containing a single invisible character using DOM methods and insert it\n\n        markerEl = doc.createElement('span');\n        markerEl.id = markerId;\n        markerEl.setAttribute('data-editable', 'remove');\n        markerEl.style.lineHeight = '0';\n        markerEl.style.display = 'none';\n        markerEl.appendChild(doc.createTextNode(markerTextChar));\n        boundaryRange.insertNode(markerEl);\n        return markerEl;\n      },\n      setRangeBoundary: function setRangeBoundary(host, range, markerId, atStart) {\n        var markerEl = getMarker(host, markerId);\n\n        if (markerEl) {\n          range[atStart ? 'setStartBefore' : 'setEndBefore'](markerEl);\n          markerEl.parentNode.removeChild(markerEl);\n        } else {\n          console.log('Marker element has been removed. Cannot restore selection.');\n        }\n      },\n      save: function save(range) {\n        var rangeInfo, startEl, endEl; // insert markers\n\n        if (range.collapsed) {\n          endEl = this.insertRangeBoundaryMarker(range, false);\n          rangeInfo = {\n            markerId: endEl.id,\n            collapsed: true\n          };\n        } else {\n          endEl = this.insertRangeBoundaryMarker(range, false);\n          startEl = this.insertRangeBoundaryMarker(range, true);\n          rangeInfo = {\n            startMarkerId: startEl.id,\n            endMarkerId: endEl.id,\n            collapsed: false\n          };\n        } // Adjust each range's boundaries to lie between its markers\n\n\n        if (range.collapsed) {\n          range.collapseBefore(endEl);\n        } else {\n          range.setEndBefore(endEl);\n          range.setStartAfter(startEl);\n        }\n\n        return rangeInfo;\n      },\n      restore: function restore(host, rangeInfo) {\n        if (rangeInfo.restored) return;\n        var range = rangy.createRange();\n\n        if (rangeInfo.collapsed) {\n          var markerEl = getMarker(host, rangeInfo.markerId);\n\n          if (markerEl) {\n            markerEl.style.display = 'inline';\n            var previousNode = markerEl.previousSibling; // Workaround for rangy issue 17\n\n            if (previousNode && previousNode.nodeType === nodeType.textNode) {\n              markerEl.parentNode.removeChild(markerEl);\n              range.collapseToPoint(previousNode, previousNode.length);\n            } else {\n              range.collapseBefore(markerEl);\n              markerEl.parentNode.removeChild(markerEl);\n            }\n          } else {\n            console.log('Marker element has been removed. Cannot restore selection.');\n          }\n        } else {\n          this.setRangeBoundary(host, range, rangeInfo.startMarkerId, true);\n          this.setRangeBoundary(host, range, rangeInfo.endMarkerId, false);\n        }\n\n        range.normalizeBoundaries();\n        return range;\n      }\n    };\n  }();\n  /**\n   * The SelectionWatcher module watches for selection changes inside\n   * of editable blocks.\n   *\n   * @module core\n   * @submodule selectionWatcher\n   */\n\n\n  var SelectionWatcher = function SelectionWatcher(dispatcher, win) {\n    this.dispatcher = dispatcher;\n    this.win = win || window;\n    this.rangySelection = undefined;\n    this.currentSelection = undefined;\n    this.currentRange = undefined;\n  };\n  /**\n   * Return a RangeContainer if the current selection is within an editable\n   * otherwise return an empty RangeContainer\n   */\n\n\n  SelectionWatcher.prototype.getRangeContainer = function () {\n    this.rangySelection = rangy.getSelection(this.win); // rangeCount is 0 or 1 in all browsers except firefox\n    // firefox can work with multiple ranges\n    // (on a mac hold down the command key to select multiple ranges)\n\n    if (this.rangySelection.rangeCount) {\n      var range = this.rangySelection.getRangeAt(0);\n      var hostNode = parser.getHost(range.commonAncestorContainer);\n\n      if (hostNode) {\n        return new RangeContainer(hostNode, range);\n      }\n    } // return an empty range container\n\n\n    return new RangeContainer();\n  };\n  /**\n   * Gets a fresh RangeContainer with the current selection or cursor.\n   *\n   * @return RangeContainer instance\n   */\n\n\n  SelectionWatcher.prototype.getFreshRange = function () {\n    return this.getRangeContainer();\n  };\n  /**\n   * Gets a fresh RangeContainer with the current selection or cursor.\n   *\n   * @return Either a Cursor or Selection instance or undefined if\n   * there is neither a selection or cursor.\n   */\n\n\n  SelectionWatcher.prototype.getFreshSelection = function () {\n    var range = this.getRangeContainer();\n    return range.isCursor ? range.getCursor(this.win) : range.getSelection(this.win);\n  };\n  /**\n   * Get the selection set by the last selectionChanged event.\n   * Sometimes the event does not fire fast enough and the seleciton\n   * you get is not the one the user sees.\n   * In those cases use #getFreshSelection()\n   *\n   * @return Either a Cursor or Selection instance or undefined if\n   * there is neither a selection or cursor.\n   */\n\n\n  SelectionWatcher.prototype.getSelection = function () {\n    return this.currentSelection;\n  };\n\n  SelectionWatcher.prototype.forceCursor = function () {\n    var range = this.getRangeContainer();\n    return range.forceCursor();\n  };\n\n  SelectionWatcher.prototype.selectionChanged = function () {\n    var newRange = this.getRangeContainer();\n\n    if (newRange.isDifferentFrom(this.currentRange)) {\n      var lastSelection = this.currentSelection;\n      this.currentRange = newRange; // empty selection or cursor\n\n      if (lastSelection) {\n        if (lastSelection.isCursor && !this.currentRange.isCursor) {\n          this.dispatcher.notify('cursor', lastSelection.host);\n        } else if (lastSelection.isSelection && !this.currentRange.isSelection) {\n          this.dispatcher.notify('selection', lastSelection.host);\n        }\n      } // set new selection or cursor and fire event\n\n\n      if (this.currentRange.isCursor) {\n        this.currentSelection = new Cursor(this.currentRange.host, this.currentRange.range);\n        this.dispatcher.notify('cursor', this.currentSelection.host, this.currentSelection);\n      } else if (this.currentRange.isSelection) {\n        this.currentSelection = new Selection(this.currentRange.host, this.currentRange.range);\n        this.dispatcher.notify('selection', this.currentSelection.host, this.currentSelection);\n      } else {\n        this.currentSelection = undefined;\n      }\n    }\n  };\n  /**\n   * The Selection module provides a cross-browser abstraction layer for range\n   * and selection.\n   *\n   * @module core\n   * @submodule selection\n   */\n\n\n  var Selection = function () {\n    /**\n     * Class that represents a selection and provides functionality to access or\n     * modify the selection.\n     *\n     * @class Selection\n     * @constructor\n     */\n    var Selection = function Selection(editableHost, rangyRange) {\n      this.setHost(editableHost);\n      this.range = rangyRange;\n      this.isSelection = true;\n    }; // add Cursor prototpye to Selection prototype chain\n\n\n    var Base = function Base() {};\n\n    Base.prototype = Cursor.prototype;\n    Selection.prototype = $.extend(new Base(), {\n      /**\n       * Get the text inside the selection.\n       *\n       * @method text\n       */\n      text: function text() {\n        return this.range.toString();\n      },\n\n      /**\n       * Get the html inside the selection.\n       *\n       * @method html\n       */\n      html: function html() {\n        return this.range.toHtml();\n      },\n\n      /**\n       *\n       * @method isAllSelected\n       */\n      isAllSelected: function isAllSelected() {\n        return parser.isBeginningOfHost(this.host, this.range.startContainer, this.range.startOffset) && parser.isTextEndOfHost(this.host, this.range.endContainer, this.range.endOffset);\n      },\n\n      /**\n       * Get the ClientRects of this selection.\n       * Use this if you want more precision than getBoundingClientRect can give.\n       */\n      getRects: function getRects() {\n        var coords = this.range.nativeRange.getClientRects(); // todo: translate into absolute positions\n        // just like Cursor#getCoordinates()\n\n        return coords;\n      },\n\n      /**\n       *\n       * @method link\n       */\n      link: function link(href, attrs) {\n        var $link = $(this.createElement('a'));\n        if (href) $link.attr('href', href);\n\n        for (var name in attrs) {\n          $link.attr(name, attrs[name]);\n        }\n\n        this.forceWrap($link[0]);\n      },\n      unlink: function unlink() {\n        this.removeFormatting('a');\n      },\n      toggleLink: function toggleLink(href, attrs) {\n        var links = this.getTagsByName('a');\n\n        if (links.length >= 1) {\n          var firstLink = links[0];\n\n          if (this.isExactSelection(firstLink, 'visible')) {\n            this.unlink();\n          } else {\n            this.expandTo(firstLink);\n          }\n        } else {\n          this.link(href, attrs);\n        }\n      },\n      toggle: function toggle(elem) {\n        elem = this.adoptElement(elem);\n        this.range = content.toggleTag(this.host, this.range, elem);\n        this.setSelection();\n      },\n\n      /**\n       *\n       * @method makeBold\n       */\n      makeBold: function makeBold() {\n        var bold = this.createElement(config.boldTag);\n        this.forceWrap(bold);\n      },\n      toggleBold: function toggleBold() {\n        var bold = this.createElement(config.boldTag);\n        this.toggle(bold);\n      },\n\n      /**\n       *\n       * @method giveEmphasis\n       */\n      giveEmphasis: function giveEmphasis() {\n        var em = this.createElement(config.italicTag);\n        this.forceWrap(em);\n      },\n      toggleEmphasis: function toggleEmphasis() {\n        var em = this.createElement(config.italicTag);\n        this.toggle(em);\n      },\n\n      /**\n       * Surround the selection with characters like quotes.\n       *\n       * @method surround\n       * @param {String} E.g. '«'\n       * @param {String} E.g. '»'\n       */\n      surround: function surround(startCharacter, endCharacter) {\n        this.range = content.surround(this.host, this.range, startCharacter, endCharacter);\n        this.setSelection();\n      },\n      removeSurround: function removeSurround(startCharacter, endCharacter) {\n        this.range = content.deleteCharacter(this.host, this.range, startCharacter);\n        this.range = content.deleteCharacter(this.host, this.range, endCharacter);\n        this.setSelection();\n      },\n      toggleSurround: function toggleSurround(startCharacter, endCharacter) {\n        if (this.containsString(startCharacter) && this.containsString(endCharacter)) {\n          this.removeSurround(startCharacter, endCharacter);\n        } else {\n          this.surround(startCharacter, endCharacter);\n        }\n      },\n\n      /**\n       * @method removeFormatting\n       * @param {String} tagName. E.g. 'a' to remove all links.\n       */\n      removeFormatting: function removeFormatting(tagName) {\n        this.range = content.removeFormatting(this.host, this.range, tagName);\n        this.setSelection();\n      },\n\n      /**\n       * Delete the contents inside the range. After that the selection will be a\n       * cursor.\n       *\n       * @method deleteContent\n       * @return Cursor instance\n       */\n      deleteContent: function deleteContent() {\n        this.range.deleteContents();\n        return new Cursor(this.host, this.range);\n      },\n\n      /**\n       * Expand the current selection.\n       *\n       * @method expandTo\n       * @param {DOM Node}\n       */\n      expandTo: function expandTo(elem) {\n        this.range = content.expandTo(this.host, this.range, elem);\n        this.setSelection();\n      },\n\n      /**\n       *  Collapse the selection at the beginning of the selection\n       *\n       *  @return Cursor instance\n       */\n      collapseAtBeginning: function collapseAtBeginning(elem) {\n        this.range.collapse(true);\n        this.setSelection();\n        return new Cursor(this.host, this.range);\n      },\n\n      /**\n       *  Collapse the selection at the end of the selection\n       *\n       *  @return Cursor instance\n       */\n      collapseAtEnd: function collapseAtEnd(elem) {\n        this.range.collapse(false);\n        this.setSelection();\n        return new Cursor(this.host, this.range);\n      },\n\n      /**\n       * Wrap the selection with the specified tag. If any other tag with\n       * the same tagName is affecting the selection this tag will be\n       * remove first.\n       *\n       * @method forceWrap\n       */\n      forceWrap: function forceWrap(elem) {\n        elem = this.adoptElement(elem);\n        this.range = content.forceWrap(this.host, this.range, elem);\n        this.setSelection();\n      },\n\n      /**\n       * Get all tags that affect the current selection. Optionally pass a\n       * method to filter the returned elements.\n       *\n       * @method getTags\n       * @param {Function filter(node)} [Optional] Method to filter the returned\n       *   DOM Nodes.\n       * @return {Array of DOM Nodes}\n       */\n      getTags: function getTags(filterFunc) {\n        return content.getTags(this.host, this.range, filterFunc);\n      },\n\n      /**\n       * Get all tags of the specified type that affect the current selection.\n       *\n       * @method getTagsByName\n       * @param {String} tagName. E.g. 'a' to get all links.\n       * @return {Array of DOM Nodes}\n       */\n      getTagsByName: function getTagsByName(tagName) {\n        return content.getTagsByName(this.host, this.range, tagName);\n      },\n\n      /**\n       * Check if the selection is the same as the elements contents.\n       *\n       * @method isExactSelection\n       * @param {DOM Node}\n       * @param {flag:  undefined or 'visible'} if 'visible' is passed\n       *   whitespaces at the beginning or end of the selection will\n       *   be ignored.\n       * @return {Boolean}\n       */\n      isExactSelection: function isExactSelection(elem, onlyVisible) {\n        return content.isExactSelection(this.range, elem, onlyVisible);\n      },\n\n      /**\n       * Check if the selection contains the passed string.\n       *\n       * @method containsString\n       * @return {Boolean}\n       */\n      containsString: function containsString(str) {\n        return content.containsString(this.range, str);\n      },\n\n      /**\n       * Delete all occurences of the specified character from the\n       * selection.\n       *\n       * @method deleteCharacter\n       */\n      deleteCharacter: function deleteCharacter(character) {\n        this.range = content.deleteCharacter(this.host, this.range, character);\n        this.setSelection();\n      }\n    });\n    return Selection;\n  }();\n\n  var Spellcheck = function () {\n    // Unicode character blocks for letters.\n    // See: http://jrgraphix.net/research/unicode_blocks.php\n    //\n    // \\\\u0041-\\\\u005A    A-Z (Basic Latin)\n    // \\\\u0061-\\\\u007A    a-z (Basic Latin)\n    // \\\\u0030-\\\\u0039    0-9 (Basic Latin)\n    // \\\\u00AA            ª   (Latin-1 Supplement)\n    // \\\\u00B5            µ   (Latin-1 Supplement)\n    // \\\\u00BA            º   (Latin-1 Supplement)\n    // \\\\u00C0-\\\\u00D6    À-Ö (Latin-1 Supplement)\n    // \\\\u00D8-\\\\u00F6    Ø-ö (Latin-1 Supplement)\n    // \\\\u00F8-\\\\u00FF    ø-ÿ (Latin-1 Supplement)\n    // \\\\u0100-\\\\u017F    Ā-ſ (Latin Extended-A)\n    // \\\\u0180-\\\\u024F    ƀ-ɏ (Latin Extended-B)\n    var letterChars = \"\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u0030-\\\\u0039\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u00FF\\\\u0100-\\\\u017F\\\\u0180-\\\\u024F\";\n\n    var escapeRegEx = function escapeRegEx(s) {\n      return String(s).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n    };\n    /**\n     * Spellcheck class.\n     *\n     * @class Spellcheck\n     * @constructor\n     */\n\n\n    var Spellcheck = function Spellcheck(editable, configuration) {\n      var defaultConfig = {\n        checkOnFocus: false,\n        // check on focus\n        checkOnChange: true,\n        // check after changes\n        throttle: 1000,\n        // unbounce rate in ms before calling the spellcheck service after changes\n        removeOnCorrection: true,\n        // remove highlights after a change if the cursor is inside a highlight\n        markerNode: $('<span class=\"spellcheck\"></span>'),\n        spellcheckService: undefined\n      };\n      this.editable = editable;\n      this.win = editable.win;\n      this.config = $.extend(defaultConfig, configuration);\n      this.prepareMarkerNode();\n      this.setup();\n    };\n\n    Spellcheck.prototype.setup = function (editable) {\n      if (this.config.checkOnFocus) {\n        this.editable.on('focus', $.proxy(this, 'onFocus'));\n        this.editable.on('blur', $.proxy(this, 'onBlur'));\n      }\n\n      if (this.config.checkOnChange || this.config.removeOnCorrection) {\n        this.editable.on('change', $.proxy(this, 'onChange'));\n      }\n    };\n\n    Spellcheck.prototype.onFocus = function (editableHost) {\n      if (this.focusedEditable !== editableHost) {\n        this.focusedEditable = editableHost;\n        this.editableHasChanged(editableHost);\n      }\n    };\n\n    Spellcheck.prototype.onBlur = function (editableHost) {\n      if (this.focusedEditable === editableHost) {\n        this.focusedEditable = undefined;\n      }\n    };\n\n    Spellcheck.prototype.onChange = function (editableHost) {\n      if (this.config.checkOnChange) {\n        this.editableHasChanged(editableHost, this.config.throttle);\n      }\n\n      if (this.config.removeOnCorrection) {\n        this.removeHighlightsAtCursor(editableHost);\n      }\n    };\n\n    Spellcheck.prototype.prepareMarkerNode = function () {\n      var marker = this.config.markerNode;\n\n      if (marker.jquery) {\n        marker = marker[0];\n      }\n\n      marker = content.adoptElement(marker, this.win.document);\n      this.config.markerNode = marker;\n      marker.setAttribute('data-editable', 'ui-unwrap');\n      marker.setAttribute('data-spellcheck', 'spellcheck');\n    };\n\n    Spellcheck.prototype.createMarkerNode = function () {\n      return this.config.markerNode.cloneNode();\n    };\n\n    Spellcheck.prototype.removeHighlights = function (editableHost) {\n      $(editableHost).find('[data-spellcheck=spellcheck]').each(function (index, elem) {\n        content.unwrap(elem);\n      });\n    };\n\n    Spellcheck.prototype.removeHighlightsAtCursor = function (editableHost) {\n      var wordId;\n      var selection = this.editable.getSelection(editableHost);\n\n      if (selection && selection.isCursor) {\n        var elementAtCursor = selection.range.startContainer;\n\n        if (elementAtCursor.nodeType === nodeType.textNode) {\n          elementAtCursor = elementAtCursor.parentNode;\n        }\n\n        do {\n          if (elementAtCursor === editableHost) return;\n\n          if (elementAtCursor.hasAttribute('data-word-id')) {\n            wordId = elementAtCursor.getAttribute('data-word-id');\n            break;\n          }\n        } while (elementAtCursor = elementAtCursor.parentNode);\n\n        if (wordId) {\n          selection.retainVisibleSelection(function () {\n            $(editableHost).find('[data-word-id=' + wordId + ']').each(function (index, elem) {\n              content.unwrap(elem);\n            });\n          });\n        }\n      }\n    };\n\n    Spellcheck.prototype.createRegex = function (words) {\n      var escapedWords = $.map(words, function (word) {\n        return escapeRegEx(word);\n      });\n      var regex = '';\n      regex += '([^' + letterChars + ']|^)';\n      regex += '(' + escapedWords.join('|') + ')';\n      regex += '(?=[^' + letterChars + ']|$)';\n      return new RegExp(regex, 'g');\n    };\n\n    Spellcheck.prototype.highlight = function (editableHost, misspelledWords) {\n      // Remove old highlights\n      this.removeHighlights(editableHost); // Create new highlights\n\n      if (misspelledWords && misspelledWords.length > 0) {\n        var regex = this.createRegex(misspelledWords);\n        var span = this.createMarkerNode();\n        highlightText.highlight(editableHost, regex, span);\n      }\n    };\n\n    Spellcheck.prototype.editableHasChanged = function (editableHost, throttle) {\n      if (this.timeoutId && this.currentEditableHost === editableHost) {\n        clearTimeout(this.timeoutId);\n      }\n\n      var that = this;\n      this.timeoutId = setTimeout(function () {\n        that.checkSpelling(editableHost);\n        that.currentEditableHost = undefined;\n        that.timeoutId = undefined;\n      }, throttle || 0);\n      this.currentEditableHost = editableHost;\n    };\n\n    Spellcheck.prototype.checkSpelling = function (editableHost) {\n      var that = this;\n      var text = highlightText.extractText(editableHost);\n      text = content.normalizeWhitespace(text);\n      this.config.spellcheckService(text, function (misspelledWords) {\n        var selection = that.editable.getSelection(editableHost);\n\n        if (selection) {\n          selection.retainVisibleSelection(function () {\n            that.highlight(editableHost, misspelledWords);\n          });\n        } else {\n          that.highlight(editableHost, misspelledWords);\n        }\n      });\n    };\n\n    return Spellcheck;\n  }();\n\n  window.Editable = Editable;\n  Editable.parser = parser;\n  Editable.content = content;\n  Editable.bowser = bowser;\n})(window, document, jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n//# sourceURL=webpack:///./src/livingdocs/editable.js?");

/***/ }),

/***/ "./src/livingdocs/livingdocs-engine.js":
/*!*********************************************!*\
  !*** ./src/livingdocs/livingdocs-engine.js ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nvar require;var require;var require;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\nvar $ = jquery__WEBPACK_IMPORTED_MODULE_0__;\n\nrequire = function e(t, n, r) {\n  function s(o, u) {\n    if (!n[o]) {\n      if (!t[o]) {\n        var a = typeof require == \"function\" && require;\n        if (!u && a) return require(o, !0);\n        if (i) return i(o, !0);\n        var f = new Error(\"Cannot find module '\" + o + \"'\");\n        throw f.code = \"MODULE_NOT_FOUND\", f;\n      }\n\n      var l = n[o] = {\n        exports: {}\n      };\n      t[o][0].call(l.exports, function (e) {\n        var n = t[o][1][e];\n        return s(n ? n : e);\n      }, l, l.exports, e, t, n, r);\n    }\n\n    return n[o].exports;\n  }\n\n  var i = typeof require == \"function\" && require;\n\n  for (var o = 0; o < r.length; o++) {\n    s(r[o]);\n  }\n\n  return s;\n}({\n  1: [function (require, module, exports) {\n    var pSlice = Array.prototype.slice;\n\n    var objectKeys = require('./lib/keys.js');\n\n    var isArguments = require('./lib/is_arguments.js');\n\n    var deepEqual = module.exports = function (actual, expected, opts) {\n      if (!opts) opts = {}; // 7.1. All identical values are equivalent, as determined by ===.\n\n      if (actual === expected) {\n        return true;\n      } else if (actual instanceof Date && expected instanceof Date) {\n        return actual.getTime() === expected.getTime(); // 7.3. Other pairs that do not both pass typeof value == 'object',\n        // equivalence is determined by ==.\n      } else if (_typeof(actual) != 'object' && _typeof(expected) != 'object') {\n        return opts.strict ? actual === expected : actual == expected; // 7.4. For all other Object pairs, including Array objects, equivalence is\n        // determined by having the same number of owned properties (as verified\n        // with Object.prototype.hasOwnProperty.call), the same set of keys\n        // (although not necessarily the same order), equivalent values for every\n        // corresponding key, and an identical 'prototype' property. Note: this\n        // accounts for both named and indexed properties on Arrays.\n      } else {\n        return objEquiv(actual, expected, opts);\n      }\n    };\n\n    function isUndefinedOrNull(value) {\n      return value === null || value === undefined;\n    }\n\n    function isBuffer(x) {\n      if (!x || _typeof(x) !== 'object' || typeof x.length !== 'number') return false;\n\n      if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n        return false;\n      }\n\n      if (x.length > 0 && typeof x[0] !== 'number') return false;\n      return true;\n    }\n\n    function objEquiv(a, b, opts) {\n      var i, key;\n      if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false; // an identical 'prototype' property.\n\n      if (a.prototype !== b.prototype) return false; //~~~I've managed to break Object.keys through screwy arguments passing.\n      //   Converting to array solves the problem.\n\n      if (isArguments(a)) {\n        if (!isArguments(b)) {\n          return false;\n        }\n\n        a = pSlice.call(a);\n        b = pSlice.call(b);\n        return deepEqual(a, b, opts);\n      }\n\n      if (isBuffer(a)) {\n        if (!isBuffer(b)) {\n          return false;\n        }\n\n        if (a.length !== b.length) return false;\n\n        for (i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) return false;\n        }\n\n        return true;\n      }\n\n      try {\n        var ka = objectKeys(a),\n            kb = objectKeys(b);\n      } catch (e) {\n        //happens when one is a string literal and the other isn't\n        return false;\n      } // having the same number of owned properties (keys incorporates\n      // hasOwnProperty)\n\n\n      if (ka.length != kb.length) return false; //the same set of keys (although not necessarily the same order),\n\n      ka.sort();\n      kb.sort(); //~~~cheap key test\n\n      for (i = ka.length - 1; i >= 0; i--) {\n        if (ka[i] != kb[i]) return false;\n      } //equivalent values for every corresponding key, and\n      //~~~possibly expensive deep test\n\n\n      for (i = ka.length - 1; i >= 0; i--) {\n        key = ka[i];\n        if (!deepEqual(a[key], b[key], opts)) return false;\n      }\n\n      return true;\n    }\n  }, {\n    \"./lib/is_arguments.js\": 2,\n    \"./lib/keys.js\": 3\n  }],\n  2: [function (require, module, exports) {\n    var supportsArgumentsClass = function () {\n      return Object.prototype.toString.call(arguments);\n    }() == '[object Arguments]';\n\n    exports = module.exports = supportsArgumentsClass ? supported : unsupported;\n    exports.supported = supported;\n\n    function supported(object) {\n      return Object.prototype.toString.call(object) == '[object Arguments]';\n    }\n\n    ;\n    exports.unsupported = unsupported;\n\n    function unsupported(object) {\n      return object && _typeof(object) == 'object' && typeof object.length == 'number' && Object.prototype.hasOwnProperty.call(object, 'callee') && !Object.prototype.propertyIsEnumerable.call(object, 'callee') || false;\n    }\n\n    ;\n  }, {}],\n  3: [function (require, module, exports) {\n    exports = module.exports = typeof Object.keys === 'function' ? Object.keys : shim;\n    exports.shim = shim;\n\n    function shim(obj) {\n      var keys = [];\n\n      for (var key in obj) {\n        keys.push(key);\n      }\n\n      return keys;\n    }\n  }, {}],\n  4: [function (require, module, exports) {\n    var Scheme, jScheme;\n    Scheme = require('./scheme');\n    jScheme = new Scheme();\n\n    jScheme[\"new\"] = function () {\n      return new Scheme();\n    };\n\n    module.exports = jScheme;\n\n    if (typeof window !== \"undefined\" && window !== null) {\n      window.jScheme = jScheme;\n    }\n  }, {\n    \"./scheme\": 6\n  }],\n  5: [function (require, module, exports) {\n    var PropertyValidator;\n\n    module.exports = PropertyValidator = function () {\n      var termRegex;\n      termRegex = /\\w[\\w ]*\\w/g;\n\n      function PropertyValidator(_arg) {\n        var _ref;\n\n        this.inputString = _arg.inputString, this.scheme = _arg.scheme, this.property = _arg.property, this.parent = _arg.parent;\n        this.validators = [];\n        this.location = this.getLocation();\n\n        if (this.scheme.propertiesRequired) {\n          if ((_ref = this.parent) != null) {\n            _ref.addRequiredProperty(this.property);\n          }\n        }\n\n        this.addValidations(this.inputString);\n      }\n\n      PropertyValidator.prototype.getLocation = function () {\n        if (this.property == null) {\n          return '';\n        } else if (this.parent != null) {\n          return this.parent.location + this.scheme.writeProperty(this.property);\n        } else {\n          return this.scheme.writeProperty(this.property);\n        }\n      };\n\n      PropertyValidator.prototype.getPropLocation = function (key) {\n        return \"\" + this.location + this.scheme.writeProperty(key);\n      };\n\n      PropertyValidator.prototype.addValidations = function (configString) {\n        var result, term, types;\n\n        while (result = termRegex.exec(configString)) {\n          term = result[0];\n\n          if (term === 'optional') {\n            this.parent.removeRequiredProperty(this.property);\n          } else if (term === 'required') {\n            this.parent.addRequiredProperty(this.property);\n          } else if (term.indexOf('array of ') === 0) {\n            this.validators.push('array');\n            this.arrayValidator = term.slice(9);\n          } else if (term.indexOf(' or ') !== -1) {\n            types = term.split(' or ');\n            console.log('todo');\n          } else {\n            this.validators.push(term);\n          }\n        }\n\n        return void 0;\n      };\n\n      PropertyValidator.prototype.validate = function (value, errors) {\n        var isValid, name, validationResult, validator, validators, _i, _len, _ref;\n\n        isValid = true;\n\n        if (value == null && this.isOptional()) {\n          return isValid;\n        }\n\n        validators = this.scheme.validators;\n        _ref = this.validators || [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          name = _ref[_i];\n          validator = validators[name];\n\n          if (validator == null) {\n            return errors.add(\"missing validator \" + name, {\n              location: this.location\n            });\n          }\n\n          validationResult = validator(value);\n\n          if (validationResult === true) {\n            continue;\n          }\n\n          errors.add(validationResult, {\n            location: this.location,\n            defaultMessage: \"\" + name + \" validator failed\"\n          });\n          isValid = false;\n        }\n\n        if (!(isValid = this.validateArray(value, errors))) {\n          return false;\n        }\n\n        if (!(isValid = this.validateRequiredProperties(value, errors))) {\n          return false;\n        }\n\n        return isValid;\n      };\n\n      PropertyValidator.prototype.validateArray = function (arr, errors) {\n        var entry, index, isValid, location, validationResult, validator, _i, _len, _ref;\n\n        if (this.arrayValidator == null) {\n          return true;\n        }\n\n        isValid = true;\n        validator = this.scheme.validators[this.arrayValidator];\n\n        if (validator == null) {\n          return errors.add(\"missing validator \" + this.arrayValidator, {\n            location: this.location\n          });\n        }\n\n        _ref = arr || [];\n\n        for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n          entry = _ref[index];\n          validationResult = validator(entry);\n\n          if (validationResult === true) {\n            continue;\n          }\n\n          location = \"\" + this.location + \"[\" + index + \"]\";\n          errors.add(validationResult, {\n            location: location,\n            defaultMessage: \"\" + this.arrayValidator + \" validator failed\"\n          });\n          isValid = false;\n        }\n\n        return isValid;\n      };\n\n      PropertyValidator.prototype.validateOtherProperty = function (key, value, errors) {\n        var isValid;\n\n        if (this.otherPropertyValidator != null) {\n          this.scheme.errors = void 0;\n\n          if (isValid = this.otherPropertyValidator.call(this, key, value)) {\n            return true;\n          }\n\n          if (this.scheme.errors != null) {\n            errors.join(this.scheme.errors, {\n              location: this.getPropLocation(key)\n            });\n          } else {\n            errors.add(\"additional property check failed\", {\n              location: this.getPropLocation(key)\n            });\n          }\n\n          return false;\n        } else {\n          if (this.scheme.allowAdditionalProperties) {\n            return true;\n          } else {\n            errors.add(\"unspecified additional property\", {\n              location: this.getPropLocation(key)\n            });\n            return false;\n          }\n        }\n      };\n\n      PropertyValidator.prototype.validateRequiredProperties = function (obj, errors) {\n        var isRequired, isValid, key, _ref;\n\n        isValid = true;\n        _ref = this.requiredProperties;\n\n        for (key in _ref) {\n          isRequired = _ref[key];\n\n          if (obj[key] == null && isRequired) {\n            errors.add(\"required property missing\", {\n              location: this.getPropLocation(key)\n            });\n            isValid = false;\n          }\n        }\n\n        return isValid;\n      };\n\n      PropertyValidator.prototype.addRequiredProperty = function (key) {\n        if (this.requiredProperties == null) {\n          this.requiredProperties = {};\n        }\n\n        return this.requiredProperties[key] = true;\n      };\n\n      PropertyValidator.prototype.removeRequiredProperty = function (key) {\n        var _ref;\n\n        return (_ref = this.requiredProperties) != null ? _ref[key] = void 0 : void 0;\n      };\n\n      PropertyValidator.prototype.isOptional = function () {\n        if (this.parent != null) {\n          return !this.parent.requiredProperties[this.property] === true;\n        }\n      };\n\n      return PropertyValidator;\n    }();\n  }, {}],\n  6: [function (require, module, exports) {\n    var PropertyValidator, Scheme, ValidationErrors, type, validators;\n    ValidationErrors = require('./validation_errors');\n    PropertyValidator = require('./property_validator');\n    validators = require('./validators');\n    type = require('./type');\n\n    module.exports = Scheme = function () {\n      var jsVariableName;\n      jsVariableName = /^[a-zA-Z]\\w*$/;\n\n      function Scheme() {\n        this.validators = Object.create(validators);\n        this.schemas = {};\n        this.propertiesRequired = true;\n        this.allowAdditionalProperties = true;\n      }\n\n      Scheme.prototype.configure = function (_arg) {\n        this.propertiesRequired = _arg.propertiesRequired, this.allowAdditionalProperties = _arg.allowAdditionalProperties;\n      };\n\n      Scheme.prototype.add = function (name, schema) {\n        if (type.isFunction(schema)) {\n          this.addValidator(name, schema);\n        } else {\n          this.addSchema(name, this.parseConfigObj(schema, void 0, name));\n        }\n\n        return this;\n      };\n\n      Scheme.prototype.addSchema = function (name, schema) {\n        if (this.validators[name] != null) {\n          throw new Error(\"A validator is alredy registered under this name: \" + name);\n        }\n\n        this.schemas[name] = schema;\n\n        this.validators[name] = function (_this) {\n          return function (value) {\n            var errors;\n            errors = _this.recursiveValidate(schema, value);\n\n            if (errors.hasErrors()) {\n              return errors;\n            } else {\n              return true;\n            }\n          };\n        }(this);\n\n        return this;\n      };\n\n      Scheme.prototype.addValidator = function (name, func) {\n        this.validators[name] = func;\n        return this;\n      };\n\n      Scheme.prototype.validate = function (schemaName, obj) {\n        var schema;\n        this.errors = void 0;\n        schema = this.schemas[schemaName];\n\n        if (schema == null) {\n          this.errors = new ValidationErrors();\n          this.errors.add(\"missing schema\", {\n            location: schemaName\n          });\n          return false;\n        }\n\n        this.errors = this.recursiveValidate(schema, obj).setRoot(schemaName);\n        return !this.errors.hasErrors();\n      };\n\n      Scheme.prototype.hasErrors = function () {\n        var _ref;\n\n        return (_ref = this.errors) != null ? _ref.hasErrors() : void 0;\n      };\n\n      Scheme.prototype.getErrorMessages = function () {\n        var _ref;\n\n        return (_ref = this.errors) != null ? _ref.getMessages() : void 0;\n      };\n\n      Scheme.prototype.recursiveValidate = function (schemaObj, obj) {\n        var errors, isValid, key, parentValidator, propertyValidator, value;\n        parentValidator = schemaObj['__validator'];\n        errors = new ValidationErrors();\n        parentValidator.validate(obj, errors);\n\n        for (key in obj) {\n          value = obj[key];\n\n          if (schemaObj[key] != null) {\n            propertyValidator = schemaObj[key]['__validator'];\n            isValid = propertyValidator.validate(value, errors);\n\n            if (isValid && propertyValidator.childSchemaName == null && type.isObject(value)) {\n              errors.join(this.recursiveValidate(schemaObj[key], value));\n            }\n          } else {\n            parentValidator.validateOtherProperty(key, value, errors);\n          }\n        }\n\n        return errors;\n      };\n\n      Scheme.prototype.parseConfigObj = function (obj, parentValidator) {\n        var key, propValidator, value;\n\n        if (parentValidator == null) {\n          parentValidator = new PropertyValidator({\n            inputString: 'object',\n            scheme: this\n          });\n        }\n\n        for (key in obj) {\n          value = obj[key];\n\n          if (this.addParentValidator(parentValidator, key, value)) {\n            continue;\n          }\n\n          if (type.isString(value)) {\n            propValidator = new PropertyValidator({\n              inputString: value,\n              property: key,\n              parent: parentValidator,\n              scheme: this\n            });\n            obj[key] = {\n              '__validator': propValidator\n            };\n          } else if (type.isObject(value)) {\n            propValidator = new PropertyValidator({\n              inputString: 'object',\n              property: key,\n              parent: parentValidator,\n              scheme: this\n            });\n            obj[key] = this.parseConfigObj(value, propValidator);\n          }\n        }\n\n        obj['__validator'] = parentValidator;\n        return obj;\n      };\n\n      Scheme.prototype.addParentValidator = function (parentValidator, key, validator) {\n        switch (key) {\n          case '__validate':\n            parentValidator.addValidations(validator);\n            break;\n\n          case '__additionalProperty':\n            if (type.isFunction(validator)) {\n              parentValidator.otherPropertyValidator = validator;\n            }\n\n            break;\n\n          default:\n            return false;\n        }\n\n        return true;\n      };\n\n      Scheme.prototype.writeProperty = function (value) {\n        if (jsVariableName.test(value)) {\n          return \".\" + value;\n        } else {\n          return \"['\" + value + \"']\";\n        }\n      };\n\n      return Scheme;\n    }();\n  }, {\n    \"./property_validator\": 5,\n    \"./type\": 7,\n    \"./validation_errors\": 8,\n    \"./validators\": 9\n  }],\n  7: [function (require, module, exports) {\n    var toString, type;\n    toString = Object.prototype.toString;\n    module.exports = type = {\n      isObject: function isObject(obj) {\n        var t;\n        t = _typeof(obj);\n        return t === 'object' && !!obj && !this.isArray(obj);\n      },\n      isBoolean: function isBoolean(obj) {\n        return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n      }\n    };\n    ['Function', 'String', 'Number', 'Date', 'RegExp', 'Array'].forEach(function (name) {\n      return type[\"is\" + name] = function (obj) {\n        return toString.call(obj) === \"[object \" + name + \"]\";\n      };\n    });\n\n    if (Array.isArray) {\n      type.isArray = Array.isArray;\n    }\n  }, {}],\n  8: [function (require, module, exports) {\n    var ValidationErrors, type;\n    type = require('./type');\n\n    module.exports = ValidationErrors = function () {\n      function ValidationErrors() {}\n\n      ValidationErrors.prototype.hasErrors = function () {\n        return this.errors != null;\n      };\n\n      ValidationErrors.prototype.setRoot = function (root) {\n        this.root = root;\n        return this;\n      };\n\n      ValidationErrors.prototype.add = function (message, _arg) {\n        var defaultMessage, error, location, _ref;\n\n        _ref = _arg != null ? _arg : {}, location = _ref.location, defaultMessage = _ref.defaultMessage;\n\n        if (message === false) {\n          message = defaultMessage;\n        }\n\n        if (message === void 0) {\n          message = \"validator returned undefined. Check your validator implementation.\";\n        }\n\n        if (this.errors == null) {\n          this.errors = [];\n        }\n\n        if (type.isString(message)) {\n          this.errors.push({\n            path: location,\n            message: message\n          });\n        } else if (message instanceof ValidationErrors) {\n          this.join(message, {\n            location: location\n          });\n        } else if (message.path && message.message) {\n          error = message;\n          this.errors.push({\n            path: location + error.path,\n            message: error.message\n          });\n        } else {\n          throw new Error('ValidationError.add() unknown error type');\n        }\n\n        return false;\n      };\n\n      ValidationErrors.prototype.join = function (_arg, _arg1) {\n        var error, errors, location, _i, _len, _results;\n\n        errors = _arg.errors;\n        location = (_arg1 != null ? _arg1 : {}).location;\n\n        if (errors == null) {\n          return;\n        }\n\n        if (errors.length) {\n          if (this.errors == null) {\n            this.errors = [];\n          }\n\n          _results = [];\n\n          for (_i = 0, _len = errors.length; _i < _len; _i++) {\n            error = errors[_i];\n\n            _results.push(this.errors.push({\n              path: (location || '') + error.path,\n              message: error.message\n            }));\n          }\n\n          return _results;\n        }\n      };\n\n      ValidationErrors.prototype.getMessages = function () {\n        var error, messages, _i, _len, _ref;\n\n        messages = [];\n        _ref = this.errors || [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          error = _ref[_i];\n          messages.push(\"\" + (this.root || '') + error.path + \": \" + error.message);\n        }\n\n        return messages;\n      };\n\n      return ValidationErrors;\n    }();\n  }, {\n    \"./type\": 7\n  }],\n  9: [function (require, module, exports) {\n    var type;\n    type = require('./type');\n    module.exports = {\n      'object': function object(value) {\n        return type.isObject(value);\n      },\n      'string': function string(value) {\n        return type.isString(value);\n      },\n      'boolean': function boolean(value) {\n        return type.isBoolean(value);\n      },\n      'number': function number(value) {\n        return type.isNumber(value);\n      },\n      'function': function _function(value) {\n        return type.isFunction(value);\n      },\n      'date': function date(value) {\n        return type.isDate(value);\n      },\n      'regexp': function regexp(value) {\n        return type.isRegExp(value);\n      },\n      'array': function array(value) {\n        return type.isArray(value);\n      },\n      'falsy': function falsy(value) {\n        return !!value === false;\n      },\n      'truthy': function truthy(value) {\n        return !!value === true;\n      },\n      'not empty': function notEmpty(value) {\n        return !!value === true;\n      },\n      'deprecated': function deprecated(value) {\n        return true;\n      }\n    };\n  }, {\n    \"./type\": 7\n  }],\n  10: [function (require, module, exports) {\n    //     Underscore.js 1.6.0\n    //     http://underscorejs.org\n    //     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n    //     Underscore may be freely distributed under the MIT license.\n    (function () {\n      // Baseline setup\n      // --------------\n      // Establish the root object, `window` in the browser, or `exports` on the server.\n      var root = this; // Save the previous value of the `_` variable.\n\n      var previousUnderscore = root._; // Establish the object that gets returned to break out of a loop iteration.\n\n      var breaker = {}; // Save bytes in the minified (but not gzipped) version:\n\n      var ArrayProto = Array.prototype,\n          ObjProto = Object.prototype,\n          FuncProto = Function.prototype; // Create quick reference variables for speed access to core prototypes.\n\n      var push = ArrayProto.push,\n          slice = ArrayProto.slice,\n          concat = ArrayProto.concat,\n          toString = ObjProto.toString,\n          hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use\n      // are declared here.\n\n      var nativeForEach = ArrayProto.forEach,\n          nativeMap = ArrayProto.map,\n          nativeReduce = ArrayProto.reduce,\n          nativeReduceRight = ArrayProto.reduceRight,\n          nativeFilter = ArrayProto.filter,\n          nativeEvery = ArrayProto.every,\n          nativeSome = ArrayProto.some,\n          nativeIndexOf = ArrayProto.indexOf,\n          nativeLastIndexOf = ArrayProto.lastIndexOf,\n          nativeIsArray = Array.isArray,\n          nativeKeys = Object.keys,\n          nativeBind = FuncProto.bind; // Create a safe reference to the Underscore object for use below.\n\n      var _ = function _(obj) {\n        if (obj instanceof _) return obj;\n        if (!(this instanceof _)) return new _(obj);\n        this._wrapped = obj;\n      }; // Export the Underscore object for **Node.js**, with\n      // backwards-compatibility for the old `require()` API. If we're in\n      // the browser, add `_` as a global object via a string identifier,\n      // for Closure Compiler \"advanced\" mode.\n\n\n      if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n          exports = module.exports = _;\n        }\n\n        exports._ = _;\n      } else {\n        root._ = _;\n      } // Current version.\n\n\n      _.VERSION = '1.6.0'; // Collection Functions\n      // --------------------\n      // The cornerstone, an `each` implementation, aka `forEach`.\n      // Handles objects with the built-in `forEach`, arrays, and raw objects.\n      // Delegates to **ECMAScript 5**'s native `forEach` if available.\n\n      var each = _.each = _.forEach = function (obj, iterator, context) {\n        if (obj == null) return obj;\n\n        if (nativeForEach && obj.forEach === nativeForEach) {\n          obj.forEach(iterator, context);\n        } else if (obj.length === +obj.length) {\n          for (var i = 0, length = obj.length; i < length; i++) {\n            if (iterator.call(context, obj[i], i, obj) === breaker) return;\n          }\n        } else {\n          var keys = _.keys(obj);\n\n          for (var i = 0, length = keys.length; i < length; i++) {\n            if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;\n          }\n        }\n\n        return obj;\n      }; // Return the results of applying the iterator to each element.\n      // Delegates to **ECMAScript 5**'s native `map` if available.\n\n\n      _.map = _.collect = function (obj, iterator, context) {\n        var results = [];\n        if (obj == null) return results;\n        if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n        each(obj, function (value, index, list) {\n          results.push(iterator.call(context, value, index, list));\n        });\n        return results;\n      };\n\n      var reduceError = 'Reduce of empty array with no initial value'; // **Reduce** builds up a single result from a list of values, aka `inject`,\n      // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n\n      _.reduce = _.foldl = _.inject = function (obj, iterator, memo, context) {\n        var initial = arguments.length > 2;\n        if (obj == null) obj = [];\n\n        if (nativeReduce && obj.reduce === nativeReduce) {\n          if (context) iterator = _.bind(iterator, context);\n          return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n        }\n\n        each(obj, function (value, index, list) {\n          if (!initial) {\n            memo = value;\n            initial = true;\n          } else {\n            memo = iterator.call(context, memo, value, index, list);\n          }\n        });\n        if (!initial) throw new TypeError(reduceError);\n        return memo;\n      }; // The right-associative version of reduce, also known as `foldr`.\n      // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n\n\n      _.reduceRight = _.foldr = function (obj, iterator, memo, context) {\n        var initial = arguments.length > 2;\n        if (obj == null) obj = [];\n\n        if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n          if (context) iterator = _.bind(iterator, context);\n          return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n        }\n\n        var length = obj.length;\n\n        if (length !== +length) {\n          var keys = _.keys(obj);\n\n          length = keys.length;\n        }\n\n        each(obj, function (value, index, list) {\n          index = keys ? keys[--length] : --length;\n\n          if (!initial) {\n            memo = obj[index];\n            initial = true;\n          } else {\n            memo = iterator.call(context, memo, obj[index], index, list);\n          }\n        });\n        if (!initial) throw new TypeError(reduceError);\n        return memo;\n      }; // Return the first value which passes a truth test. Aliased as `detect`.\n\n\n      _.find = _.detect = function (obj, predicate, context) {\n        var result;\n        any(obj, function (value, index, list) {\n          if (predicate.call(context, value, index, list)) {\n            result = value;\n            return true;\n          }\n        });\n        return result;\n      }; // Return all the elements that pass a truth test.\n      // Delegates to **ECMAScript 5**'s native `filter` if available.\n      // Aliased as `select`.\n\n\n      _.filter = _.select = function (obj, predicate, context) {\n        var results = [];\n        if (obj == null) return results;\n        if (nativeFilter && obj.filter === nativeFilter) return obj.filter(predicate, context);\n        each(obj, function (value, index, list) {\n          if (predicate.call(context, value, index, list)) results.push(value);\n        });\n        return results;\n      }; // Return all the elements for which a truth test fails.\n\n\n      _.reject = function (obj, predicate, context) {\n        return _.filter(obj, function (value, index, list) {\n          return !predicate.call(context, value, index, list);\n        }, context);\n      }; // Determine whether all of the elements match a truth test.\n      // Delegates to **ECMAScript 5**'s native `every` if available.\n      // Aliased as `all`.\n\n\n      _.every = _.all = function (obj, predicate, context) {\n        predicate || (predicate = _.identity);\n        var result = true;\n        if (obj == null) return result;\n        if (nativeEvery && obj.every === nativeEvery) return obj.every(predicate, context);\n        each(obj, function (value, index, list) {\n          if (!(result = result && predicate.call(context, value, index, list))) return breaker;\n        });\n        return !!result;\n      }; // Determine if at least one element in the object matches a truth test.\n      // Delegates to **ECMAScript 5**'s native `some` if available.\n      // Aliased as `any`.\n\n\n      var any = _.some = _.any = function (obj, predicate, context) {\n        predicate || (predicate = _.identity);\n        var result = false;\n        if (obj == null) return result;\n        if (nativeSome && obj.some === nativeSome) return obj.some(predicate, context);\n        each(obj, function (value, index, list) {\n          if (result || (result = predicate.call(context, value, index, list))) return breaker;\n        });\n        return !!result;\n      }; // Determine if the array or object contains a given value (using `===`).\n      // Aliased as `include`.\n\n\n      _.contains = _.include = function (obj, target) {\n        if (obj == null) return false;\n        if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n        return any(obj, function (value) {\n          return value === target;\n        });\n      }; // Invoke a method (with arguments) on every item in a collection.\n\n\n      _.invoke = function (obj, method) {\n        var args = slice.call(arguments, 2);\n\n        var isFunc = _.isFunction(method);\n\n        return _.map(obj, function (value) {\n          return (isFunc ? method : value[method]).apply(value, args);\n        });\n      }; // Convenience version of a common use case of `map`: fetching a property.\n\n\n      _.pluck = function (obj, key) {\n        return _.map(obj, _.property(key));\n      }; // Convenience version of a common use case of `filter`: selecting only objects\n      // containing specific `key:value` pairs.\n\n\n      _.where = function (obj, attrs) {\n        return _.filter(obj, _.matches(attrs));\n      }; // Convenience version of a common use case of `find`: getting the first object\n      // containing specific `key:value` pairs.\n\n\n      _.findWhere = function (obj, attrs) {\n        return _.find(obj, _.matches(attrs));\n      }; // Return the maximum element or (element-based computation).\n      // Can't optimize arrays of integers longer than 65,535 elements.\n      // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)\n\n\n      _.max = function (obj, iterator, context) {\n        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n          return Math.max.apply(Math, obj);\n        }\n\n        var result = -Infinity,\n            lastComputed = -Infinity;\n        each(obj, function (value, index, list) {\n          var computed = iterator ? iterator.call(context, value, index, list) : value;\n\n          if (computed > lastComputed) {\n            result = value;\n            lastComputed = computed;\n          }\n        });\n        return result;\n      }; // Return the minimum element (or element-based computation).\n\n\n      _.min = function (obj, iterator, context) {\n        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n          return Math.min.apply(Math, obj);\n        }\n\n        var result = Infinity,\n            lastComputed = Infinity;\n        each(obj, function (value, index, list) {\n          var computed = iterator ? iterator.call(context, value, index, list) : value;\n\n          if (computed < lastComputed) {\n            result = value;\n            lastComputed = computed;\n          }\n        });\n        return result;\n      }; // Shuffle an array, using the modern version of the\n      // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n\n\n      _.shuffle = function (obj) {\n        var rand;\n        var index = 0;\n        var shuffled = [];\n        each(obj, function (value) {\n          rand = _.random(index++);\n          shuffled[index - 1] = shuffled[rand];\n          shuffled[rand] = value;\n        });\n        return shuffled;\n      }; // Sample **n** random values from a collection.\n      // If **n** is not specified, returns a single random element.\n      // The internal `guard` argument allows it to work with `map`.\n\n\n      _.sample = function (obj, n, guard) {\n        if (n == null || guard) {\n          if (obj.length !== +obj.length) obj = _.values(obj);\n          return obj[_.random(obj.length - 1)];\n        }\n\n        return _.shuffle(obj).slice(0, Math.max(0, n));\n      }; // An internal function to generate lookup iterators.\n\n\n      var lookupIterator = function lookupIterator(value) {\n        if (value == null) return _.identity;\n        if (_.isFunction(value)) return value;\n        return _.property(value);\n      }; // Sort the object's values by a criterion produced by an iterator.\n\n\n      _.sortBy = function (obj, iterator, context) {\n        iterator = lookupIterator(iterator);\n        return _.pluck(_.map(obj, function (value, index, list) {\n          return {\n            value: value,\n            index: index,\n            criteria: iterator.call(context, value, index, list)\n          };\n        }).sort(function (left, right) {\n          var a = left.criteria;\n          var b = right.criteria;\n\n          if (a !== b) {\n            if (a > b || a === void 0) return 1;\n            if (a < b || b === void 0) return -1;\n          }\n\n          return left.index - right.index;\n        }), 'value');\n      }; // An internal function used for aggregate \"group by\" operations.\n\n\n      var group = function group(behavior) {\n        return function (obj, iterator, context) {\n          var result = {};\n          iterator = lookupIterator(iterator);\n          each(obj, function (value, index) {\n            var key = iterator.call(context, value, index, obj);\n            behavior(result, key, value);\n          });\n          return result;\n        };\n      }; // Groups the object's values by a criterion. Pass either a string attribute\n      // to group by, or a function that returns the criterion.\n\n\n      _.groupBy = group(function (result, key, value) {\n        _.has(result, key) ? result[key].push(value) : result[key] = [value];\n      }); // Indexes the object's values by a criterion, similar to `groupBy`, but for\n      // when you know that your index values will be unique.\n\n      _.indexBy = group(function (result, key, value) {\n        result[key] = value;\n      }); // Counts instances of an object that group by a certain criterion. Pass\n      // either a string attribute to count by, or a function that returns the\n      // criterion.\n\n      _.countBy = group(function (result, key) {\n        _.has(result, key) ? result[key]++ : result[key] = 1;\n      }); // Use a comparator function to figure out the smallest index at which\n      // an object should be inserted so as to maintain order. Uses binary search.\n\n      _.sortedIndex = function (array, obj, iterator, context) {\n        iterator = lookupIterator(iterator);\n        var value = iterator.call(context, obj);\n        var low = 0,\n            high = array.length;\n\n        while (low < high) {\n          var mid = low + high >>> 1;\n          iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n        }\n\n        return low;\n      }; // Safely create a real, live array from anything iterable.\n\n\n      _.toArray = function (obj) {\n        if (!obj) return [];\n        if (_.isArray(obj)) return slice.call(obj);\n        if (obj.length === +obj.length) return _.map(obj, _.identity);\n        return _.values(obj);\n      }; // Return the number of elements in an object.\n\n\n      _.size = function (obj) {\n        if (obj == null) return 0;\n        return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n      }; // Array Functions\n      // ---------------\n      // Get the first element of an array. Passing **n** will return the first N\n      // values in the array. Aliased as `head` and `take`. The **guard** check\n      // allows it to work with `_.map`.\n\n\n      _.first = _.head = _.take = function (array, n, guard) {\n        if (array == null) return void 0;\n        if (n == null || guard) return array[0];\n        if (n < 0) return [];\n        return slice.call(array, 0, n);\n      }; // Returns everything but the last entry of the array. Especially useful on\n      // the arguments object. Passing **n** will return all the values in\n      // the array, excluding the last N. The **guard** check allows it to work with\n      // `_.map`.\n\n\n      _.initial = function (array, n, guard) {\n        return slice.call(array, 0, array.length - (n == null || guard ? 1 : n));\n      }; // Get the last element of an array. Passing **n** will return the last N\n      // values in the array. The **guard** check allows it to work with `_.map`.\n\n\n      _.last = function (array, n, guard) {\n        if (array == null) return void 0;\n        if (n == null || guard) return array[array.length - 1];\n        return slice.call(array, Math.max(array.length - n, 0));\n      }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n      // Especially useful on the arguments object. Passing an **n** will return\n      // the rest N values in the array. The **guard**\n      // check allows it to work with `_.map`.\n\n\n      _.rest = _.tail = _.drop = function (array, n, guard) {\n        return slice.call(array, n == null || guard ? 1 : n);\n      }; // Trim out all falsy values from an array.\n\n\n      _.compact = function (array) {\n        return _.filter(array, _.identity);\n      }; // Internal implementation of a recursive `flatten` function.\n\n\n      var flatten = function flatten(input, shallow, output) {\n        if (shallow && _.every(input, _.isArray)) {\n          return concat.apply(output, input);\n        }\n\n        each(input, function (value) {\n          if (_.isArray(value) || _.isArguments(value)) {\n            shallow ? push.apply(output, value) : flatten(value, shallow, output);\n          } else {\n            output.push(value);\n          }\n        });\n        return output;\n      }; // Flatten out an array, either recursively (by default), or just one level.\n\n\n      _.flatten = function (array, shallow) {\n        return flatten(array, shallow, []);\n      }; // Return a version of the array that does not contain the specified value(s).\n\n\n      _.without = function (array) {\n        return _.difference(array, slice.call(arguments, 1));\n      }; // Split an array into two arrays: one whose elements all satisfy the given\n      // predicate, and one whose elements all do not satisfy the predicate.\n\n\n      _.partition = function (array, predicate) {\n        var pass = [],\n            fail = [];\n        each(array, function (elem) {\n          (predicate(elem) ? pass : fail).push(elem);\n        });\n        return [pass, fail];\n      }; // Produce a duplicate-free version of the array. If the array has already\n      // been sorted, you have the option of using a faster algorithm.\n      // Aliased as `unique`.\n\n\n      _.uniq = _.unique = function (array, isSorted, iterator, context) {\n        if (_.isFunction(isSorted)) {\n          context = iterator;\n          iterator = isSorted;\n          isSorted = false;\n        }\n\n        var initial = iterator ? _.map(array, iterator, context) : array;\n        var results = [];\n        var seen = [];\n        each(initial, function (value, index) {\n          if (isSorted ? !index || seen[seen.length - 1] !== value : !_.contains(seen, value)) {\n            seen.push(value);\n            results.push(array[index]);\n          }\n        });\n        return results;\n      }; // Produce an array that contains the union: each distinct element from all of\n      // the passed-in arrays.\n\n\n      _.union = function () {\n        return _.uniq(_.flatten(arguments, true));\n      }; // Produce an array that contains every item shared between all the\n      // passed-in arrays.\n\n\n      _.intersection = function (array) {\n        var rest = slice.call(arguments, 1);\n        return _.filter(_.uniq(array), function (item) {\n          return _.every(rest, function (other) {\n            return _.contains(other, item);\n          });\n        });\n      }; // Take the difference between one array and a number of other arrays.\n      // Only the elements present in just the first array will remain.\n\n\n      _.difference = function (array) {\n        var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n        return _.filter(array, function (value) {\n          return !_.contains(rest, value);\n        });\n      }; // Zip together multiple lists into a single array -- elements that share\n      // an index go together.\n\n\n      _.zip = function () {\n        var length = _.max(_.pluck(arguments, 'length').concat(0));\n\n        var results = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          results[i] = _.pluck(arguments, '' + i);\n        }\n\n        return results;\n      }; // Converts lists into objects. Pass either a single array of `[key, value]`\n      // pairs, or two parallel arrays of the same length -- one of keys, and one of\n      // the corresponding values.\n\n\n      _.object = function (list, values) {\n        if (list == null) return {};\n        var result = {};\n\n        for (var i = 0, length = list.length; i < length; i++) {\n          if (values) {\n            result[list[i]] = values[i];\n          } else {\n            result[list[i][0]] = list[i][1];\n          }\n        }\n\n        return result;\n      }; // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n      // we need this function. Return the position of the first occurrence of an\n      // item in an array, or -1 if the item is not included in the array.\n      // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n      // If the array is large and already in sort order, pass `true`\n      // for **isSorted** to use binary search.\n\n\n      _.indexOf = function (array, item, isSorted) {\n        if (array == null) return -1;\n        var i = 0,\n            length = array.length;\n\n        if (isSorted) {\n          if (typeof isSorted == 'number') {\n            i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n          } else {\n            i = _.sortedIndex(array, item);\n            return array[i] === item ? i : -1;\n          }\n        }\n\n        if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n\n        for (; i < length; i++) {\n          if (array[i] === item) return i;\n        }\n\n        return -1;\n      }; // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n\n\n      _.lastIndexOf = function (array, item, from) {\n        if (array == null) return -1;\n        var hasIndex = from != null;\n\n        if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n          return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n        }\n\n        var i = hasIndex ? from : array.length;\n\n        while (i--) {\n          if (array[i] === item) return i;\n        }\n\n        return -1;\n      }; // Generate an integer Array containing an arithmetic progression. A port of\n      // the native Python `range()` function. See\n      // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\n\n      _.range = function (start, stop, step) {\n        if (arguments.length <= 1) {\n          stop = start || 0;\n          start = 0;\n        }\n\n        step = arguments[2] || 1;\n        var length = Math.max(Math.ceil((stop - start) / step), 0);\n        var idx = 0;\n        var range = new Array(length);\n\n        while (idx < length) {\n          range[idx++] = start;\n          start += step;\n        }\n\n        return range;\n      }; // Function (ahem) Functions\n      // ------------------\n      // Reusable constructor function for prototype setting.\n\n\n      var ctor = function ctor() {}; // Create a function bound to a given object (assigning `this`, and arguments,\n      // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n      // available.\n\n\n      _.bind = function (func, context) {\n        var args, _bound;\n\n        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n        if (!_.isFunction(func)) throw new TypeError();\n        args = slice.call(arguments, 2);\n        return _bound = function bound() {\n          if (!(this instanceof _bound)) return func.apply(context, args.concat(slice.call(arguments)));\n          ctor.prototype = func.prototype;\n          var self = new ctor();\n          ctor.prototype = null;\n          var result = func.apply(self, args.concat(slice.call(arguments)));\n          if (Object(result) === result) return result;\n          return self;\n        };\n      }; // Partially apply a function by creating a version that has had some of its\n      // arguments pre-filled, without changing its dynamic `this` context. _ acts\n      // as a placeholder, allowing any combination of arguments to be pre-filled.\n\n\n      _.partial = function (func) {\n        var boundArgs = slice.call(arguments, 1);\n        return function () {\n          var position = 0;\n          var args = boundArgs.slice();\n\n          for (var i = 0, length = args.length; i < length; i++) {\n            if (args[i] === _) args[i] = arguments[position++];\n          }\n\n          while (position < arguments.length) {\n            args.push(arguments[position++]);\n          }\n\n          return func.apply(this, args);\n        };\n      }; // Bind a number of an object's methods to that object. Remaining arguments\n      // are the method names to be bound. Useful for ensuring that all callbacks\n      // defined on an object belong to it.\n\n\n      _.bindAll = function (obj) {\n        var funcs = slice.call(arguments, 1);\n        if (funcs.length === 0) throw new Error('bindAll must be passed function names');\n        each(funcs, function (f) {\n          obj[f] = _.bind(obj[f], obj);\n        });\n        return obj;\n      }; // Memoize an expensive function by storing its results.\n\n\n      _.memoize = function (func, hasher) {\n        var memo = {};\n        hasher || (hasher = _.identity);\n        return function () {\n          var key = hasher.apply(this, arguments);\n          return _.has(memo, key) ? memo[key] : memo[key] = func.apply(this, arguments);\n        };\n      }; // Delays a function for the given number of milliseconds, and then calls\n      // it with the arguments supplied.\n\n\n      _.delay = function (func, wait) {\n        var args = slice.call(arguments, 2);\n        return setTimeout(function () {\n          return func.apply(null, args);\n        }, wait);\n      }; // Defers a function, scheduling it to run after the current call stack has\n      // cleared.\n\n\n      _.defer = function (func) {\n        return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n      }; // Returns a function, that, when invoked, will only be triggered at most once\n      // during a given window of time. Normally, the throttled function will run\n      // as much as it can, without ever going more than once per `wait` duration;\n      // but if you'd like to disable the execution on the leading edge, pass\n      // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\n\n      _.throttle = function (func, wait, options) {\n        var context, args, result;\n        var timeout = null;\n        var previous = 0;\n        options || (options = {});\n\n        var later = function later() {\n          previous = options.leading === false ? 0 : _.now();\n          timeout = null;\n          result = func.apply(context, args);\n          context = args = null;\n        };\n\n        return function () {\n          var now = _.now();\n\n          if (!previous && options.leading === false) previous = now;\n          var remaining = wait - (now - previous);\n          context = this;\n          args = arguments;\n\n          if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n            context = args = null;\n          } else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n          }\n\n          return result;\n        };\n      }; // Returns a function, that, as long as it continues to be invoked, will not\n      // be triggered. The function will be called after it stops being called for\n      // N milliseconds. If `immediate` is passed, trigger the function on the\n      // leading edge, instead of the trailing.\n\n\n      _.debounce = function (func, wait, immediate) {\n        var timeout, args, context, timestamp, result;\n\n        var later = function later() {\n          var last = _.now() - timestamp;\n\n          if (last < wait) {\n            timeout = setTimeout(later, wait - last);\n          } else {\n            timeout = null;\n\n            if (!immediate) {\n              result = func.apply(context, args);\n              context = args = null;\n            }\n          }\n        };\n\n        return function () {\n          context = this;\n          args = arguments;\n          timestamp = _.now();\n          var callNow = immediate && !timeout;\n\n          if (!timeout) {\n            timeout = setTimeout(later, wait);\n          }\n\n          if (callNow) {\n            result = func.apply(context, args);\n            context = args = null;\n          }\n\n          return result;\n        };\n      }; // Returns a function that will be executed at most one time, no matter how\n      // often you call it. Useful for lazy initialization.\n\n\n      _.once = function (func) {\n        var ran = false,\n            memo;\n        return function () {\n          if (ran) return memo;\n          ran = true;\n          memo = func.apply(this, arguments);\n          func = null;\n          return memo;\n        };\n      }; // Returns the first function passed as an argument to the second,\n      // allowing you to adjust arguments, run code before and after, and\n      // conditionally execute the original function.\n\n\n      _.wrap = function (func, wrapper) {\n        return _.partial(wrapper, func);\n      }; // Returns a function that is the composition of a list of functions, each\n      // consuming the return value of the function that follows.\n\n\n      _.compose = function () {\n        var funcs = arguments;\n        return function () {\n          var args = arguments;\n\n          for (var i = funcs.length - 1; i >= 0; i--) {\n            args = [funcs[i].apply(this, args)];\n          }\n\n          return args[0];\n        };\n      }; // Returns a function that will only be executed after being called N times.\n\n\n      _.after = function (times, func) {\n        return function () {\n          if (--times < 1) {\n            return func.apply(this, arguments);\n          }\n        };\n      }; // Object Functions\n      // ----------------\n      // Retrieve the names of an object's properties.\n      // Delegates to **ECMAScript 5**'s native `Object.keys`\n\n\n      _.keys = function (obj) {\n        if (!_.isObject(obj)) return [];\n        if (nativeKeys) return nativeKeys(obj);\n        var keys = [];\n\n        for (var key in obj) {\n          if (_.has(obj, key)) keys.push(key);\n        }\n\n        return keys;\n      }; // Retrieve the values of an object's properties.\n\n\n      _.values = function (obj) {\n        var keys = _.keys(obj);\n\n        var length = keys.length;\n        var values = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          values[i] = obj[keys[i]];\n        }\n\n        return values;\n      }; // Convert an object into a list of `[key, value]` pairs.\n\n\n      _.pairs = function (obj) {\n        var keys = _.keys(obj);\n\n        var length = keys.length;\n        var pairs = new Array(length);\n\n        for (var i = 0; i < length; i++) {\n          pairs[i] = [keys[i], obj[keys[i]]];\n        }\n\n        return pairs;\n      }; // Invert the keys and values of an object. The values must be serializable.\n\n\n      _.invert = function (obj) {\n        var result = {};\n\n        var keys = _.keys(obj);\n\n        for (var i = 0, length = keys.length; i < length; i++) {\n          result[obj[keys[i]]] = keys[i];\n        }\n\n        return result;\n      }; // Return a sorted list of the function names available on the object.\n      // Aliased as `methods`\n\n\n      _.functions = _.methods = function (obj) {\n        var names = [];\n\n        for (var key in obj) {\n          if (_.isFunction(obj[key])) names.push(key);\n        }\n\n        return names.sort();\n      }; // Extend a given object with all the properties in passed-in object(s).\n\n\n      _.extend = function (obj) {\n        each(slice.call(arguments, 1), function (source) {\n          if (source) {\n            for (var prop in source) {\n              obj[prop] = source[prop];\n            }\n          }\n        });\n        return obj;\n      }; // Return a copy of the object only containing the whitelisted properties.\n\n\n      _.pick = function (obj) {\n        var copy = {};\n        var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n        each(keys, function (key) {\n          if (key in obj) copy[key] = obj[key];\n        });\n        return copy;\n      }; // Return a copy of the object without the blacklisted properties.\n\n\n      _.omit = function (obj) {\n        var copy = {};\n        var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n\n        for (var key in obj) {\n          if (!_.contains(keys, key)) copy[key] = obj[key];\n        }\n\n        return copy;\n      }; // Fill in a given object with default properties.\n\n\n      _.defaults = function (obj) {\n        each(slice.call(arguments, 1), function (source) {\n          if (source) {\n            for (var prop in source) {\n              if (obj[prop] === void 0) obj[prop] = source[prop];\n            }\n          }\n        });\n        return obj;\n      }; // Create a (shallow-cloned) duplicate of an object.\n\n\n      _.clone = function (obj) {\n        if (!_.isObject(obj)) return obj;\n        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n      }; // Invokes interceptor with the obj, and then returns obj.\n      // The primary purpose of this method is to \"tap into\" a method chain, in\n      // order to perform operations on intermediate results within the chain.\n\n\n      _.tap = function (obj, interceptor) {\n        interceptor(obj);\n        return obj;\n      }; // Internal recursive comparison function for `isEqual`.\n\n\n      var eq = function eq(a, b, aStack, bStack) {\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n        if (a === b) return a !== 0 || 1 / a == 1 / b; // A strict comparison is necessary because `null == undefined`.\n\n        if (a == null || b == null) return a === b; // Unwrap any wrapped objects.\n\n        if (a instanceof _) a = a._wrapped;\n        if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.\n\n        var className = toString.call(a);\n        if (className != toString.call(b)) return false;\n\n        switch (className) {\n          // Strings, numbers, dates, and booleans are compared by value.\n          case '[object String]':\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return a == String(b);\n\n          case '[object Number]':\n            // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n            // other numeric values.\n            return a != +a ? b != +b : a == 0 ? 1 / a == 1 / b : a == +b;\n\n          case '[object Date]':\n          case '[object Boolean]':\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a == +b;\n          // RegExps are compared by their source patterns and flags.\n\n          case '[object RegExp]':\n            return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n        }\n\n        if (_typeof(a) != 'object' || _typeof(b) != 'object') return false; // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n        var length = aStack.length;\n\n        while (length--) {\n          // Linear search. Performance is inversely proportional to the number of\n          // unique nested structures.\n          if (aStack[length] == a) return bStack[length] == b;\n        } // Objects with different constructors are not equivalent, but `Object`s\n        // from different frames are.\n\n\n        var aCtor = a.constructor,\n            bCtor = b.constructor;\n\n        if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {\n          return false;\n        } // Add the first object to the stack of traversed objects.\n\n\n        aStack.push(a);\n        bStack.push(b);\n        var size = 0,\n            result = true; // Recursively compare objects and arrays.\n\n        if (className == '[object Array]') {\n          // Compare array lengths to determine if a deep comparison is necessary.\n          size = a.length;\n          result = size == b.length;\n\n          if (result) {\n            // Deep compare the contents, ignoring non-numeric properties.\n            while (size--) {\n              if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n            }\n          }\n        } else {\n          // Deep compare objects.\n          for (var key in a) {\n            if (_.has(a, key)) {\n              // Count the expected number of properties.\n              size++; // Deep compare each member.\n\n              if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n            }\n          } // Ensure that both objects contain the same number of properties.\n\n\n          if (result) {\n            for (key in b) {\n              if (_.has(b, key) && !size--) break;\n            }\n\n            result = !size;\n          }\n        } // Remove the first object from the stack of traversed objects.\n\n\n        aStack.pop();\n        bStack.pop();\n        return result;\n      }; // Perform a deep comparison to check if two objects are equal.\n\n\n      _.isEqual = function (a, b) {\n        return eq(a, b, [], []);\n      }; // Is a given array, string, or object empty?\n      // An \"empty\" object has no enumerable own-properties.\n\n\n      _.isEmpty = function (obj) {\n        if (obj == null) return true;\n        if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n\n        for (var key in obj) {\n          if (_.has(obj, key)) return false;\n        }\n\n        return true;\n      }; // Is a given value a DOM element?\n\n\n      _.isElement = function (obj) {\n        return !!(obj && obj.nodeType === 1);\n      }; // Is a given value an array?\n      // Delegates to ECMA5's native Array.isArray\n\n\n      _.isArray = nativeIsArray || function (obj) {\n        return toString.call(obj) == '[object Array]';\n      }; // Is a given variable an object?\n\n\n      _.isObject = function (obj) {\n        return obj === Object(obj);\n      }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n\n\n      each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function (name) {\n        _['is' + name] = function (obj) {\n          return toString.call(obj) == '[object ' + name + ']';\n        };\n      }); // Define a fallback version of the method in browsers (ahem, IE), where\n      // there isn't any inspectable \"Arguments\" type.\n\n      if (!_.isArguments(arguments)) {\n        _.isArguments = function (obj) {\n          return !!(obj && _.has(obj, 'callee'));\n        };\n      } // Optimize `isFunction` if appropriate.\n\n\n      if (true) {\n        _.isFunction = function (obj) {\n          return typeof obj === 'function';\n        };\n      } // Is a given object a finite number?\n\n\n      _.isFinite = function (obj) {\n        return isFinite(obj) && !isNaN(parseFloat(obj));\n      }; // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\n\n      _.isNaN = function (obj) {\n        return _.isNumber(obj) && obj != +obj;\n      }; // Is a given value a boolean?\n\n\n      _.isBoolean = function (obj) {\n        return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n      }; // Is a given value equal to null?\n\n\n      _.isNull = function (obj) {\n        return obj === null;\n      }; // Is a given variable undefined?\n\n\n      _.isUndefined = function (obj) {\n        return obj === void 0;\n      }; // Shortcut function for checking if an object has a given property directly\n      // on itself (in other words, not on a prototype).\n\n\n      _.has = function (obj, key) {\n        return hasOwnProperty.call(obj, key);\n      }; // Utility Functions\n      // -----------------\n      // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n      // previous owner. Returns a reference to the Underscore object.\n\n\n      _.noConflict = function () {\n        root._ = previousUnderscore;\n        return this;\n      }; // Keep the identity function around for default iterators.\n\n\n      _.identity = function (value) {\n        return value;\n      };\n\n      _.constant = function (value) {\n        return function () {\n          return value;\n        };\n      };\n\n      _.property = function (key) {\n        return function (obj) {\n          return obj[key];\n        };\n      }; // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n\n\n      _.matches = function (attrs) {\n        return function (obj) {\n          if (obj === attrs) return true; //avoid comparing an object to itself.\n\n          for (var key in attrs) {\n            if (attrs[key] !== obj[key]) return false;\n          }\n\n          return true;\n        };\n      }; // Run a function **n** times.\n\n\n      _.times = function (n, iterator, context) {\n        var accum = Array(Math.max(0, n));\n\n        for (var i = 0; i < n; i++) {\n          accum[i] = iterator.call(context, i);\n        }\n\n        return accum;\n      }; // Return a random integer between min and max (inclusive).\n\n\n      _.random = function (min, max) {\n        if (max == null) {\n          max = min;\n          min = 0;\n        }\n\n        return min + Math.floor(Math.random() * (max - min + 1));\n      }; // A (possibly faster) way to get the current timestamp as an integer.\n\n\n      _.now = Date.now || function () {\n        return new Date().getTime();\n      }; // List of HTML entities for escaping.\n\n\n      var entityMap = {\n        escape: {\n          '&': '&amp;',\n          '<': '&lt;',\n          '>': '&gt;',\n          '\"': '&quot;',\n          \"'\": '&#x27;'\n        }\n      };\n      entityMap.unescape = _.invert(entityMap.escape); // Regexes containing the keys and values listed immediately above.\n\n      var entityRegexes = {\n        escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n        unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n      }; // Functions for escaping and unescaping strings to/from HTML interpolation.\n\n      _.each(['escape', 'unescape'], function (method) {\n        _[method] = function (string) {\n          if (string == null) return '';\n          return ('' + string).replace(entityRegexes[method], function (match) {\n            return entityMap[method][match];\n          });\n        };\n      }); // If the value of the named `property` is a function then invoke it with the\n      // `object` as context; otherwise, return it.\n\n\n      _.result = function (object, property) {\n        if (object == null) return void 0;\n        var value = object[property];\n        return _.isFunction(value) ? value.call(object) : value;\n      }; // Add your own custom functions to the Underscore object.\n\n\n      _.mixin = function (obj) {\n        each(_.functions(obj), function (name) {\n          var func = _[name] = obj[name];\n\n          _.prototype[name] = function () {\n            var args = [this._wrapped];\n            push.apply(args, arguments);\n            return result.call(this, func.apply(_, args));\n          };\n        });\n      }; // Generate a unique integer id (unique within the entire client session).\n      // Useful for temporary DOM ids.\n\n\n      var idCounter = 0;\n\n      _.uniqueId = function (prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n      }; // By default, Underscore uses ERB-style template delimiters, change the\n      // following template settings to use alternative delimiters.\n\n\n      _.templateSettings = {\n        evaluate: /<%([\\s\\S]+?)%>/g,\n        interpolate: /<%=([\\s\\S]+?)%>/g,\n        escape: /<%-([\\s\\S]+?)%>/g\n      }; // When customizing `templateSettings`, if you don't want to define an\n      // interpolation, evaluation or escaping regex, we need one that is\n      // guaranteed not to match.\n\n      var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a\n      // string literal.\n\n      var escapes = {\n        \"'\": \"'\",\n        '\\\\': '\\\\',\n        '\\r': 'r',\n        '\\n': 'n',\n        '\\t': 't',\n        \"\\u2028\": 'u2028',\n        \"\\u2029\": 'u2029'\n      };\n      var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g; // JavaScript micro-templating, similar to John Resig's implementation.\n      // Underscore templating handles arbitrary delimiters, preserves whitespace,\n      // and correctly escapes quotes within interpolated code.\n\n      _.template = function (text, data, settings) {\n        var render;\n        settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.\n\n        var matcher = new RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.\n\n        var index = 0;\n        var source = \"__p+='\";\n        text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n          source += text.slice(index, offset).replace(escaper, function (match) {\n            return '\\\\' + escapes[match];\n          });\n\n          if (escape) {\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n          }\n\n          if (interpolate) {\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n          }\n\n          if (evaluate) {\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\n          }\n\n          index = offset + match.length;\n          return match;\n        });\n        source += \"';\\n\"; // If a variable is not specified, place data values in local scope.\n\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n        source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + \"return __p;\\n\";\n\n        try {\n          render = new Function(settings.variable || 'obj', '_', source);\n        } catch (e) {\n          e.source = source;\n          throw e;\n        }\n\n        if (data) return render(data, _);\n\n        var template = function template(data) {\n          return render.call(this, data, _);\n        }; // Provide the compiled function source as a convenience for precompilation.\n\n\n        template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n        return template;\n      }; // Add a \"chain\" function, which will delegate to the wrapper.\n\n\n      _.chain = function (obj) {\n        return _(obj).chain();\n      }; // OOP\n      // ---------------\n      // If Underscore is called as a function, it returns a wrapped object that\n      // can be used OO-style. This wrapper holds altered versions of all the\n      // underscore functions. Wrapped objects may be chained.\n      // Helper function to continue chaining intermediate results.\n\n\n      var result = function result(obj) {\n        return this._chain ? _(obj).chain() : obj;\n      }; // Add all of the Underscore functions to the wrapper object.\n\n\n      _.mixin(_); // Add all mutator Array functions to the wrapper.\n\n\n      each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n        var method = ArrayProto[name];\n\n        _.prototype[name] = function () {\n          var obj = this._wrapped;\n          method.apply(obj, arguments);\n          if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n          return result.call(this, obj);\n        };\n      }); // Add all accessor Array functions to the wrapper.\n\n      each(['concat', 'join', 'slice'], function (name) {\n        var method = ArrayProto[name];\n\n        _.prototype[name] = function () {\n          return result.call(this, method.apply(this._wrapped, arguments));\n        };\n      });\n\n      _.extend(_.prototype, {\n        // Start chaining a wrapped Underscore object.\n        chain: function chain() {\n          this._chain = true;\n          return this;\n        },\n        // Extracts the result from a wrapped and chained object.\n        value: function value() {\n          return this._wrapped;\n        }\n      }); // AMD registration happens at the end for compatibility with AMD loaders\n      // that may not enforce next-turn semantics on modules. Even though general\n      // practice for AMD registration is to be anonymous, underscore registers\n      // as a named module because, like jQuery, it is a base library that is\n      // popular enough to be bundled in a third party lib, but not be part of\n      // an AMD load request. Those cases could generate an error when an\n      // anonymous define() is called outside of a loader request.\n\n\n      if (typeof define === 'function' && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n        define('underscore', [], function () {\n          return _;\n        });\n      }\n    }).call(this);\n  }, {}],\n  11: [function (require, module, exports) {\n    /*!\n     * EventEmitter v4.2.11 - git.io/ee\n     * Unlicense - http://unlicense.org/\n     * Oliver Caldwell - http://oli.me.uk/\n     * @preserve\n     */\n    ;\n    (function () {\n      'use strict';\n      /**\n       * Class for managing events.\n       * Can be extended to provide event functionality in other classes.\n       *\n       * @class EventEmitter Manages event registering and emitting.\n       */\n\n      function EventEmitter() {} // Shortcuts to improve speed and size\n\n\n      var proto = EventEmitter.prototype;\n      var exports = this;\n      var originalGlobalValue = exports.EventEmitter;\n      /**\n       * Finds the index of the listener for the event in its storage array.\n       *\n       * @param {Function[]} listeners Array of listeners to search through.\n       * @param {Function} listener Method to look for.\n       * @return {Number} Index of the specified listener, -1 if not found\n       * @api private\n       */\n\n      function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n\n        while (i--) {\n          if (listeners[i].listener === listener) {\n            return i;\n          }\n        }\n\n        return -1;\n      }\n      /**\n       * Alias a method while keeping the context correct, to allow for overwriting of target method.\n       *\n       * @param {String} name The name of the target method.\n       * @return {Function} The aliased method\n       * @api private\n       */\n\n\n      function alias(name) {\n        return function aliasClosure() {\n          return this[name].apply(this, arguments);\n        };\n      }\n      /**\n       * Returns the listener array for the specified event.\n       * Will initialise the event object and listener arrays if required.\n       * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n       * Each property in the object response is an array of listener functions.\n       *\n       * @param {String|RegExp} evt Name of the event to return the listeners from.\n       * @return {Function[]|Object} All listener functions for the event.\n       */\n\n\n      proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n\n        var response;\n        var key; // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n\n        if (evt instanceof RegExp) {\n          response = {};\n\n          for (key in events) {\n            if (events.hasOwnProperty(key) && evt.test(key)) {\n              response[key] = events[key];\n            }\n          }\n        } else {\n          response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n      };\n      /**\n       * Takes a list of listener objects and flattens it into a list of listener functions.\n       *\n       * @param {Object[]} listeners Raw listener objects.\n       * @return {Function[]} Just the listener functions.\n       */\n\n\n      proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n          flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n      };\n      /**\n       * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n       *\n       * @param {String|RegExp} evt Name of the event to return the listeners from.\n       * @return {Object} All listener functions for an event in an object.\n       */\n\n\n      proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n          response = {};\n          response[evt] = listeners;\n        }\n\n        return response || listeners;\n      };\n      /**\n       * Adds a listener function to the specified event.\n       * The listener will not be added if it is a duplicate.\n       * If the listener returns true then it will be removed after it is called.\n       * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n       *\n       * @param {String|RegExp} evt Name of the event to attach the listener to.\n       * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n\n      proto.addListener = function addListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = _typeof(listener) === 'object';\n        var key;\n\n        for (key in listeners) {\n          if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n            listeners[key].push(listenerIsWrapped ? listener : {\n              listener: listener,\n              once: false\n            });\n          }\n        }\n\n        return this;\n      };\n      /**\n       * Alias of addListener\n       */\n\n\n      proto.on = alias('addListener');\n      /**\n       * Semi-alias of addListener. It will add a listener that will be\n       * automatically removed after its first execution.\n       *\n       * @param {String|RegExp} evt Name of the event to attach the listener to.\n       * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n      proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n          listener: listener,\n          once: true\n        });\n      };\n      /**\n       * Alias of addOnceListener.\n       */\n\n\n      proto.once = alias('addOnceListener');\n      /**\n       * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n       * You need to tell it what event names should be matched by a regex.\n       *\n       * @param {String} evt Name of the event to create.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n      proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n      };\n      /**\n       * Uses defineEvent to define multiple events.\n       *\n       * @param {String[]} evts An array of event names to define.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n\n      proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n          this.defineEvent(evts[i]);\n        }\n\n        return this;\n      };\n      /**\n       * Removes a listener function from the specified event.\n       * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n       *\n       * @param {String|RegExp} evt Name of the event to remove the listener from.\n       * @param {Function} listener Method to remove from the event.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n\n      proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n          if (listeners.hasOwnProperty(key)) {\n            index = indexOfListener(listeners[key], listener);\n\n            if (index !== -1) {\n              listeners[key].splice(index, 1);\n            }\n          }\n        }\n\n        return this;\n      };\n      /**\n       * Alias of removeListener\n       */\n\n\n      proto.off = alias('removeListener');\n      /**\n       * Adds listeners in bulk using the manipulateListeners method.\n       * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n       * You can also pass it a regular expression to add the array of listeners to all events that match it.\n       * Yeah, this function does quite a bit. That's probably a bad thing.\n       *\n       * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n       * @param {Function[]} [listeners] An optional array of listener functions to add.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n      proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n      };\n      /**\n       * Removes listeners in bulk using the manipulateListeners method.\n       * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n       * You can also pass it an event name and an array of listeners to be removed.\n       * You can also pass it a regular expression to remove the listeners from all events that match it.\n       *\n       * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n       * @param {Function[]} [listeners] An optional array of listener functions to remove.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n\n      proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n      };\n      /**\n       * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n       * The first argument will determine if the listeners are removed (true) or added (false).\n       * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n       * You can also pass it an event name and an array of listeners to be added/removed.\n       * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n       *\n       * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n       * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n       * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n\n      proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners; // If evt is an object then pass each of its properties to this method\n\n        if (_typeof(evt) === 'object' && !(evt instanceof RegExp)) {\n          for (i in evt) {\n            if (evt.hasOwnProperty(i) && (value = evt[i])) {\n              // Pass the single listener straight through to the singular method\n              if (typeof value === 'function') {\n                single.call(this, i, value);\n              } else {\n                // Otherwise pass back to the multiple function\n                multiple.call(this, i, value);\n              }\n            }\n          }\n        } else {\n          // So evt must be a string\n          // And listeners must be an array of listeners\n          // Loop over it and pass each one to the multiple method\n          i = listeners.length;\n\n          while (i--) {\n            single.call(this, evt, listeners[i]);\n          }\n        }\n\n        return this;\n      };\n      /**\n       * Removes all listeners from a specified event.\n       * If you do not specify an event then all listeners will be removed.\n       * That means every event will be emptied.\n       * You can also pass a regex to remove all events that match it.\n       *\n       * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n\n      proto.removeEvent = function removeEvent(evt) {\n        var type = _typeof(evt);\n\n        var events = this._getEvents();\n\n        var key; // Remove different things depending on the state of evt\n\n        if (type === 'string') {\n          // Remove all listeners for the specified event\n          delete events[evt];\n        } else if (evt instanceof RegExp) {\n          // Remove all events matching the regex.\n          for (key in events) {\n            if (events.hasOwnProperty(key) && evt.test(key)) {\n              delete events[key];\n            }\n          }\n        } else {\n          // Remove all listeners in all events\n          delete this._events;\n        }\n\n        return this;\n      };\n      /**\n       * Alias of removeEvent.\n       *\n       * Added to mirror the node API.\n       */\n\n\n      proto.removeAllListeners = alias('removeEvent');\n      /**\n       * Emits an event of your choice.\n       * When emitted, every listener attached to that event will be executed.\n       * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n       * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n       * So they will not arrive within the array on the other side, they will be separate.\n       * You can also pass a regular expression to emit to all events that match it.\n       *\n       * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n       * @param {Array} [args] Optional array of arguments to be passed to each listener.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n      proto.emitEvent = function emitEvent(evt, args) {\n        var listeners = this.getListenersAsObject(evt);\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listeners) {\n          if (listeners.hasOwnProperty(key)) {\n            i = listeners[key].length;\n\n            while (i--) {\n              // If the listener returns true then it shall be removed from the event\n              // The function is executed either with a basic call or an apply if there is an args array\n              listener = listeners[key][i];\n\n              if (listener.once === true) {\n                this.removeListener(evt, listener.listener);\n              }\n\n              response = listener.listener.apply(this, args || []);\n\n              if (response === this._getOnceReturnValue()) {\n                this.removeListener(evt, listener.listener);\n              }\n            }\n          }\n        }\n\n        return this;\n      };\n      /**\n       * Alias of emitEvent\n       */\n\n\n      proto.trigger = alias('emitEvent');\n      /**\n       * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n       * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n       *\n       * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n       * @param {...*} Optional additional arguments to be passed to each listener.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n      proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n      };\n      /**\n       * Sets the current value to check against when executing listeners. If a\n       * listeners return value matches the one set here then it will be removed\n       * after execution. This value defaults to true.\n       *\n       * @param {*} value The new value to check for when executing listeners.\n       * @return {Object} Current instance of EventEmitter for chaining.\n       */\n\n\n      proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n      };\n      /**\n       * Fetches the current value to check against when executing listeners. If\n       * the listeners return value matches this one then it should be removed\n       * automatically. It will return true by default.\n       *\n       * @return {*|Boolean} The current value to check for or the default, true.\n       * @api private\n       */\n\n\n      proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n          return this._onceReturnValue;\n        } else {\n          return true;\n        }\n      };\n      /**\n       * Fetches the events object and creates one if required.\n       *\n       * @return {Object} The events storage object.\n       * @api private\n       */\n\n\n      proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n      };\n      /**\n       * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n       *\n       * @return {Function} Non conflicting EventEmitter class.\n       */\n\n\n      EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n      }; // Expose the class either via AMD, CommonJS or the global object\n\n\n      if (typeof define === 'function' && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n        define(function () {\n          return EventEmitter;\n        });\n      } else if (_typeof(module) === 'object' && module.exports) {\n        module.exports = EventEmitter;\n      } else {\n        exports.EventEmitter = EventEmitter;\n      }\n    }).call(this);\n  }, {}],\n  12: [function (require, module, exports) {\n    var ComponentTree, CssLoader, EditorPage, JsLoader, Livingdoc, augmentConfig, _config, designCache, doc, imageService, version;\n\n    _config = require('./configuration/config');\n    augmentConfig = require('./configuration/augment_config');\n    Livingdoc = require('./livingdoc');\n    ComponentTree = require('./component_tree/component_tree');\n    designCache = require('./design/design_cache');\n    EditorPage = require('./rendering_container/editor_page');\n    JsLoader = require('./rendering_container/js_loader');\n    CssLoader = require('./rendering_container/css_loader');\n    version = require('../version');\n    imageService = require('./image_services/image_service');\n\n    module.exports = doc = function () {\n      var editorPage;\n      editorPage = new EditorPage();\n      return {\n        version: version.version,\n        revision: version.revision,\n        design: designCache,\n        Livingdoc: Livingdoc,\n        ComponentTree: ComponentTree,\n        createLivingdoc: function createLivingdoc(_arg) {\n          var componentTree, data, designName, designVersion, layout;\n          data = _arg.data, designName = _arg.designName, designVersion = _arg.designVersion, layout = _arg.layout, componentTree = _arg.componentTree;\n          return Livingdoc.create({\n            data: data,\n            designName: designName,\n            designVersion: designVersion,\n            layoutName: layout,\n            componentTree: componentTree\n          });\n        },\n        \"new\": function _new() {\n          return this.createLivingdoc.apply(this, arguments);\n        },\n        create: function create() {\n          return this.createLivingdoc.apply(this, arguments);\n        },\n        startDrag: $.proxy(editorPage, 'startDrag'),\n        config: function config(userConfig) {\n          $.extend(true, _config, userConfig);\n          return augmentConfig(_config);\n        },\n        JsLoader: JsLoader,\n        CssLoader: CssLoader,\n        getImageService: function getImageService(serviceName) {\n          return imageService.get(serviceName);\n        }\n      };\n    }();\n\n    window.doc = doc;\n  }, {\n    \"../version\": 75,\n    \"./component_tree/component_tree\": 19,\n    \"./configuration/augment_config\": 25,\n    \"./configuration/config\": 26,\n    \"./design/design_cache\": 30,\n    \"./image_services/image_service\": 37,\n    \"./livingdoc\": 45,\n    \"./rendering_container/css_loader\": 63,\n    \"./rendering_container/editor_page\": 64,\n    \"./rendering_container/js_loader\": 66\n  }],\n  13: [function (require, module, exports) {\n    var ComponentArray;\n\n    module.exports = ComponentArray = function () {\n      function ComponentArray(components) {\n        this.components = components;\n\n        if (this.components == null) {\n          this.components = [];\n        }\n\n        this.createPseudoArray();\n      }\n\n      ComponentArray.prototype.createPseudoArray = function () {\n        var index, result, _i, _len, _ref;\n\n        _ref = this.components;\n\n        for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n          result = _ref[index];\n          this[index] = result;\n        }\n\n        this.length = this.components.length;\n\n        if (this.components.length) {\n          this.first = this[0];\n          return this.last = this[this.components.length - 1];\n        }\n      };\n\n      ComponentArray.prototype.each = function (callback) {\n        var component, _i, _len, _ref;\n\n        _ref = this.components;\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          component = _ref[_i];\n          callback(component);\n        }\n\n        return this;\n      };\n\n      ComponentArray.prototype.remove = function () {\n        this.each(function (component) {\n          return component.remove();\n        });\n        return this;\n      };\n\n      return ComponentArray;\n    }();\n  }, {}],\n  14: [function (require, module, exports) {\n    var ComponentContainer, assert;\n    assert = require('../modules/logging/assert');\n\n    module.exports = ComponentContainer = function () {\n      function ComponentContainer(_arg) {\n        var config, isRoot;\n        this.parentComponent = _arg.parentComponent, this.name = _arg.name, isRoot = _arg.isRoot, config = _arg.config;\n        this.isRoot = isRoot != null;\n        this.first = this.last = void 0;\n        this.allowedChildren = void 0;\n        this.parseConfig(config);\n      }\n\n      ComponentContainer.prototype.parseConfig = function (configuration) {\n        var componentName, _i, _len, _ref, _results;\n\n        if (configuration == null) {\n          return;\n        }\n\n        _ref = configuration.allowedChildren || [];\n        _results = [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          componentName = _ref[_i];\n\n          if (this.allowedChildren == null) {\n            this.allowedChildren = {};\n          }\n\n          _results.push(this.allowedChildren[componentName] = true);\n        }\n\n        return _results;\n      };\n\n      ComponentContainer.prototype.isAllowedAsChild = function (component) {\n        return !!(this.canBeNested(component.id) && this.isChildAllowed(component.template) && this.isAllowedAsParent(component.template));\n      };\n\n      ComponentContainer.prototype.isTypeAllowedAsChild = function (template) {\n        if (template == null) {\n          return false;\n        }\n\n        return !!(this.isChildAllowed(template) && this.isAllowedAsParent(template));\n      };\n\n      ComponentContainer.prototype.canBeNested = function (componentId) {\n        var parent;\n        parent = this.parentComponent;\n\n        while (parent != null) {\n          if (parent.id === componentId) {\n            return false;\n          }\n\n          parent = parent.getParent();\n        }\n\n        return true;\n      };\n\n      ComponentContainer.prototype.isChildAllowed = function (template) {\n        return this.allowedChildren === void 0 || this.allowedChildren[template.name];\n      };\n\n      ComponentContainer.prototype.isAllowedAsParent = function (template) {\n        var allowed, allowedParents, parentName, _i, _len, _ref;\n\n        if (!(allowedParents = template.allowedParents)) {\n          return true;\n        }\n\n        parentName = this.isRoot ? 'root' : (_ref = this.parentComponent) != null ? _ref.componentName : void 0;\n\n        for (_i = 0, _len = allowedParents.length; _i < _len; _i++) {\n          allowed = allowedParents[_i];\n\n          if (parentName === allowed) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      ComponentContainer.prototype.getComponentTree = function () {\n        var _ref;\n\n        return this.componentTree || ((_ref = this.parentComponent) != null ? _ref.componentTree : void 0);\n      };\n\n      ComponentContainer.prototype.prepend = function (component) {\n        if (this.first) {\n          this.insertBefore(this.first, component);\n        } else {\n          this.attachComponent(component);\n        }\n\n        return this;\n      };\n\n      ComponentContainer.prototype.append = function (component) {\n        if (this.parentComponent) {\n          assert(component !== this.parentComponent, 'cannot append component to itself');\n        }\n\n        if (this.last) {\n          this.insertAfter(this.last, component);\n        } else {\n          this.attachComponent(component);\n        }\n\n        return this;\n      };\n\n      ComponentContainer.prototype.insertBefore = function (component, insertedComponent) {\n        var position;\n\n        if (component.previous === insertedComponent) {\n          return;\n        }\n\n        assert(component !== insertedComponent, 'cannot insert component before itself');\n        position = {\n          previous: component.previous,\n          next: component,\n          parentContainer: component.parentContainer\n        };\n        return this.attachComponent(insertedComponent, position);\n      };\n\n      ComponentContainer.prototype.insertAfter = function (component, insertedComponent) {\n        var position;\n\n        if (component.next === insertedComponent) {\n          return;\n        }\n\n        assert(component !== insertedComponent, 'cannot insert component after itself');\n        position = {\n          previous: component,\n          next: component.next,\n          parentContainer: component.parentContainer\n        };\n        return this.attachComponent(insertedComponent, position);\n      };\n\n      ComponentContainer.prototype.up = function (component) {\n        if (component.previous != null) {\n          return this.insertBefore(component.previous, component);\n        }\n      };\n\n      ComponentContainer.prototype.down = function (component) {\n        if (component.next != null) {\n          return this.insertAfter(component.next, component);\n        }\n      };\n\n      ComponentContainer.prototype.remove = function (component) {\n        component.destroy();\n        return this._detachComponent(component);\n      };\n\n      ComponentContainer.prototype.each = function (callback) {\n        var component, _results;\n\n        component = this.first;\n        _results = [];\n\n        while (component) {\n          component.descendantsAndSelf(callback);\n\n          _results.push(component = component.next);\n        }\n\n        return _results;\n      };\n\n      ComponentContainer.prototype.eachContainer = function (callback) {\n        callback(this);\n        return this.each(function (component) {\n          var componentContainer, name, _ref, _results;\n\n          _ref = component.containers;\n          _results = [];\n\n          for (name in _ref) {\n            componentContainer = _ref[name];\n\n            _results.push(callback(componentContainer));\n          }\n\n          return _results;\n        });\n      };\n\n      ComponentContainer.prototype.all = function (callback) {\n        callback(this);\n        return this.each(function (component) {\n          var componentContainer, name, _ref, _results;\n\n          callback(component);\n          _ref = component.containers;\n          _results = [];\n\n          for (name in _ref) {\n            componentContainer = _ref[name];\n\n            _results.push(callback(componentContainer));\n          }\n\n          return _results;\n        });\n      };\n\n      ComponentContainer.prototype.attachComponent = function (component, position) {\n        var componentTree, func;\n\n        if (position == null) {\n          position = {};\n        }\n\n        if (!this.isAllowedAsChild(component)) {\n          return;\n        }\n\n        assert(this.isAllowedAsChild(component), \"Component '\" + component.componentName + \"' is not allowed as a child of \" + this.getContainerIdentifier());\n\n        func = function (_this) {\n          return function () {\n            return _this.link(component, position);\n          };\n        }(this);\n\n        if (componentTree = this.getComponentTree()) {\n          return componentTree.attachingComponent(component, func);\n        } else {\n          return func();\n        }\n      };\n\n      ComponentContainer.prototype._detachComponent = function (component) {\n        var componentTree, func;\n\n        func = function (_this) {\n          return function () {\n            return _this.unlink(component);\n          };\n        }(this);\n\n        if (componentTree = this.getComponentTree()) {\n          return componentTree.detachingComponent(component, func);\n        } else {\n          return func();\n        }\n      };\n\n      ComponentContainer.prototype.link = function (component, position) {\n        if (component.parentContainer) {\n          this.unlink(component);\n        }\n\n        position.parentContainer || (position.parentContainer = this);\n        return this.setComponentPosition(component, position);\n      };\n\n      ComponentContainer.prototype.unlink = function (component) {\n        var container, _ref, _ref1;\n\n        container = component.parentContainer;\n\n        if (container) {\n          if (component.previous == null) {\n            container.first = component.next;\n          }\n\n          if (component.next == null) {\n            container.last = component.previous;\n          }\n\n          if ((_ref = component.next) != null) {\n            _ref.previous = component.previous;\n          }\n\n          if ((_ref1 = component.previous) != null) {\n            _ref1.next = component.next;\n          }\n\n          return this.setComponentPosition(component, {});\n        }\n      };\n\n      ComponentContainer.prototype.setComponentPosition = function (component, _arg) {\n        var next, parentContainer, previous;\n        parentContainer = _arg.parentContainer, previous = _arg.previous, next = _arg.next;\n        component.parentContainer = parentContainer;\n        component.previous = previous;\n        component.next = next;\n\n        if (parentContainer) {\n          if (previous) {\n            previous.next = component;\n          }\n\n          if (next) {\n            next.previous = component;\n          }\n\n          if (component.previous == null) {\n            parentContainer.first = component;\n          }\n\n          if (component.next == null) {\n            return parentContainer.last = component;\n          }\n        }\n      };\n\n      ComponentContainer.prototype.getContainerIdentifier = function () {\n        if (this.isRoot) {\n          return 'root';\n        } else {\n          return \"\" + this.parentComponent.componentName + \".containers['\" + this.name + \"']\";\n        }\n      };\n\n      return ComponentContainer;\n    }();\n  }, {\n    \"../modules/logging/assert\": 50\n  }],\n  15: [function (require, module, exports) {\n    var ComponentDirective;\n\n    module.exports = ComponentDirective = function () {\n      function ComponentDirective(_arg) {\n        this.component = _arg.component, this.templateDirective = _arg.templateDirective;\n        this.name = this.templateDirective.name;\n        this.type = this.templateDirective.type;\n      }\n\n      ComponentDirective.prototype.getContent = function () {\n        return this.component.content[this.name];\n      };\n\n      ComponentDirective.prototype.setContent = function (value) {\n        return this.component.setContent(this.name, value);\n      };\n\n      ComponentDirective.prototype.copyTo = function (otherDirective) {\n        return otherDirective.setContent(this.getContent());\n      };\n\n      ComponentDirective.prototype.isEmpty = function () {\n        return !this.getContent();\n      };\n\n      ComponentDirective.prototype.setData = function (key, value) {\n        var dataStore, directiveData;\n        dataStore = \"_\" + this.name + \"Directive\";\n        directiveData = this.component.getData(dataStore);\n\n        if (directiveData == null) {\n          directiveData = {};\n        }\n\n        directiveData[key] = value;\n        return this.component.setData(dataStore, directiveData);\n      };\n\n      ComponentDirective.prototype.getData = function (key) {\n        var _ref;\n\n        if (key) {\n          return (_ref = this.component.dataValues[\"_\" + this.name + \"Directive\"]) != null ? _ref[key] : void 0;\n        } else {\n          return this.component.dataValues[\"_\" + this.name + \"Directive\"];\n        }\n      };\n\n      ComponentDirective.prototype.setTmp = function (key, value) {\n        this.tmp = {};\n        return this.tmp[key] = value;\n      };\n\n      ComponentDirective.prototype.getTmp = function (key) {\n        var _ref;\n\n        return (_ref = this.tmp) != null ? _ref[key] : void 0;\n      };\n\n      return ComponentDirective;\n    }();\n  }, {}],\n  16: [function (require, module, exports) {\n    var ComponentDirective, EditableDirective, HtmlDirective, ImageDirective, LinkDirective, EmbedItemDirective, assert, imageService;\n    assert = require('../modules/logging/assert');\n    imageService = require('../image_services/image_service');\n    EditableDirective = require('./editable_directive');\n    ImageDirective = require('./image_directive');\n    HtmlDirective = require('./html_directive');\n    LinkDirective = require('./link_directive');\n    ComponentDirective = require('./component_directive');\n\n    var __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    }; // todo(Marcus) need to re-compile from coffee script really...\n\n\n    EmbedItemDirective = function (_super) {\n      __extends(EmbedItemDirective, _super);\n\n      function EmbedItemDirective() {\n        return EmbedItemDirective.__super__.constructor.apply(this, arguments);\n      }\n\n      EmbedItemDirective.prototype.isEmbed = true;\n      return EmbedItemDirective;\n    }(ComponentDirective);\n\n    module.exports = {\n      create: function create(_arg) {\n        var Directive, component, templateDirective;\n        component = _arg.component, templateDirective = _arg.templateDirective;\n        Directive = this.getDirectiveConstructor(templateDirective.type);\n        return new Directive({\n          component: component,\n          templateDirective: templateDirective\n        });\n      },\n      getDirectiveConstructor: function getDirectiveConstructor(directiveType) {\n        switch (directiveType) {\n          case 'editable':\n            return EditableDirective;\n\n          case 'image':\n            return ImageDirective;\n\n          case 'html':\n            return HtmlDirective;\n\n          case 'link':\n            return LinkDirective;\n\n          case 'embeditem':\n            return EmbedItemDirective;\n\n          default:\n            return assert(false, \"Unsupported component directive: \" + directiveType);\n        }\n      }\n    };\n  }, {\n    \"../image_services/image_service\": 37,\n    \"../modules/logging/assert\": 50,\n    \"./editable_directive\": 20,\n    \"./html_directive\": 22,\n    \"./image_directive\": 23,\n    \"./link_directive\": 24,\n    \"./component_directive\": 15\n  }],\n  17: [function (require, module, exports) {\n    var ComponentContainer, ComponentModel, DirectiveCollection, assert, config, deepEqual, directiveFactory, guid, log;\n    deepEqual = require('deep-equal');\n    config = require('../configuration/config');\n    ComponentContainer = require('./component_container');\n    guid = require('../modules/guid');\n    log = require('../modules/logging/log');\n    assert = require('../modules/logging/assert');\n    directiveFactory = require('./component_directive_factory');\n    DirectiveCollection = require('../template/directive_collection');\n\n    module.exports = ComponentModel = function () {\n      function ComponentModel(_arg) {\n        var id, _ref;\n\n        _ref = _arg != null ? _arg : {}, this.template = _ref.template, id = _ref.id;\n        assert(this.template, 'cannot instantiate component without template reference');\n        this.initializeDirectives();\n        this.styles = {};\n        this.dataValues = {};\n        this.id = id || guid.next();\n        this.componentName = this.template.name;\n        this.next = void 0;\n        this.previous = void 0;\n        this.componentTree = void 0;\n      }\n\n      ComponentModel.prototype.initializeDirectives = function () {\n        var directive, _i, _len, _ref, _results;\n\n        this.directives = new DirectiveCollection();\n        _ref = this.template.directives;\n        _results = [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          directive = _ref[_i];\n\n          switch (directive.type) {\n            case 'container':\n              this.containers || (this.containers = {});\n\n              _results.push(this.containers[directive.name] = new ComponentContainer({\n                name: directive.name,\n                parentComponent: this,\n                config: directive.config\n              }));\n\n              break;\n\n            case 'editable':\n            case 'image':\n            case 'html':\n            case 'link':\n            case 'embeditem':\n              this.createComponentDirective(directive);\n              this.content || (this.content = {});\n\n              _results.push(this.content[directive.name] = void 0);\n\n              break;\n\n            default:\n              _results.push(log.error(\"Template directive type '\" + directive.type + \"' not implemented in ComponentModel\"));\n\n          }\n        }\n\n        return _results;\n      };\n\n      ComponentModel.prototype.createComponentDirective = function (templateDirective) {\n        return this.directives.add(directiveFactory.create({\n          component: this,\n          templateDirective: templateDirective\n        }));\n      };\n\n      ComponentModel.prototype.createView = function (isReadOnly) {\n        return this.template.createView(this, isReadOnly);\n      };\n\n      ComponentModel.prototype.getMainView = function () {\n        return this.componentTree.getMainComponentView(this.id);\n      };\n\n      ComponentModel.prototype.isAllowedAsSibling = function (component) {\n        return this.parentContainer.isAllowedAsChild(component);\n      };\n\n      ComponentModel.prototype.isTypeAllowedAsSibling = function (template) {\n        if (this.parentContainer == null) {\n          return true;\n        }\n\n        return this.parentContainer.isTypeAllowedAsChild(template);\n      };\n\n      ComponentModel.prototype.isAllowedAsChild = function (containerName, component) {\n        return this.containers[containerName].isAllowedAsChild(component);\n      };\n\n      ComponentModel.prototype.before = function (componentModel) {\n        if (componentModel) {\n          this.parentContainer.insertBefore(this, componentModel);\n          return this;\n        } else {\n          return this.previous;\n        }\n      };\n\n      ComponentModel.prototype.after = function (componentModel) {\n        if (componentModel) {\n          this.parentContainer.insertAfter(this, componentModel);\n          return this;\n        } else {\n          return this.next;\n        }\n      };\n\n      ComponentModel.prototype.append = function (containerName, componentModel) {\n        this.containers[containerName].append(componentModel);\n        return this;\n      };\n\n      ComponentModel.prototype.prepend = function (containerName, componentModel) {\n        this.containers[containerName].prepend(componentModel);\n        return this;\n      };\n\n      ComponentModel.prototype.up = function () {\n        this.parentContainer.up(this);\n        return this;\n      };\n\n      ComponentModel.prototype.down = function () {\n        this.parentContainer.down(this);\n        return this;\n      };\n\n      ComponentModel.prototype.remove = function () {\n        return this.parentContainer.remove(this);\n      };\n\n      ComponentModel.prototype.getTransforms = function () {\n        var transforms, _ref;\n\n        return transforms = (_ref = this.template.design) != null ? _ref.transforms : void 0;\n      };\n\n      ComponentModel.prototype.getTransformOptions = function (_arg) {\n        var directives, oneWay, transforms, _ref;\n\n        _ref = _arg != null ? _arg : {}, oneWay = _ref.oneWay, directives = _ref.directives;\n        transforms = this.getTransforms();\n\n        if (transforms == null) {\n          return;\n        }\n\n        return transforms.getOptionsList({\n          template: this.template,\n          oneWay: oneWay,\n          directives: directives,\n          filter: function (_this) {\n            return function (template) {\n              return _this.isTypeAllowedAsSibling(template);\n            };\n          }(this)\n        });\n      };\n\n      ComponentModel.prototype.transform = function (componentName) {\n        var compatibility, design, from, fromDirective, newDirective, newModel, newTemplate, to, transforms, _ref;\n\n        transforms = this.getTransforms();\n        design = this.template.design;\n        newTemplate = design.get(componentName);\n        compatibility = transforms.isCompatible(this, newTemplate, {\n          oneWay: true\n        });\n        assert(compatibility.isCompatible, \"Component \" + this.componentName + \" can not be transformed into \" + componentName + \".\");\n        newModel = newTemplate.createModel();\n        _ref = compatibility.mapping || [];\n\n        for (from in _ref) {\n          to = _ref[from];\n          fromDirective = this.directives.get(from);\n          newDirective = newModel.directives.get(to);\n          fromDirective.copyTo(newDirective);\n        }\n\n        return this.replaceWith(newModel);\n      };\n\n      ComponentModel.prototype.replaceWith = function (otherComponent) {\n        this.after(otherComponent);\n        this.remove();\n        return otherComponent;\n      };\n\n      ComponentModel.prototype.getParent = function () {\n        var _ref;\n\n        return (_ref = this.parentContainer) != null ? _ref.parentComponent : void 0;\n      };\n\n      ComponentModel.prototype.parents = function (callback) {\n        var componentModel, _results;\n\n        componentModel = this;\n        _results = [];\n\n        while (componentModel = componentModel.getParent()) {\n          _results.push(callback(componentModel));\n        }\n\n        return _results;\n      };\n\n      ComponentModel.prototype.children = function (callback) {\n        var componentContainer, componentModel, name, _ref, _results;\n\n        _ref = this.containers;\n        _results = [];\n\n        for (name in _ref) {\n          componentContainer = _ref[name];\n          componentModel = componentContainer.first;\n\n          _results.push(function () {\n            var _results1;\n\n            _results1 = [];\n\n            while (componentModel) {\n              callback(componentModel);\n\n              _results1.push(componentModel = componentModel.next);\n            }\n\n            return _results1;\n          }());\n        }\n\n        return _results;\n      };\n\n      ComponentModel.prototype.childrenAndSelf = function (callback) {\n        callback(this);\n        return this.children(callback);\n      };\n\n      ComponentModel.prototype.descendants = function (callback) {\n        var componentContainer, componentModel, name, _ref, _results;\n\n        _ref = this.containers;\n        _results = [];\n\n        for (name in _ref) {\n          componentContainer = _ref[name];\n          componentModel = componentContainer.first;\n\n          _results.push(function () {\n            var _results1;\n\n            _results1 = [];\n\n            while (componentModel) {\n              callback(componentModel);\n              componentModel.descendants(callback);\n\n              _results1.push(componentModel = componentModel.next);\n            }\n\n            return _results1;\n          }());\n        }\n\n        return _results;\n      };\n\n      ComponentModel.prototype.descendantsAndSelf = function (callback) {\n        callback(this);\n        return this.descendants(callback);\n      };\n\n      ComponentModel.prototype.parentContainers = function (callback) {\n        var componentModel, _results;\n\n        componentModel = this;\n        _results = [];\n\n        while (componentModel != null) {\n          callback(componentModel.parentContainer);\n\n          _results.push(componentModel = componentModel.getParent());\n        }\n\n        return _results;\n      };\n\n      ComponentModel.prototype.descendantContainers = function (callback) {\n        return this.descendantsAndSelf(function (componentModel) {\n          var componentContainer, name, _ref, _results;\n\n          _ref = componentModel.containers;\n          _results = [];\n\n          for (name in _ref) {\n            componentContainer = _ref[name];\n\n            _results.push(callback(componentContainer));\n          }\n\n          return _results;\n        });\n      };\n\n      ComponentModel.prototype.allDescendants = function (callback) {\n        return this.descendantsAndSelf(function (_this) {\n          return function (componentModel) {\n            var componentContainer, name, _ref, _results;\n\n            if (componentModel !== _this) {\n              callback(componentModel);\n            }\n\n            _ref = componentModel.containers;\n            _results = [];\n\n            for (name in _ref) {\n              componentContainer = _ref[name];\n\n              _results.push(callback(componentContainer));\n            }\n\n            return _results;\n          };\n        }(this));\n      };\n\n      ComponentModel.prototype.hasContainers = function () {\n        return this.containers != null;\n      };\n\n      ComponentModel.prototype.hasEditables = function () {\n        return this.directives.count('editable') > 0;\n      };\n\n      ComponentModel.prototype.hasHtml = function () {\n        return this.directives.count('html') > 0;\n      };\n\n      ComponentModel.prototype.hasImages = function () {\n        return this.directives.count('image') > 0;\n      };\n\n      ComponentModel.prototype.hasLinks = function () {\n        return this.directives.count('link') > 0;\n      };\n\n      ComponentModel.prototype.setContent = function (name, value) {\n        if (!value) {\n          if (this.content[name]) {\n            this.content[name] = void 0;\n\n            if (this.componentTree) {\n              return this.componentTree.contentChanging(this, name);\n            }\n          }\n        } else if (typeof value === 'string') {\n          if (this.content[name] !== value) {\n            this.content[name] = value;\n\n            if (this.componentTree) {\n              return this.componentTree.contentChanging(this, name);\n            }\n          }\n        } else {\n          if (!deepEqual(this.content[name], value)) {\n            this.content[name] = value;\n\n            if (this.componentTree) {\n              return this.componentTree.contentChanging(this, name);\n            }\n          }\n        }\n      };\n\n      ComponentModel.prototype.set = function (name, value) {\n        var directive, _ref;\n\n        assert((_ref = this.content) != null ? _ref.hasOwnProperty(name) : void 0, \"set error: \" + this.componentName + \" has no content named \" + name);\n        directive = this.directives.get(name);\n\n        if (directive.isImage) {\n          if (directive.getImageUrl() !== value) {\n            directive.setImageUrl(value);\n\n            if (this.componentTree) {\n              return this.componentTree.contentChanging(this, name);\n            }\n          }\n        } else {\n          return this.setContent(name, value);\n        }\n      };\n\n      ComponentModel.prototype.get = function (name) {\n        var _ref;\n\n        assert((_ref = this.content) != null ? _ref.hasOwnProperty(name) : void 0, \"get error: \" + this.componentName + \" has no content named \" + name);\n        return this.directives.get(name).getContent();\n      };\n\n      ComponentModel.prototype.isEmpty = function (name) {\n        var value;\n        value = this.get(name);\n        return value === void 0 || value === '';\n      };\n\n      ComponentModel.prototype.data = function (arg) {\n        var changedDataProperties, name, value, _ref;\n\n        if (_typeof(arg) === 'object') {\n          changedDataProperties = [];\n\n          for (name in arg) {\n            value = arg[name];\n\n            if (this.changeData(name, value)) {\n              changedDataProperties.push(name);\n            }\n          }\n\n          if (changedDataProperties.length > 0) {\n            return (_ref = this.componentTree) != null ? _ref.dataChanging(this, changedDataProperties) : void 0;\n          }\n        } else if (arg) {\n          return this.dataValues[arg];\n        } else {\n          return this.dataValues;\n        }\n      };\n\n      ComponentModel.prototype.setDirectiveAttribute = function (name, attr, value) {\n        var attributes,\n            itemAttributes = {};\n        attributes = this.getData('data_attributes');\n\n        if (!attributes) {\n          attributes = {};\n        }\n\n        if (attributes[name]) {\n          itemAttributes = attributes[name];\n        }\n\n        itemAttributes[attr] = value;\n        attributes[name] = itemAttributes;\n        this.setData('data_attributes', attributes);\n      };\n\n      ComponentModel.prototype.setData = function (key, value) {\n        var _ref;\n\n        if (key && this.changeData(key, value)) {\n          return (_ref = this.componentTree) != null ? _ref.dataChanging(this, [key]) : void 0;\n        }\n      };\n\n      ComponentModel.prototype.getData = function (key) {\n        if (key) {\n          return this.dataValues[key];\n        } else {\n          return this.dataValues;\n        }\n      };\n\n      ComponentModel.prototype.changeData = function (name, value) {\n        if (deepEqual(this.dataValues[name], value)) {\n          return false;\n        }\n\n        this.dataValues[name] = value;\n        return true;\n      };\n\n      ComponentModel.prototype.getPluginName = function () {\n        var _ref;\n\n        return (_ref = this.plugin) != null ? _ref.name : void 0;\n      };\n\n      ComponentModel.prototype.setPlugin = function (plugin) {\n        return this.plugin = plugin;\n      };\n\n      ComponentModel.prototype.getPlugin = function (plugin) {\n        return this.plugin;\n      };\n\n      ComponentModel.prototype.getStyle = function (name) {\n        return this.styles[name];\n      };\n\n      ComponentModel.prototype.setStyle = function (name, value) {\n        var style;\n        style = this.template.styles[name];\n\n        if (!style) {\n          return log.warn(\"Unknown style '\" + name + \"' in ComponentModel \" + this.componentName);\n        } else if (!style.validateValue(value)) {\n          return log.warn(\"Invalid value '\" + value + \"' for style '\" + name + \"' in ComponentModel \" + this.componentName);\n        } else {\n          if (this.styles[name] !== value) {\n            this.styles[name] = value;\n\n            if (this.componentTree) {\n              return this.componentTree.htmlChanging(this, 'style', {\n                name: name,\n                value: value\n              });\n            }\n          }\n        }\n      };\n\n      ComponentModel.prototype.style = function (name, value) {\n        console.log(\"ComponentModel#style() is deprecated. Please use #getStyle() and #setStyle().\");\n\n        if (arguments.length === 1) {\n          return this.styles[name];\n        } else {\n          return this.setStyle(name, value);\n        }\n      };\n\n      ComponentModel.prototype.copy = function () {\n        return log.warn(\"ComponentModel#copy() is not implemented yet.\");\n      };\n\n      ComponentModel.prototype.copyWithoutContent = function () {\n        return this.template.createModel();\n      };\n\n      ComponentModel.prototype.destroy = function () {};\n\n      return ComponentModel;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../modules/guid\": 49,\n    \"../modules/logging/assert\": 50,\n    \"../modules/logging/log\": 51,\n    \"../template/directive_collection\": 70,\n    \"./component_container\": 14,\n    \"./component_directive_factory\": 16,\n    \"deep-equal\": 1\n  }],\n  18: [function (require, module, exports) {\n    var $, ComponentModel, assert, config, deepEqual, guid, log, serialization;\n    $ = require('jquery');\n    deepEqual = require('deep-equal');\n    config = require('../configuration/config');\n    guid = require('../modules/guid');\n    log = require('../modules/logging/log');\n    assert = require('../modules/logging/assert');\n    ComponentModel = require('./component_model');\n    serialization = require('../modules/serialization');\n\n    module.exports = function () {\n      ComponentModel.prototype.toJson = function (component) {\n        var json, name;\n\n        if (component == null) {\n          component = this;\n        }\n\n        json = {\n          id: component.id,\n          identifier: component.template.identifier\n        };\n\n        if (!serialization.isEmpty(component.content)) {\n          json.content = serialization.flatCopy(component.content);\n        }\n\n        if (!serialization.isEmpty(component.styles)) {\n          json.styles = serialization.flatCopy(component.styles);\n        }\n\n        if (!serialization.isEmpty(component.dataValues)) {\n          json.data = $.extend(true, {}, component.dataValues);\n        }\n\n        for (name in component.containers) {\n          json.containers || (json.containers = {});\n          json.containers[name] = [];\n        }\n\n        return json;\n      };\n\n      return {\n        fromJson: function fromJson(json, design) {\n          var child, componentArray, containerName, model, name, styleName, template, value, _i, _len, _ref, _ref1, _ref2;\n\n          template = design.get(json.component || json.identifier);\n          assert(template, \"error while deserializing component: unknown template identifier '\" + json.identifier + \"'\");\n          model = new ComponentModel({\n            template: template,\n            id: json.id\n          });\n          _ref = json.content;\n\n          for (name in _ref) {\n            value = _ref[name];\n\n            if (!model.content.hasOwnProperty(name)) {\n              console.log(\"Unknown content found while deserializing \" + model.componentName + \": unknown content '\" + name);\n              continue;\n            } //        assert(model.content.hasOwnProperty(name), \"error while deserializing component \" + model.componentName + \": unknown content '\" + name + \"'\");\n\n\n            if (model.directives.get(name).type === 'image' && typeof value === 'string') {\n              model.content[name] = {\n                url: value\n              };\n            } else {\n              model.content[name] = value;\n            }\n          }\n\n          _ref1 = json.styles;\n\n          for (styleName in _ref1) {\n            value = _ref1[styleName];\n            model.setStyle(styleName, value);\n          }\n\n          if (json.data) {\n            model.data(json.data);\n          }\n\n          _ref2 = json.containers;\n\n          for (containerName in _ref2) {\n            componentArray = _ref2[containerName];\n            assert(model.containers.hasOwnProperty(containerName), \"error while deserializing component: unknown container \" + containerName);\n\n            if (componentArray) {\n              assert($.isArray(componentArray), \"error while deserializing component: container is not array \" + containerName);\n\n              for (_i = 0, _len = componentArray.length; _i < _len; _i++) {\n                child = componentArray[_i];\n                model.append(containerName, this.fromJson(child, design));\n              }\n            }\n          }\n\n          return model;\n        }\n      };\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../modules/guid\": 49,\n    \"../modules/logging/assert\": 50,\n    \"../modules/logging/log\": 51,\n    \"../modules/serialization\": 54,\n    \"./component_model\": 17,\n    \"deep-equal\": 1,\n    \"jquery\": \"jquery\"\n  }],\n  19: [function (require, module, exports) {\n    var $,\n        ComponentArray,\n        ComponentContainer,\n        ComponentModel,\n        ComponentTree,\n        assert,\n        componentModelSerializer,\n        __slice = [].slice;\n    $ = require('jquery');\n    assert = require('../modules/logging/assert');\n    ComponentContainer = require('./component_container');\n    ComponentArray = require('./component_array');\n    ComponentModel = require('./component_model');\n    componentModelSerializer = require('./component_model_serializer');\n\n    module.exports = ComponentTree = function () {\n      function ComponentTree(_arg) {\n        var content, _ref;\n\n        _ref = _arg != null ? _arg : {}, content = _ref.content, this.design = _ref.design;\n        assert(this.design != null, \"Error instantiating ComponentTree: design param is misssing.\");\n        this.componentById = {};\n        this.root = new ComponentContainer({\n          isRoot: true\n        });\n\n        if (content != null) {\n          this.fromJson(content, this.design);\n        }\n\n        this.root.componentTree = this;\n        this.initializeEvents();\n      }\n\n      ComponentTree.prototype.prepend = function (component) {\n        component = this.getComponent(component);\n\n        if (component != null) {\n          this.root.prepend(component);\n        }\n\n        return this;\n      };\n\n      ComponentTree.prototype.append = function (component) {\n        component = this.getComponent(component);\n\n        if (component != null) {\n          this.root.append(component);\n        }\n\n        return this;\n      };\n\n      ComponentTree.prototype.getComponent = function (componentName) {\n        if (typeof componentName === 'string') {\n          return this.createComponent(componentName);\n        } else {\n          return componentName;\n        }\n      };\n\n      ComponentTree.prototype.createComponent = function (componentName) {\n        var template;\n        template = this.getTemplate(componentName);\n\n        if (template) {\n          return template.createModel();\n        }\n      };\n\n      ComponentTree.prototype.getTemplate = function (componentName) {\n        var template;\n        template = this.design.get(componentName);\n        assert(template, \"Could not find template \" + componentName);\n        return template;\n      };\n\n      ComponentTree.prototype.initializeEvents = function () {\n        this.componentAdded = $.Callbacks();\n        this.componentRemoved = $.Callbacks();\n        this.componentMoved = $.Callbacks();\n        this.componentContentChanged = $.Callbacks();\n        this.componentHtmlChanged = $.Callbacks();\n        this.componentSettingsChanged = $.Callbacks();\n        this.componentDataChanged = $.Callbacks();\n        return this.changed = $.Callbacks();\n      };\n\n      ComponentTree.prototype.each = function (callback) {\n        return this.root.each(callback);\n      };\n\n      ComponentTree.prototype.eachContainer = function (callback) {\n        return this.root.eachContainer(callback);\n      };\n\n      ComponentTree.prototype.first = function () {\n        return this.root.first;\n      };\n\n      ComponentTree.prototype.getAllComponents = function () {\n        if (this._componentsArrayCache) {\n          return this._componentsArrayCache;\n        }\n\n        this._componentsArrayCache = [];\n        this.each(function (_this) {\n          return function (c) {\n            return _this._componentsArrayCache.push(c);\n          };\n        }(this));\n        return this._componentsArrayCache;\n      };\n\n      ComponentTree.prototype.eq = function (index) {\n        return this.getAllComponents()[index];\n      };\n\n      ComponentTree.prototype.indexOf = function (component) {\n        return this.getAllComponents().indexOf(component);\n      };\n\n      ComponentTree.prototype.all = function (callback) {\n        return this.root.all(callback);\n      };\n\n      ComponentTree.prototype.find = function (search) {\n        var res;\n\n        if (typeof search === 'string') {\n          res = [];\n          this.each(function (component) {\n            if (component.componentName === search) {\n              return res.push(component);\n            }\n          });\n          return new ComponentArray(res);\n        } else {\n          return new ComponentArray();\n        }\n      };\n\n      ComponentTree.prototype.findById = function (id) {\n        return this.componentById[id];\n      };\n\n      ComponentTree.prototype.detach = function () {\n        var oldRoot;\n        this.root.componentTree = void 0;\n        this.each(function (_this) {\n          return function (component) {\n            component.componentTree = void 0;\n            return _this.componentById[component.id] = void 0;\n          };\n        }(this));\n        oldRoot = this.root;\n        this.root = new ComponentContainer({\n          isRoot: true\n        });\n        return oldRoot;\n      };\n\n      ComponentTree.prototype.setMainView = function (_arg) {\n        var renderer;\n        renderer = _arg.renderer;\n        assert(renderer, 'componentTree.setMainView: view does not have an initialized renderer');\n        assert(renderer.componentTree === this, 'componentTree.setMainView: Cannot set renderer from different componentTree');\n        return this.mainRenderer = renderer;\n      };\n\n      ComponentTree.prototype.getMainComponentView = function (componentId) {\n        var _ref;\n\n        return (_ref = this.mainRenderer) != null ? _ref.getComponentViewById(componentId) : void 0;\n      };\n\n      ComponentTree.prototype.isDropAllowed = function (component, targetObj) {\n        var componentView, containerName, target, targetComponent;\n        target = targetObj.target, componentView = targetObj.componentView, containerName = targetObj.containerName;\n\n        if (target === 'root') {\n          return this.root.isAllowedAsChild(component);\n        } else if (target === 'component') {\n          targetComponent = componentView.model;\n          return targetComponent.isAllowedAsSibling(component);\n        } else if (target === 'container') {\n          targetComponent = componentView.model;\n          return targetComponent.isAllowedAsChild(containerName, component);\n        }\n      };\n\n      ComponentTree.prototype.print = function () {\n        var addLine, output, _walker;\n\n        output = 'ComponentTree\\n-----------\\n';\n\n        addLine = function addLine(text, indentation) {\n          if (indentation == null) {\n            indentation = 0;\n          }\n\n          return output += \"\" + Array(indentation + 1).join(\" \") + text + \"\\n\";\n        };\n\n        _walker = function walker(component, indentation) {\n          var componentContainer, name, template, _ref;\n\n          if (indentation == null) {\n            indentation = 0;\n          }\n\n          template = component.template;\n          addLine(\"- \" + template.label + \" (\" + template.name + \")\", indentation);\n          _ref = component.containers;\n\n          for (name in _ref) {\n            componentContainer = _ref[name];\n            addLine(\"\" + name + \":\", indentation + 2);\n\n            if (componentContainer.first) {\n              _walker(componentContainer.first, indentation + 4);\n            }\n          }\n\n          if (component.next) {\n            return _walker(component.next, indentation);\n          }\n        };\n\n        if (this.root.first) {\n          _walker(this.root.first);\n        }\n\n        return output;\n      };\n\n      ComponentTree.prototype.attachingComponent = function (component, attachComponentFunc) {\n        if (component.componentTree === this) {\n          attachComponentFunc();\n          delete this._componentsArrayCache;\n          return this.fireEvent('componentMoved', component);\n        } else {\n          if (component.componentTree != null) {\n            component.remove();\n          }\n\n          component.descendantsAndSelf(function (_this) {\n            return function (descendant) {\n              descendant.componentTree = _this;\n              return _this.componentById[descendant.id] = component;\n            };\n          }(this));\n          attachComponentFunc();\n          delete this._componentsArrayCache;\n          return this.fireEvent('componentAdded', component);\n        }\n      };\n\n      ComponentTree.prototype.fireEvent = function () {\n        var args, event;\n        event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        this[event].fire.apply(void 0, args);\n        return this.changed.fire();\n      };\n\n      ComponentTree.prototype.detachingComponent = function (component, detachComponentFunc) {\n        assert(component.componentTree === this, 'cannot remove component from another ComponentTree');\n        component.descendantsAndSelf(function (_this) {\n          return function (descendant) {\n            descendant.componentTree = void 0;\n            return _this.componentById[descendant.id] = void 0;\n          };\n        }(this));\n        detachComponentFunc();\n        delete this._componentsArrayCache;\n        return this.fireEvent('componentRemoved', component);\n      };\n\n      ComponentTree.prototype.contentChanging = function (component, directiveName) {\n        return this.fireEvent('componentContentChanged', component, directiveName);\n      };\n\n      ComponentTree.prototype.htmlChanging = function (component) {\n        return this.fireEvent('componentHtmlChanged', component);\n      };\n\n      ComponentTree.prototype.dataChanging = function (component, changedProperties) {\n        return this.fireEvent('componentDataChanged', component, changedProperties);\n      };\n\n      ComponentTree.prototype.printJson = function () {\n        return words.readableJson(this.toJson());\n      };\n\n      ComponentTree.prototype.serialize = function (startComponent, excludeId) {\n        var componentToData, data, _walker2;\n\n        data = {};\n        data['content'] = [];\n        data['design'] = {\n          name: this.design.name,\n          version: this.design.version\n        };\n\n        componentToData = function componentToData(component, level, containerArray) {\n          var componentData;\n          componentData = component.toJson();\n\n          if (excludeId) {\n            delete componentData.id;\n          }\n\n          containerArray.push(componentData);\n          return componentData;\n        };\n\n        _walker2 = function walker(component, level, dataObj) {\n          var componentContainer, componentData, containerArray, name, _ref;\n\n          componentData = componentToData(component, level, dataObj);\n          _ref = component.containers;\n\n          for (name in _ref) {\n            componentContainer = _ref[name];\n            containerArray = componentData.containers[componentContainer.name] = [];\n\n            if (componentContainer.first) {\n              _walker2(componentContainer.first, level + 1, containerArray);\n            }\n          }\n\n          if (component.next) {\n            return _walker2(component.next, level, dataObj);\n          }\n        };\n\n        if (!startComponent) {\n          startComponent = this.root.first;\n        }\n\n        if (startComponent) {\n          _walker2(startComponent, 0, data['content']);\n        }\n\n        return data;\n      };\n\n      ComponentTree.prototype.componentsFromList = function (data, design) {\n        var created = [];\n\n        for (var i = 0, c = data.length; i < c; i++) {\n          var componentData = data[i];\n          created.push(componentModelSerializer.fromJson(componentData, design));\n        }\n\n        return created;\n      };\n\n      ComponentTree.prototype.fromData = function (data, design, silent) {\n        var component,\n            componentData,\n            _i,\n            _len,\n            _ref,\n            created = [];\n\n        if (silent == null) {\n          silent = true;\n        }\n\n        if (design != null) {\n          assert(this.design == null || design.equals(this.design), 'Error loading data. Specified design is different from current componentTree design');\n        } else {\n          design = this.design;\n        }\n\n        if (silent) {\n          this.root.componentTree = void 0;\n        }\n\n        if (data.content) {\n          _ref = data.content;\n\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            componentData = _ref[_i];\n            component = componentModelSerializer.fromJson(componentData, design);\n            this.root.append(component);\n            created.push(component);\n          }\n        }\n\n        if (silent) {\n          this.root.componentTree = this;\n          return this.root.each(function (_this) {\n            return function (component) {\n              component.componentTree = _this;\n              return _this.componentById[component.id] = component;\n            };\n          }(this));\n        }\n\n        return created;\n      };\n\n      ComponentTree.prototype.addData = function (data, design) {\n        return this.fromData(data, design, false);\n      };\n\n      ComponentTree.prototype.addDataWithAnimation = function (data, delay) {\n        var componentData, timeout, _fn, _i, _len, _ref, _results;\n\n        if (delay == null) {\n          delay = 200;\n        }\n\n        assert(this.design != null, 'Error adding data. ComponentTree has no design');\n        timeout = Number(delay);\n        _ref = data.content;\n\n        _fn = function (_this) {\n          return function () {\n            var content;\n            content = componentData;\n            return setTimeout(function () {\n              var component;\n              component = componentModelSerializer.fromJson(content, _this.design);\n              return _this.root.append(component);\n            }, timeout);\n          };\n        }(this);\n\n        _results = [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          componentData = _ref[_i];\n\n          _fn();\n\n          _results.push(timeout += Number(delay));\n        }\n\n        return _results;\n      };\n\n      ComponentTree.prototype.toData = function () {\n        return this.serialize();\n      };\n\n      ComponentTree.prototype.fromJson = function () {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return this.fromData.apply(this, args);\n      };\n\n      ComponentTree.prototype.toJson = function () {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return this.toData.apply(this, args);\n      };\n\n      return ComponentTree;\n    }();\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"./component_array\": 13,\n    \"./component_container\": 14,\n    \"./component_model\": 17,\n    \"./component_model_serializer\": 18,\n    \"jquery\": \"jquery\"\n  }],\n  20: [function (require, module, exports) {\n    var ComponentDirective,\n        EditableDirective,\n        assert,\n        words,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    assert = require('../modules/logging/assert');\n    words = require('../modules/words');\n    ComponentDirective = require('./component_directive');\n\n    module.exports = EditableDirective = function (_super) {\n      __extends(EditableDirective, _super);\n\n      function EditableDirective() {\n        return EditableDirective.__super__.constructor.apply(this, arguments);\n      }\n\n      EditableDirective.prototype.isEditable = true;\n\n      EditableDirective.prototype.getText = function () {\n        var content;\n        content = this.getContent();\n\n        if (!content) {\n          return '';\n        }\n\n        return words.extractTextFromHtml(content);\n      };\n\n      return EditableDirective;\n    }(ComponentDirective);\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"../modules/words\": 55,\n    \"./component_directive\": 15\n  }],\n  21: [function (require, module, exports) {\n    var $,\n        FieldExtractor,\n        assert,\n        _,\n        __bind = function __bind(fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    };\n\n    assert = require('../modules/logging/assert');\n    _ = require('underscore');\n    $ = require('jquery');\n\n    module.exports = FieldExtractor = function () {\n      function FieldExtractor(componentTree, metadataConfig) {\n        this.componentTree = componentTree;\n        this.metadataConfig = metadataConfig;\n        this.onComponentChange = __bind(this.onComponentChange, this);\n        this.extractAll = __bind(this.extractAll, this);\n        this.onTreeChange = __bind(this.onTreeChange, this);\n        this.fields = {};\n        this.initEvents();\n        this.extractAll();\n        this.setupListeners();\n      }\n\n      FieldExtractor.prototype.setupListeners = function () {\n        this.componentTree.componentAdded.add(this.onTreeChange);\n        this.componentTree.componentRemoved.add(this.onTreeChange);\n        this.componentTree.componentMoved.add(this.onTreeChange);\n        return this.componentTree.componentContentChanged.add(this.onComponentChange);\n      };\n\n      FieldExtractor.prototype.onTreeChange = function (componentModel) {\n        var changedFields, componentName, field, fieldName, fieldsHaveChanged, fieldsToExtract, _ref;\n\n        componentName = componentModel.componentName;\n        fieldsToExtract = this.metadataConfig.getComponentMap()[componentName];\n        changedFields = {};\n        fieldsHaveChanged = false;\n        _ref = this.extractFields(fieldsToExtract);\n\n        for (fieldName in _ref) {\n          field = _ref[fieldName];\n\n          if (!!_.isEqual(this.fields[fieldName], field)) {\n            continue;\n          }\n\n          fieldsHaveChanged = true;\n          changedFields[fieldName] = this.fields[fieldName] = field;\n        }\n\n        if (!fieldsHaveChanged) {\n          return;\n        }\n\n        return this.fieldsChanged.fire(changedFields, this.fields);\n      };\n\n      FieldExtractor.prototype.extractAll = function () {\n        var allFields;\n        allFields = this.metadataConfig.getListOfFields();\n        this.fields = this.extractFields(allFields);\n        this.fieldsChanged.fire(this.fields, this.fields);\n        return this.fields;\n      };\n\n      FieldExtractor.prototype.extractFields = function (fieldsToExtract) {\n        var fields, fieldsByComponentToExtract;\n        fields = {};\n        fieldsByComponentToExtract = {};\n\n        _(this.metadataConfig.getComponentMap()).forEach(function (fieldsByComponent, componentName) {\n          return fieldsByComponentToExtract[componentName] = _.intersection(fieldsByComponent, fieldsToExtract);\n        });\n\n        this.componentTree.each(function (_this) {\n          return function (componentModel) {\n            var componentName, newFields, _ref;\n\n            componentName = componentModel.componentName;\n\n            if (!((_ref = fieldsByComponentToExtract[componentName]) != null ? _ref.length : void 0)) {\n              return;\n            }\n\n            newFields = _this.extractFieldsFromComponent(componentModel, fieldsByComponentToExtract[componentName]);\n            return _(newFields).forEach(function (field, fieldName) {\n              _(fieldsByComponentToExtract).forEach(function (fieldsByComponent, componentName) {\n                return fieldsByComponentToExtract[componentName] = _.without(fieldsByComponent, fieldName);\n              });\n\n              return fields[fieldName] = field;\n            });\n          };\n        }(this));\n        return fields;\n      };\n\n      FieldExtractor.prototype.extractFieldsFromComponent = function (componentModel, fieldsToExtract) {\n        var componentName, fields;\n        fields = {};\n        componentName = componentModel.componentName;\n        fieldsToExtract.forEach(function (_this) {\n          return function (fieldToExtract) {\n            var directives;\n            directives = _this.metadataConfig.getDirectivesByComponentAndField(componentName, fieldToExtract);\n            return directives.forEach(function (directiveName) {\n              var directiveModel, field;\n\n              if (fields[fieldToExtract]) {\n                return;\n              }\n\n              directiveModel = componentModel.directives.get(directiveName);\n\n              if (directiveModel.isEmpty()) {\n                return;\n              }\n\n              field = _this.extractFieldFromDirective(directiveModel, fieldToExtract);\n              return fields[fieldToExtract] = field;\n            });\n          };\n        }(this));\n        return fields;\n      };\n\n      FieldExtractor.prototype.onComponentChange = function (componentModel, directiveName) {\n        var changedFields, componentName, directiveModel, fieldNames, fieldsThatNeedFullExtraction;\n        componentName = componentModel.componentName;\n        fieldNames = this.metadataConfig.getFieldsBySource(componentName, directiveName);\n        changedFields = {};\n        fieldsThatNeedFullExtraction = [];\n        directiveModel = componentModel.directives.get(directiveName);\n\n        _(fieldNames).forEach(function (_this) {\n          return function (fieldName) {\n            var currentComponentIndex, field, fieldIsEmpty, fieldWasEmpty, fieldWasFilledFromThisComponent, previousComponentIndex, _ref;\n\n            field = directiveModel.isEmpty() ? void 0 : _this.extractFieldFromDirective(directiveModel, fieldName);\n            fieldIsEmpty = field == null;\n            fieldWasEmpty = _this.fields[fieldName] == null;\n            fieldWasFilledFromThisComponent = ((_ref = _this.fields[fieldName]) != null ? _ref.component.id : void 0) === componentModel.id;\n\n            if (fieldIsEmpty && fieldWasFilledFromThisComponent) {\n              fieldsThatNeedFullExtraction.push(fieldName);\n              return _this.fields[fieldName] = changedFields[fieldName] = void 0;\n            } else if ((fieldWasEmpty || fieldWasFilledFromThisComponent) && !_.isEqual(_this.fields[fieldName], field)) {\n              return _this.fields[fieldName] = changedFields[fieldName] = field;\n            } else if (!fieldIsEmpty && !fieldWasFilledFromThisComponent) {\n              previousComponentIndex = componentModel.componentTree.indexOf(_this.fields[fieldName].component);\n              currentComponentIndex = componentModel.componentTree.indexOf(componentModel);\n\n              if (previousComponentIndex > currentComponentIndex) {\n                return _this.fields[fieldName] = changedFields[fieldName] = field;\n              }\n            }\n          };\n        }(this));\n\n        if (fieldsThatNeedFullExtraction.length) {\n          _(this.extractFields(fieldsThatNeedFullExtraction)).forEach(function (_this) {\n            return function (field, fieldName) {\n              return _this.fields[fieldName] = changedFields[fieldName] = field;\n            };\n          }(this));\n        }\n\n        if (_(changedFields).size()) {\n          return this.fieldsChanged.fire(changedFields, this.fields);\n        }\n      };\n\n      FieldExtractor.prototype.initEvents = function () {\n        return this.fieldsChanged = $.Callbacks();\n      };\n\n      FieldExtractor.prototype.extractFieldFromDirective = function (directiveModel, fieldToExtract) {\n        var type, value;\n        type = this.metadataConfig.getConfigMap()[fieldToExtract].type;\n\n        if (type === 'text') {\n          return value = this.extractTextField(directiveModel);\n        } else if (type === 'image') {\n          if (!directiveModel.isBase64()) {\n            return value = this.extractImageField(directiveModel);\n          }\n        } else {\n          return assert(false, \"Unknown template type \" + type);\n        }\n      };\n\n      FieldExtractor.prototype.extractTextField = function (directiveModel) {\n        var content;\n        content = directiveModel.getContent();\n        return {\n          content: content,\n          component: directiveModel.component,\n          directiveName: directiveModel.name,\n          text: directiveModel.getText(),\n          type: 'text'\n        };\n      };\n\n      FieldExtractor.prototype.extractImageField = function (imageDirective) {\n        var _ref, _ref1;\n\n        return {\n          component: imageDirective.component,\n          directiveName: imageDirective.name,\n          type: 'image',\n          image: {\n            originalUrl: imageDirective.getOriginalUrl(),\n            url: imageDirective.getImageUrl(),\n            width: (_ref = imageDirective.getOriginalImageDimensions()) != null ? _ref.width : void 0,\n            height: (_ref1 = imageDirective.getOriginalImageDimensions()) != null ? _ref1.height : void 0,\n            mimeType: imageDirective.getMimeType(),\n            imageService: imageDirective.getImageServiceName()\n          }\n        };\n      };\n\n      FieldExtractor.prototype.getFields = function () {\n        return this.fields;\n      };\n\n      return FieldExtractor;\n    }();\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"jquery\": \"jquery\",\n    \"underscore\": 10\n  }],\n  22: [function (require, module, exports) {\n    var ComponentDirective,\n        HtmlDirective,\n        assert,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    assert = require('../modules/logging/assert');\n    ComponentDirective = require('./component_directive');\n\n    module.exports = HtmlDirective = function (_super) {\n      __extends(HtmlDirective, _super);\n\n      function HtmlDirective() {\n        return HtmlDirective.__super__.constructor.apply(this, arguments);\n      }\n\n      HtmlDirective.prototype.isHtml = true;\n\n      HtmlDirective.prototype.setEmbedHandler = function (embedHandlerName) {\n        return this.setData('_embedHandler', embedHandlerName);\n      };\n\n      HtmlDirective.prototype.getEmbedHandler = function () {\n        return this.getData('_embedHandler');\n      };\n\n      return HtmlDirective;\n    }(ComponentDirective);\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"./component_directive\": 15\n  }],\n  23: [function (require, module, exports) {\n    var ComponentDirective,\n        ImageDirective,\n        assert,\n        imageService,\n        _,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    _ = require('underscore');\n    assert = require('../modules/logging/assert');\n    imageService = require('../image_services/image_service');\n    ComponentDirective = require('./component_directive');\n\n    module.exports = ImageDirective = function (_super) {\n      __extends(ImageDirective, _super);\n\n      function ImageDirective() {\n        return ImageDirective.__super__.constructor.apply(this, arguments);\n      }\n\n      ImageDirective.prototype.isImage = true;\n\n      ImageDirective.prototype.setContent = function (value) {\n        return this.setImageUrl(value);\n      };\n\n      ImageDirective.prototype.getContent = function () {\n        return this.getImageUrl();\n      };\n\n      ImageDirective.prototype.copyTo = function (otherDirective) {\n        otherDirective.setImageUrl(this.getOriginalUrl());\n        otherDirective.setOriginalImageDimensions(this.getOriginalImageDimensions());\n        return otherDirective.setMimeType(this.getMimeType());\n      };\n\n      ImageDirective.prototype.isBackgroundImage = function (directive) {\n        return this.templateDirective.getTagName() !== 'img';\n      };\n\n      ImageDirective.prototype.isInlineImage = function (directive) {\n        return this.templateDirective.getTagName() === 'img';\n      };\n\n      ImageDirective.prototype.isBase64 = function () {\n        return !!this.base64Image;\n      };\n\n      ImageDirective.prototype.setBase64Image = function (base64String) {\n        this.base64Image = base64String;\n\n        if (this.component.componentTree) {\n          return this.component.componentTree.contentChanging(this.component, this.name);\n        }\n      };\n\n      ImageDirective.prototype.setImageUrl = function (value) {\n        var _base, _name;\n\n        if ((_base = this.component.content)[_name = this.name] == null) {\n          _base[_name] = {};\n        }\n\n        this.component.content[this.name].url = value;\n        this.resetCrop();\n        this.base64Image = void 0;\n        return this.processImageUrl(value);\n      };\n\n      ImageDirective.prototype.getImageUrl = function () {\n        var image;\n        image = this.component.content[this.name];\n\n        if (image) {\n          return image.url;\n        } else {\n          return void 0;\n        }\n      };\n\n      ImageDirective.prototype.getImageObject = function () {\n        return this.component.content[this.name];\n      };\n\n      ImageDirective.prototype.getOriginalUrl = function () {\n        var _ref;\n\n        return ((_ref = this.component.content[this.name]) != null ? _ref.originalUrl : void 0) || this.getImageUrl();\n      };\n\n      ImageDirective.prototype.setCrop = function (crop) {\n        var currentValue, height, name, width, x, y;\n        currentValue = this.component.content[this.name];\n\n        if ((currentValue != null ? currentValue.url : void 0) == null) {\n          return;\n        }\n\n        if (crop) {\n          x = crop.x, y = crop.y, width = crop.width, height = crop.height, name = crop.name;\n          currentValue.crop = {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            name: name\n          };\n        } else {\n          delete currentValue.crop;\n        }\n\n        this.processImageUrl(currentValue.originalUrl || currentValue.url);\n\n        if (this.component.componentTree) {\n          return this.component.componentTree.contentChanging(this.component, this.name);\n        }\n      };\n\n      ImageDirective.prototype.getCrop = function () {\n        return this.component.content[this.name].crop;\n      };\n\n      ImageDirective.prototype.setOriginalImageDimensions = function (_arg) {\n        var content, height, width;\n        width = _arg.width, height = _arg.height;\n        content = this.component.content[this.name];\n        content.width = width;\n        return content.height = height;\n      };\n\n      ImageDirective.prototype.getOriginalImageDimensions = function () {\n        var content;\n        content = this.component.content[this.name];\n        return {\n          width: content != null ? content.width : void 0,\n          height: content != null ? content.height : void 0\n        };\n      };\n\n      ImageDirective.prototype.setMimeType = function (mimeType) {\n        var content, _base, _name;\n\n        if ((_base = this.component.content)[_name = this.name] == null) {\n          _base[_name] = {};\n        }\n\n        content = this.component.content[this.name];\n        return content.mimeType = mimeType;\n      };\n\n      ImageDirective.prototype.getMimeType = function () {\n        var content;\n        content = this.component.content[this.name];\n        return content != null ? content.mimeType : void 0;\n      };\n\n      ImageDirective.prototype.resetCrop = function () {\n        var currentValue;\n        currentValue = this.component.content[this.name];\n\n        if (currentValue != null) {\n          return currentValue.crop = null;\n        }\n      };\n\n      ImageDirective.prototype.setImageService = function (imageServiceName) {\n        var imageUrl;\n        assert(imageService.has(imageServiceName), \"Error: could not load image service \" + imageServiceName);\n        imageUrl = this.getImageUrl();\n        return this.component.content[this.name] = {\n          url: imageUrl,\n          imageService: imageServiceName || null\n        };\n      };\n\n      ImageDirective.prototype.getImageServiceName = function () {\n        return this.getImageService().name;\n      };\n\n      ImageDirective.prototype.hasDefaultImageService = function () {\n        return this.getImageServiceName() === 'default';\n      };\n\n      ImageDirective.prototype.getImageService = function () {\n        var serviceName, _ref;\n\n        serviceName = (_ref = this.component.content[this.name]) != null ? _ref.imageService : void 0;\n        return imageService.get(serviceName || void 0);\n      };\n\n      ImageDirective.prototype.processImageUrl = function (url) {\n        var imgObj, imgService;\n\n        if (!this.hasDefaultImageService()) {\n          imgService = this.getImageService();\n          imgObj = this.getImageObject();\n          imgObj.url = imgService.getUrl(url, {\n            crop: imgObj.crop\n          });\n          return imgObj.originalUrl = url;\n        }\n      };\n\n      ImageDirective.prototype.setOrigins = function (origins) {\n        var identifier, name, origin, _base, _name;\n\n        if ((_base = this.component.content)[_name = this.name] == null) {\n          _base[_name] = {};\n        }\n\n        if (!_.isArray(origins)) {\n          origins = [origins];\n        }\n\n        origins = function () {\n          var _i, _len, _results;\n\n          _results = [];\n\n          for (_i = 0, _len = origins.length; _i < _len; _i++) {\n            origin = origins[_i];\n            assert((origin != null ? origin.name : void 0) && origin.identifier, \"Error: setOrigins must be called with an array or a hash with name and identifier keys\");\n\n            _results.push((name = origin.name, identifier = origin.identifier, origin));\n          }\n\n          return _results;\n        }();\n\n        return this.component.content[this.name].origins = origins;\n      };\n\n      ImageDirective.prototype.getOrigins = function () {\n        var _ref;\n\n        return (_ref = this.component.content[this.name]) != null ? _ref.origins : void 0;\n      };\n\n      return ImageDirective;\n    }(ComponentDirective);\n  }, {\n    \"../image_services/image_service\": 37,\n    \"../modules/logging/assert\": 50,\n    \"./component_directive\": 15,\n    \"underscore\": 10\n  }],\n  24: [function (require, module, exports) {\n    var ComponentDirective,\n        LinkDirective,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    ComponentDirective = require('./component_directive');\n\n    module.exports = LinkDirective = function (_super) {\n      __extends(LinkDirective, _super);\n\n      function LinkDirective() {\n        return LinkDirective.__super__.constructor.apply(this, arguments);\n      }\n\n      LinkDirective.prototype.isLink = true;\n      return LinkDirective;\n    }(ComponentDirective);\n  }, {\n    \"./component_directive\": 15\n  }],\n  25: [function (require, module, exports) {\n    module.exports = function (config) {\n      var name, prefix, value, _ref;\n\n      config.docDirective = {};\n      config.templateAttrLookup = {};\n      _ref = config.directives;\n\n      for (name in _ref) {\n        value = _ref[name];\n        prefix = config.attributePrefix ? \"\" + config.attributePrefix + \"-\" : '';\n        value.renderedAttr = \"\" + prefix + value.attr;\n        config.docDirective[name] = value.renderedAttr;\n        config.templateAttrLookup[value.attr] = name;\n      }\n\n      return config;\n    };\n  }, {}],\n  26: [function (require, module, exports) {\n    var augmentConfig;\n    augmentConfig = require('./augment_config');\n    module.exports = augmentConfig({\n      loadResources: true,\n      ignoreInteraction: '.ld-control',\n      livingdocsCssFile: '/assets/css/livingdocs.css',\n      wordSeparators: \"./\\\\()\\\"':,.;<>~!#%^&*|+=[]{}`~?\",\n      singleLineBreak: /^<br\\s*\\/?>\\s*$/,\n      attributePrefix: 'data',\n      editable: {\n        allowNewline: true,\n        changeDelay: 0,\n        browserSpellcheck: false,\n        mouseMoveSelectionChanges: false\n      },\n      css: {\n        section: 'doc-section',\n        component: 'doc-component',\n        editable: 'doc-editable',\n        noPlaceholder: 'doc-no-placeholder',\n        emptyImage: 'doc-image-empty',\n        \"interface\": 'doc-ui',\n        componentHighlight: 'doc-component-highlight',\n        containerHighlight: 'doc-container-highlight',\n        dragged: 'doc-dragged',\n        draggedPlaceholder: 'doc-dragged-placeholder',\n        draggedPlaceholderCounter: 'doc-drag-counter',\n        dragBlocker: 'doc-drag-blocker',\n        dropMarker: 'doc-drop-marker',\n        beforeDrop: 'doc-before-drop',\n        noDrop: 'doc-drag-no-drop',\n        afterDrop: 'doc-after-drop',\n        longpressIndicator: 'doc-longpress-indicator',\n        preventSelection: 'doc-no-selection',\n        maximizedContainer: 'doc-js-maximized-container',\n        interactionBlocker: 'doc-interaction-blocker'\n      },\n      attr: {\n        template: 'data-doc-template',\n        placeholder: 'data-doc-placeholder'\n      },\n      directives: {\n        container: {\n          attr: 'doc-container',\n          renderedAttr: 'calculated in augment_config',\n          overwritesContent: true\n        },\n        embeditem: {\n          attr: 'doc-embeditem',\n          renderedAttr: 'calculated in augment_config',\n          overwritesContent: true\n        },\n        editable: {\n          attr: 'doc-editable',\n          renderedAttr: 'calculated in augment_config',\n          overwritesContent: true\n        },\n        html: {\n          attr: 'doc-html',\n          renderedAttr: 'calculated in augment_config',\n          overwritesContent: true\n        },\n        image: {\n          attr: 'doc-image',\n          renderedAttr: 'calculated in augment_config'\n        },\n        link: {\n          attr: 'doc-link',\n          renderedAttr: 'calculated in augment_config'\n        },\n        optional: {\n          attr: 'doc-optional',\n          renderedAttr: 'calculated in augment_config',\n          modifies: ['editable']\n        }\n      },\n      animations: {\n        optionals: {\n          show: function show($elem) {\n            return $elem.slideDown(250);\n          },\n          hide: function hide($elem) {\n            return $elem.slideUp(250);\n          }\n        }\n      },\n      imagePlaceholder: 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"620\" height=\"350\" viewBox=\"0 0 620 350\" preserveAspectRatio=\"none\"><rect width=\"620\" height=\"350\" fill=\"#D4D4CE\"/><line x1=\"0\" y1=\"0\" x2=\"620\" y2=\"350\" style=\"stroke:#ffffff;stroke-width:2\"/><line x1=\"620\" y1=\"0\" x2=\"0\" y2=\"350\" style=\"stroke:#ffffff;stroke-width:2\"/></svg>'),\n      imageServices: {\n        'resrc.it': {\n          quality: 75,\n          host: 'https://app.resrc.it'\n        }\n      }\n    });\n  }, {\n    \"./augment_config\": 25\n  }],\n  27: [function (require, module, exports) {\n    var MetadataConfig;\n\n    module.exports = MetadataConfig = function () {\n      function MetadataConfig(config) {\n        this.fieldsArray = [];\n        this.editableFieldsArray = [];\n        this.fieldMap = {};\n        this.configMap = {};\n        this.componentDirectiveMap = {};\n        this.componentMap = {};\n\n        if (config != null && config.length) {\n          this.parse(config);\n        }\n      }\n\n      MetadataConfig.prototype.parse = function (config) {\n        var componentName, directive, fieldItemConfig, fieldName, isEditable, pattern, type, _base, _i, _len, _results;\n\n        _results = [];\n\n        for (_i = 0, _len = config.length; _i < _len; _i++) {\n          fieldItemConfig = config[_i];\n          fieldName = fieldItemConfig.identifier;\n          type = fieldItemConfig.type;\n          this.fieldsArray.push(fieldName);\n          this.configMap[fieldName] = fieldItemConfig;\n\n          if ((_base = this.fieldMap)[fieldName] == null) {\n            _base[fieldName] = {};\n          }\n\n          isEditable = fieldItemConfig.isEditable != null ? !!fieldItemConfig.isEditable : true;\n\n          if (isEditable) {\n            this.editableFieldsArray.push(fieldName);\n          }\n\n          _results.push(function () {\n            var _base1, _base2, _base3, _base4, _j, _len1, _ref, _ref1, _results1;\n\n            _ref = fieldItemConfig.matches;\n            _results1 = [];\n\n            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n              pattern = _ref[_j];\n              _ref1 = pattern.split('.'), componentName = _ref1[0], directive = _ref1[1];\n\n              if ((_base1 = this.componentDirectiveMap)[componentName] == null) {\n                _base1[componentName] = {};\n              }\n\n              if ((_base2 = this.componentDirectiveMap[componentName])[directive] == null) {\n                _base2[directive] = [];\n              }\n\n              this.componentDirectiveMap[componentName][directive].push(fieldName);\n\n              if ((_base3 = this.componentMap)[componentName] == null) {\n                _base3[componentName] = [];\n              }\n\n              this.componentMap[componentName].push(fieldName);\n\n              if ((_base4 = this.fieldMap[fieldName])[componentName] == null) {\n                _base4[componentName] = [];\n              }\n\n              _results1.push(this.fieldMap[fieldName][componentName].push(directive));\n            }\n\n            return _results1;\n          }.call(this));\n        }\n\n        return _results;\n      };\n\n      MetadataConfig.prototype.getListOfEditableFields = function () {\n        return this.editableFieldsArray;\n      };\n\n      MetadataConfig.prototype.getListOfFields = function () {\n        return this.fieldsArray;\n      };\n\n      MetadataConfig.prototype.getConfigMap = function () {\n        return this.configMap;\n      };\n\n      MetadataConfig.prototype.getComponentMap = function () {\n        return this.componentMap;\n      };\n\n      MetadataConfig.prototype.getFieldsBySource = function (componentName, directive) {\n        var _ref;\n\n        return ((_ref = this.componentDirectiveMap[componentName]) != null ? _ref[directive] : void 0) || [];\n      };\n\n      MetadataConfig.prototype.getDirectivesByComponentAndField = function (componentName, fieldName) {\n        return this.fieldMap[fieldName][componentName];\n      };\n\n      return MetadataConfig;\n    }();\n  }, {}],\n  28: [function (require, module, exports) {\n    var CssModificatorProperty, assert, log, words;\n    log = require('../modules/logging/log');\n    assert = require('../modules/logging/assert');\n    words = require('../modules/words');\n\n    module.exports = CssModificatorProperty = function () {\n      function CssModificatorProperty(_arg) {\n        var label, options, value;\n        this.name = _arg.name, label = _arg.label, this.type = _arg.type, value = _arg.value, options = _arg.options;\n        this.label = label || words.humanize(this.name);\n\n        switch (this.type) {\n          case 'option':\n            assert(value, \"TemplateStyle error: no 'value' provided\");\n            this.value = value;\n            break;\n\n          case 'select':\n            assert(options, \"TemplateStyle error: no 'options' provided\");\n            this.options = options;\n            break;\n\n          case 'text':\n            assert(value, \"TemplateStyle error: no 'value' provided\");\n            this.value = value;\n            break;\n\n          default:\n            log.error(\"TemplateStyle error: unknown type '\" + this.type + \"'\");\n        }\n      }\n\n      CssModificatorProperty.prototype.cssClassChanges = function (value, currentClasses) {\n        if (this.validateValue(value)) {\n          if (this.type === 'option') {\n            return {\n              remove: !value ? [this.value] : void 0,\n              add: value\n            };\n          } else if (this.type === 'select') {\n            return {\n              remove: this.otherClasses(value),\n              add: value\n            };\n          } else if (this.type === 'text') {\n            // todo(Marcus) \n            var current = currentClasses ? currentClasses.split(' ') : [];\n            var remove = [];\n\n            for (var i in current) {\n              if (current[i].indexOf('doc-') === 0 || current[i].indexOf('js-') === 0) {\n                continue;\n              }\n\n              remove.push(current[i]);\n            }\n\n            return {\n              remove: remove,\n              add: value\n            };\n          }\n        } else {\n          if (this.type === 'option') {\n            return {\n              remove: currentValue,\n              add: void 0\n            };\n          } else if (this.type === 'select') {\n            return {\n              remove: this.otherClasses(void 0),\n              add: void 0\n            };\n          }\n        }\n      };\n\n      CssModificatorProperty.prototype.validateValue = function (value) {\n        if (!value) {\n          return true;\n        } else if (this.type === 'option') {\n          return value === this.value;\n        } else if (this.type === 'select') {\n          if (this.containsOption(value)) {\n            return true;\n          }\n\n          if (value.indexOf(' ') >= 0) {\n            var allStyles = value.split(' ');\n\n            for (var s in allStyles) {\n              if (this.containsOption(allStyles[s])) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        } else if (this.type === 'text') {\n          return true;\n        } else {\n          return log.warn(\"Not implemented: CssModificatorProperty#validateValue() for type \" + this.type);\n        }\n      };\n\n      CssModificatorProperty.prototype.containsOption = function (value) {\n        var option, _i, _len, _ref;\n\n        _ref = this.options;\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          option = _ref[_i];\n\n          if (value === option.value) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      CssModificatorProperty.prototype.otherOptions = function (value) {\n        var option, others, _i, _len, _ref;\n\n        others = [];\n        _ref = this.options;\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          option = _ref[_i];\n\n          if (option.value !== value) {\n            others.push(option);\n          }\n        }\n\n        return others;\n      };\n\n      CssModificatorProperty.prototype.otherClasses = function (value) {\n        var option, others, _i, _len, _ref;\n\n        others = [];\n        _ref = this.options;\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          option = _ref[_i];\n\n          if (option.value !== value) {\n            others.push(option.value);\n          }\n        }\n\n        return others;\n      };\n\n      return CssModificatorProperty;\n    }();\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"../modules/logging/log\": 51,\n    \"../modules/words\": 55\n  }],\n  29: [function (require, module, exports) {\n    var Dependencies, Design, OrderedHash, Template, Transforms, assert, config, log, words, _;\n\n    config = require('../configuration/config');\n    assert = require('../modules/logging/assert');\n    log = require('../modules/logging/log');\n    words = require('../modules/words');\n    Template = require('../template/template');\n    OrderedHash = require('../modules/ordered_hash');\n    Dependencies = require('../rendering/dependencies');\n    Transforms = require('./transforms');\n    _ = require('underscore');\n\n    module.exports = Design = function () {\n      function Design(_arg) {\n        var label;\n        this.name = _arg.name, this.version = _arg.version, label = _arg.label, this.author = _arg.author, this.description = _arg.description;\n        assert(this.name != null, 'Design: param \"name\" is required');\n        this.label = label || words.humanize(this.name);\n        this.identifier = Design.getIdentifier(this.name, this.version);\n        this.groups = [];\n        this.components = new OrderedHash();\n        this.imageRatios = {};\n        this.dependencies = new Dependencies();\n        this.defaultParagraph = void 0;\n        this.defaultImage = void 0;\n        this.transforms = new Transforms(this.components);\n      }\n\n      Design.prototype.equals = function (design) {\n        return design.name === this.name && design.version === this.version;\n      };\n\n      Design.prototype.isNewerThan = function (design) {\n        if (design == null) {\n          return true;\n        }\n\n        return this.version > (design.version || '');\n      };\n\n      Design.prototype.get = function (identifier) {\n        var componentName;\n        componentName = this.getComponentNameFromIdentifier(identifier);\n        return this.components.get(componentName);\n      };\n\n      Design.prototype.each = function (callback) {\n        return this.components.each(callback);\n      };\n\n      Design.prototype.add = function (template) {\n        template.setDesign(this);\n        return this.components.push(template.name, template);\n      };\n\n      Design.prototype.getComponentNameFromIdentifier = function (identifier) {\n        var name;\n        name = Template.parseIdentifier(identifier).name;\n        return name;\n      };\n\n      Design.prototype.getDefaultParagraphTemplate = function () {\n        return this.defaultParagraph;\n      };\n\n      Design.prototype.getDefaultImageTemplate = function () {\n        return this.defaultImage;\n      };\n\n      Design.prototype.getDefaultParagraphComponentName = function () {\n        var _ref;\n\n        return (_ref = this.getDefaultParagraphTemplate()) != null ? _ref.name : void 0;\n      };\n\n      Design.prototype.getDefaultImageComponentName = function () {\n        var _ref;\n\n        return (_ref = this.getDefaultImageTemplate()) != null ? _ref.name : void 0;\n      };\n\n      Design.prototype.getDefaultImageDirectiveName = function () {\n        var _ref, _ref1;\n\n        return (_ref = this.defaultImage) != null ? (_ref1 = _ref.directives.firstOfType('image')) != null ? _ref1.name : void 0 : void 0;\n      };\n\n      Design.prototype.getLayout = function (name) {\n        if (!this.layouts) {\n          return {\n            wrapper: this.wrapper\n          };\n        }\n\n        if (!(name != null || this.defaultLayout != null)) {\n          return _.first(this.layouts);\n        }\n\n        if (name == null) {\n          name = this.defaultLayout;\n        }\n\n        return _.findWhere(this.layouts, {\n          name: name\n        });\n      };\n\n      Design.getIdentifier = function (name, version) {\n        if (version) {\n          return \"\" + name + \"@\" + version;\n        } else {\n          return \"\" + name;\n        }\n      };\n\n      return Design;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../modules/logging/assert\": 50,\n    \"../modules/logging/log\": 51,\n    \"../modules/ordered_hash\": 52,\n    \"../modules/words\": 55,\n    \"../rendering/dependencies\": 57,\n    \"../template/template\": 74,\n    \"./transforms\": 34,\n    \"underscore\": 10\n  }],\n  30: [function (require, module, exports) {\n    var Design, Version, assert, designParser;\n    assert = require('../modules/logging/assert');\n    Design = require('./design');\n    designParser = require('./design_parser');\n    Version = require('./version');\n\n    module.exports = function () {\n      return {\n        designs: {},\n        load: function load(designSpec, _arg) {\n          var basePath, design;\n          basePath = (_arg != null ? _arg : {}).basePath;\n          assert(designSpec != null, 'design.load() was called with undefined.');\n          assert(!(typeof designSpec === 'string'), 'design.load() loading a design by name is not implemented.');\n\n          if (this.has(designSpec.name, designSpec.version)) {\n            return;\n          }\n\n          if (basePath != null && designSpec.assets != null) {\n            designSpec.assets.basePath = basePath;\n          }\n\n          design = designParser.parse(designSpec);\n\n          if (design) {\n            return this.add(design);\n          } else {\n            throw new Error(Design.parser.errors);\n          }\n        },\n        add: function add(design) {\n          if (design.isNewerThan(this.designs[design.name])) {\n            this.designs[design.name] = design;\n          }\n\n          return this.designs[design.identifier] = design;\n        },\n        has: function has(designName, designVersion) {\n          var identifier;\n\n          if (designVersion == null) {\n            return false;\n          }\n\n          identifier = Design.getIdentifier(designName, designVersion);\n          return this.designs[identifier] != null;\n        },\n        get: function get(designName, designVersion) {\n          var identifier;\n          assert(this.has(designName, designVersion), \"Error: design '\" + designName + \"' version '\" + designVersion + \"' is not loaded.\");\n          identifier = Design.getIdentifier(designName, designVersion);\n          return this.designs[identifier];\n        },\n        resetCache: function resetCache() {\n          return this.designs = {};\n        }\n      };\n    }();\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"./design\": 29,\n    \"./design_parser\": 32,\n    \"./version\": 35\n  }],\n  31: [function (require, module, exports) {\n    var Version, config, jScheme, validator;\n    config = require('../configuration/config');\n    jScheme = require('jscheme');\n    Version = require('./version');\n    module.exports = validator = jScheme[\"new\"]();\n    validator.add('styleType', function (value) {\n      return value === 'option' || value === 'select' || value === 'text';\n    });\n    validator.add('semVer', function (value) {\n      return Version.semVer.test(value);\n    });\n    validator.add('wrapper', function (value) {\n      var regexp;\n      regexp = /<.*\\u0020(?:[^>]*\\u0020|)class=(\"|')[^'\"]*doc-section[^'\"]*\\1(?:\\u0020[^>]*|)>/;\n\n      if (!regexp.test(value)) {\n        return \"design.wrapper is missing a 'doc-section' class ('\" + value + \"').\";\n      } else {\n        return true;\n      }\n    });\n    validator.add('one empty option', function (value) {\n      var emptyCount, entry, _i, _len;\n\n      emptyCount = 0;\n\n      for (_i = 0, _len = value.length; _i < _len; _i++) {\n        entry = value[_i];\n\n        if (!entry.value) {\n          emptyCount += 1;\n        }\n      }\n\n      return emptyCount === 1;\n    });\n    validator.add('design', {\n      name: 'string',\n      label: 'string, optional',\n      version: 'string, semVer',\n      author: 'string, optional',\n      description: 'string, optional',\n      assets: {\n        __validate: 'optional',\n        css: 'array of string',\n        js: 'array of string, optional',\n        basePath: 'string, optional'\n      },\n      components: 'array of component',\n      componentProperties: {\n        __validate: 'optional',\n        __additionalProperty: function __additionalProperty(key, value) {\n          return validator.validate('componentProperty', value);\n        }\n      },\n      groups: 'array of group, optional',\n      defaultComponents: {\n        __validate: 'optional',\n        paragraph: 'string, optional',\n        image: 'string, optional'\n      },\n      imageRatios: {\n        __validate: 'optional',\n        __additionalProperty: function __additionalProperty(key, value) {\n          return validator.validate('imageRatio', value);\n        }\n      },\n      metadata: 'array of object, optional',\n      wrapper: 'string, wrapper, optional',\n      layouts: 'array of layout, optional',\n      defaultLayout: 'string, optional',\n      defaultContent: 'array of object, optional',\n      prefilledComponents: 'object, optional'\n    });\n    validator.add('component', {\n      name: 'string',\n      label: 'string, optional',\n      html: 'string',\n      directives: 'object, optional',\n      properties: 'array of string, optional',\n      allowedParents: 'array of string, optional',\n      __additionalProperty: function __additionalProperty(key, value) {\n        return false;\n      }\n    });\n    validator.add('group', {\n      label: 'string',\n      components: 'array of string'\n    });\n    validator.add('componentProperty', {\n      label: 'string, optional',\n      type: 'string, styleType',\n      value: 'string, optional',\n      options: 'array of styleOption, one empty option, optional'\n    });\n    validator.add('imageRatio', {\n      label: 'string, optional',\n      ratio: 'string'\n    });\n    validator.add('styleOption', {\n      caption: 'string',\n      value: 'string, optional'\n    });\n    validator.add('layout', {\n      name: 'string',\n      caption: 'string',\n      wrapper: 'wrapper',\n      icon: 'string, optional'\n    });\n  }, {\n    \"../configuration/config\": 26,\n    \"./version\": 35,\n    \"jscheme\": 4\n  }],\n  32: [function (require, module, exports) {\n    var $, CssModificatorProperty, Design, ImageRatio, Template, Version, assert, designConfigSchema, designParser, log;\n    log = require('../modules/logging/log');\n    $ = require('jquery');\n    assert = require('../modules/logging/assert');\n    designConfigSchema = require('./design_config_schema');\n    CssModificatorProperty = require('./css_modificator_property');\n    Template = require('../template/template');\n    Design = require('./design');\n    Version = require('./version');\n    ImageRatio = require('./image_ratio');\n    $ = require('jquery');\n    module.exports = designParser = {\n      parse: function parse(designConfig) {\n        var errors;\n        this.design = void 0;\n\n        if (designConfigSchema.validate('design', designConfig)) {\n          return this.createDesign(designConfig);\n        } else {\n          errors = designConfigSchema.getErrorMessages();\n          throw new Error(errors);\n        }\n      },\n      createDesign: function createDesign(designConfig) {\n        var assets, componentProperties, components, defaultComponents, error, groups, imageRatios;\n        assets = designConfig.assets, components = designConfig.components, componentProperties = designConfig.componentProperties, groups = designConfig.groups, defaultComponents = designConfig.defaultComponents, imageRatios = designConfig.imageRatios;\n\n        try {\n          this.design = this.parseDesignInfo(designConfig);\n          $.each(['metadata', 'wrapper', 'layouts', 'defaultLayout', 'defaultContent', 'prefilledComponents'], function (_this) {\n            return function (index, attributeName) {\n              return _this.design[attributeName] = designConfig[attributeName];\n            };\n          }(this));\n          this.parseAssets(assets);\n          this.parseComponentProperties(componentProperties);\n          this.parseImageRatios(imageRatios);\n          this.parseComponents(components);\n          this.parseGroups(groups);\n          this.parseDefaults(defaultComponents);\n        } catch (_error) {\n          error = _error;\n          error.message = \"Error creating the design: \" + error.message;\n          throw error;\n        }\n\n        return this.design;\n      },\n      parseDesignInfo: function parseDesignInfo(design) {\n        var version;\n        version = new Version(design.version);\n        return new Design({\n          name: design.name,\n          label: design.label,\n          version: version.toString()\n        });\n      },\n      parseAssets: function parseAssets(assets) {\n        var basePath;\n\n        if (assets == null) {\n          return;\n        }\n\n        basePath = assets.basePath;\n        this.eachAsset(assets.js, function (_this) {\n          return function (assetUrl) {\n            return _this.design.dependencies.addJs({\n              src: assetUrl,\n              basePath: basePath\n            });\n          };\n        }(this));\n        return this.eachAsset(assets.css, function (_this) {\n          return function (assetUrl) {\n            return _this.design.dependencies.addCss({\n              src: assetUrl,\n              basePath: basePath\n            });\n          };\n        }(this));\n      },\n      eachAsset: function eachAsset(data, callback) {\n        var entry, _i, _len, _results;\n\n        if (data == null) {\n          return;\n        }\n\n        if ($.type(data) === 'string') {\n          return callback(data);\n        } else {\n          _results = [];\n\n          for (_i = 0, _len = data.length; _i < _len; _i++) {\n            entry = data[_i];\n\n            _results.push(callback(entry));\n          }\n\n          return _results;\n        }\n      },\n      parseComponentProperties: function parseComponentProperties(componentProperties) {\n        var config, name, _results;\n\n        this.componentProperties = {};\n        _results = [];\n\n        for (name in componentProperties) {\n          config = componentProperties[name];\n          config.name = name;\n\n          _results.push(this.componentProperties[name] = this.createComponentProperty(config));\n        }\n\n        return _results;\n      },\n      parseImageRatios: function parseImageRatios(ratios) {\n        var name, ratio, _results;\n\n        _results = [];\n\n        for (name in ratios) {\n          ratio = ratios[name];\n\n          _results.push(this.design.imageRatios[name] = new ImageRatio({\n            name: name,\n            label: ratio.label,\n            ratio: ratio.ratio\n          }));\n        }\n\n        return _results;\n      },\n      parseComponents: function parseComponents(components) {\n        var allowedParents, directives, html, label, name, properties, template, _i, _len, _ref, _results;\n\n        if (components == null) {\n          components = [];\n        }\n\n        _results = [];\n\n        for (_i = 0, _len = components.length; _i < _len; _i++) {\n          _ref = components[_i], name = _ref.name, label = _ref.label, html = _ref.html, properties = _ref.properties, directives = _ref.directives, allowedParents = _ref.allowedParents;\n          properties = this.lookupComponentProperties(properties);\n          template = new Template({\n            name: name,\n            label: label,\n            html: html,\n            properties: properties,\n            allowedParents: allowedParents\n          });\n          this.parseDirectives(template, directives);\n\n          _results.push(this.design.add(template));\n        }\n\n        return _results;\n      },\n      parseDirectives: function parseDirectives(template, directivesConfig) {\n        var conf, directive, directiveConfig, name, _results;\n\n        _results = [];\n\n        for (name in directivesConfig) {\n          conf = directivesConfig[name];\n          directive = template.directives.get(name);\n          assert(directive, \"Could not find directive \" + name + \" in \" + template.name + \" component.\");\n          directiveConfig = $.extend({}, conf);\n\n          if (conf.imageRatios) {\n            directiveConfig.imageRatios = this.lookupImageRatios(conf.imageRatios);\n          }\n\n          _results.push(directive.setConfig(directiveConfig));\n        }\n\n        return _results;\n      },\n      lookupComponentProperties: function lookupComponentProperties(propertyNames) {\n        var name, properties, property, _i, _len, _ref;\n\n        properties = {};\n        _ref = propertyNames || [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          name = _ref[_i];\n          property = this.componentProperties[name];\n          assert(property, \"The componentProperty '\" + name + \"' was not found.\");\n          properties[name] = property;\n        }\n\n        return properties;\n      },\n      lookupImageRatios: function lookupImageRatios(ratioNames) {\n        if (ratioNames == null) {\n          return;\n        }\n\n        return this.mapArray(ratioNames, function (_this) {\n          return function (name) {\n            var ratio;\n            ratio = _this.design.imageRatios[name];\n            assert(ratio, \"The imageRatio '\" + name + \"' was not found.\");\n            return ratio;\n          };\n        }(this));\n      },\n      parseGroups: function parseGroups(groups) {\n        var componentName, components, group, _i, _len, _results;\n\n        if (groups == null) {\n          groups = [];\n        }\n\n        _results = [];\n\n        for (_i = 0, _len = groups.length; _i < _len; _i++) {\n          group = groups[_i];\n\n          components = function () {\n            var _j, _len1, _ref, _results1;\n\n            _ref = group.components;\n            _results1 = [];\n\n            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n              componentName = _ref[_j];\n\n              _results1.push(this.design.get(componentName));\n            }\n\n            return _results1;\n          }.call(this);\n\n          _results.push(this.design.groups.push({\n            label: group.label,\n            components: components\n          }));\n        }\n\n        return _results;\n      },\n      parseDefaults: function parseDefaults(defaultComponents) {\n        var image, paragraph;\n\n        if (defaultComponents == null) {\n          return;\n        }\n\n        paragraph = defaultComponents.paragraph, image = defaultComponents.image;\n\n        if (paragraph) {\n          this.design.defaultParagraph = this.getTemplate(paragraph);\n        }\n\n        if (image) {\n          return this.design.defaultImage = this.getTemplate(image);\n        }\n      },\n      getTemplate: function getTemplate(name) {\n        var template;\n        template = this.design.get(name);\n        assert(template, \"Could not find component \" + name);\n        return template;\n      },\n      createComponentProperty: function createComponentProperty(styleDefinition) {\n        return new CssModificatorProperty(styleDefinition);\n      },\n      mapArray: function mapArray(entries, lookup) {\n        var entry, newArray, val, _i, _len;\n\n        newArray = [];\n\n        for (_i = 0, _len = entries.length; _i < _len; _i++) {\n          entry = entries[_i];\n          val = lookup(entry);\n\n          if (val != null) {\n            newArray.push(val);\n          }\n        }\n\n        return newArray;\n      }\n    };\n    Design.parser = designParser;\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"../modules/logging/log\": 51,\n    \"../template/template\": 74,\n    \"./css_modificator_property\": 28,\n    \"./design\": 29,\n    \"./design_config_schema\": 31,\n    \"./image_ratio\": 33,\n    \"./version\": 35,\n    \"jquery\": \"jquery\"\n  }],\n  33: [function (require, module, exports) {\n    var $, ImageRatio, assert, words;\n    $ = require('jquery');\n    words = require('../modules/words');\n    assert = require('../modules/logging/assert');\n\n    module.exports = ImageRatio = function () {\n      var ratioString;\n      ratioString = /(\\d+)[\\/:x](\\d+)/;\n\n      function ImageRatio(_arg) {\n        var label, ratio;\n        this.name = _arg.name, label = _arg.label, ratio = _arg.ratio;\n        this.label = label || words.humanize(this.name);\n        this.ratio = this.parseRatio(ratio);\n      }\n\n      ImageRatio.prototype.parseRatio = function (ratio) {\n        var res;\n\n        if ($.type(ratio) === 'string') {\n          res = ratioString.exec(ratio);\n          ratio = Number(res[1]) / Number(res[2]);\n        }\n\n        assert($.type(ratio) === 'number', \"Could not parse image ratio \" + ratio);\n        return ratio;\n      };\n\n      return ImageRatio;\n    }();\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"../modules/words\": 55,\n    \"jquery\": \"jquery\"\n  }],\n  34: [function (require, module, exports) {\n    var Transforms;\n\n    module.exports = Transforms = function () {\n      function Transforms(templates) {\n        this.templates = templates;\n      }\n\n      Transforms.prototype.getTransformations = function (_arg) {\n        var componentName, directives, filter, oneWay, options, template;\n        template = _arg.template, componentName = _arg.componentName, oneWay = _arg.oneWay, directives = _arg.directives, filter = _arg.filter;\n\n        if (componentName) {\n          template = this.templates.get(componentName);\n        }\n\n        if (oneWay == null) {\n          oneWay = false;\n        }\n\n        options = [];\n        this.templates.each(function (_this) {\n          return function (other) {\n            var compatibility;\n\n            if (template.equals(other)) {\n              return;\n            }\n\n            if (filter != null && !filter(other)) {\n              return;\n            }\n\n            compatibility = _this.isCompatible(template, other, {\n              oneWay: oneWay,\n              directives: directives\n            });\n\n            if (compatibility.isCompatible) {\n              compatibility.template = other;\n              return options.push(compatibility);\n            }\n          };\n        }(this));\n\n        if (options.length) {\n          return options;\n        } else {\n          return void 0;\n        }\n      };\n\n      Transforms.prototype.getOptionsList = function (_arg) {\n        var componentName, directives, filter, names, oneWay, option, options, template, _i, _len, _ref;\n\n        template = _arg.template, componentName = _arg.componentName, oneWay = _arg.oneWay, directives = _arg.directives, filter = _arg.filter;\n\n        if (componentName) {\n          template = this.templates.get(componentName);\n        }\n\n        options = this.getTransformations({\n          template: template,\n          oneWay: oneWay,\n          directives: directives,\n          filter: filter\n        });\n        names = [];\n        _ref = options || [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          option = _ref[_i];\n          componentName = option.name;\n          template = option.template;\n          names.push({\n            label: template.label,\n            componentName: componentName\n          });\n        }\n\n        return names;\n      };\n\n      Transforms.prototype.isCompatible = function (a, b, options) {\n        var directive, directives, name, obj, type, _i, _len, _ref, _ref1;\n\n        if (options == null) {\n          options = {};\n        }\n\n        obj = {\n          name: b.name,\n          isCompatible: true,\n          mapping: {}\n        };\n\n        directives = function () {\n          var _i, _len, _ref, _results;\n\n          if (options.directives != null) {\n            options.oneWay = true;\n            _ref = options.directives;\n            _results = [];\n\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n              name = _ref[_i];\n\n              _results.push(a.directives.get(name));\n            }\n\n            return _results;\n          } else {\n            return a.directives;\n          }\n        }();\n\n        _ref = directives || [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          directive = _ref[_i];\n          name = directive.name, type = directive.type;\n\n          if (type !== 'editable' && type !== 'image' && type !== 'link') {\n            obj.isCompatible = false;\n            continue;\n          }\n\n          if (a.directives.count(type) === 1 && b.directives.count(type) === 1) {\n            obj.mapping[name] = b.directives[type][0].name;\n          } else if (((_ref1 = b.directives.get(name)) != null ? _ref1.type : void 0) === type) {\n            obj.mapping[name] = name;\n          } else {\n            obj.mapping[name] = null;\n            obj.isCompatible = false;\n          }\n        }\n\n        if (!options.oneWay) {\n          if (a.directives.length !== b.directives.length) {\n            obj.isCompatible = false;\n          }\n        }\n\n        return obj;\n      };\n\n      return Transforms;\n    }();\n  }, {}],\n  35: [function (require, module, exports) {\n    var Version;\n\n    module.exports = Version = function () {\n      Version.semVer = /(\\d+)\\.(\\d+)\\.(\\d+)(.+)?/;\n\n      function Version(versionString) {\n        this.parseVersion(versionString);\n      }\n\n      Version.prototype.parseVersion = function (versionString) {\n        var res;\n        res = Version.semVer.exec(versionString);\n\n        if (res) {\n          this.major = res[1];\n          this.minor = res[2];\n          this.patch = res[3];\n          return this.addendum = res[4];\n        }\n      };\n\n      Version.prototype.isValid = function () {\n        return this.major != null;\n      };\n\n      Version.prototype.toString = function () {\n        return \"\" + this.major + \".\" + this.minor + \".\" + this.patch + (this.addendum || '');\n      };\n\n      Version.parse = function (versionString) {\n        var v;\n        v = new Version(versionString);\n\n        if (v.isValid()) {\n          return v.toString();\n        } else {\n          return '';\n        }\n      };\n\n      return Version;\n    }();\n  }, {}],\n  36: [function (require, module, exports) {\n    module.exports = {\n      name: 'default',\n      set: function set($elem, value) {\n        if (this.isInlineImage($elem)) {\n          return this.setInlineImage($elem, value);\n        } else {\n          return this.setBackgroundImage($elem, value);\n        }\n      },\n      getUrl: function getUrl(value) {\n        return value;\n      },\n      setInlineImage: function setInlineImage($elem, value) {\n        return $elem.attr('src', value);\n      },\n      setBackgroundImage: function setBackgroundImage($elem, value) {\n        return $elem.css('background-image', \"url(\" + this.escapeCssUri(value) + \")\");\n      },\n      escapeCssUri: function escapeCssUri(uri) {\n        if (/[()]/.test(uri)) {\n          return \"'\" + uri + \"'\";\n        } else {\n          return uri;\n        }\n      },\n      getImageDimensions: function getImageDimensions($elem) {\n        if (this.isInlineImage($elem)) {\n          return {\n            width: $elem.width(),\n            height: $elem.height()\n          };\n        } else {\n          return {\n            width: $elem.outerWidth(),\n            height: $elem.outerHeight()\n          };\n        }\n      },\n      isBase64: function isBase64(value) {\n        if (value != null) {\n          return value.indexOf('data:image') === 0;\n        }\n      },\n      isInlineImage: function isInlineImage($elem) {\n        return $elem[0].nodeName.toLowerCase() === 'img';\n      },\n      isBackgroundImage: function isBackgroundImage($elem) {\n        return $elem[0].nodeName.toLowerCase() !== 'img';\n      }\n    };\n  }, {}],\n  37: [function (require, module, exports) {\n    var assert, defaultImageService, resrcitImageService;\n    assert = require('../modules/logging/assert');\n    defaultImageService = require('./default_image_service');\n    resrcitImageService = require('./resrcit_image_service');\n\n    module.exports = function () {\n      var services;\n      services = {\n        'resrc.it': resrcitImageService,\n        'default': defaultImageService\n      };\n      return {\n        has: function has(serviceName) {\n          if (serviceName == null) {\n            serviceName = 'default';\n          }\n\n          return services[serviceName] != null;\n        },\n        get: function get(serviceName) {\n          if (serviceName == null) {\n            serviceName = 'default';\n          }\n\n          assert(this.has(serviceName), \"Could not load image service \" + serviceName);\n          return services[serviceName];\n        },\n        eachService: function eachService(callback) {\n          var name, service, _results;\n\n          _results = [];\n\n          for (name in services) {\n            service = services[name];\n\n            _results.push(callback(name, service));\n          }\n\n          return _results;\n        }\n      };\n    }();\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"./default_image_service\": 36,\n    \"./resrcit_image_service\": 38\n  }],\n  38: [function (require, module, exports) {\n    var assert, imgService, resrcitConfig;\n    assert = require('../modules/logging/assert');\n    imgService = require('./default_image_service');\n    resrcitConfig = require('../configuration/config').imageServices['resrc.it'];\n\n    module.exports = function () {\n      return {\n        name: 'resrc.it',\n        set: function set($elem, url) {\n          assert(url != null && url !== '', 'Src value for an image has to be defined');\n\n          if (imgService.isBase64(url)) {\n            return this.setBase64($elem, url);\n          }\n\n          $elem.addClass('resrc');\n\n          if (imgService.isInlineImage($elem)) {\n            return this.setInlineImage($elem, url);\n          } else {\n            return this.setBackgroundImage($elem, url);\n          }\n        },\n        getUrl: function getUrl(value, _arg) {\n          var crop, height, q, quality, style, width, x, y, _ref;\n\n          _ref = _arg != null ? _arg : {}, crop = _ref.crop, quality = _ref.quality;\n          style = \"\";\n\n          if (crop != null) {\n            x = crop.x, y = crop.y, width = crop.width, height = crop.height;\n            assert(typeof x === 'number', 'x should be a number');\n            assert(typeof y === 'number', 'y should be a number');\n            assert(typeof width === 'number', 'width should be a number');\n            assert(typeof height === 'number', 'height should be a number');\n            style += \"/C=W\" + width + \",H\" + height + \",X\" + x + \",Y\" + y;\n          }\n\n          if (q = quality || resrcitConfig.quality) {\n            style += \"/O=\" + q;\n          }\n\n          return \"\" + resrcitConfig.host + style + \"/\" + value;\n        },\n        formatCssUrl: function formatCssUrl(url) {\n          url = imgService.escapeCssUri(url);\n          return \"url(\" + url + \")\";\n        },\n        setInlineImage: function setInlineImage($elem, url) {\n          if (imgService.isBase64($elem.attr('src'))) {\n            $elem.removeAttr('src');\n          }\n\n          return $elem.attr('data-src', url);\n        },\n        setBackgroundImage: function setBackgroundImage($elem, url) {\n          return $elem.css('background-image', this.formatCssUrl(url));\n        },\n        setBase64: function setBase64($elem, base64String) {\n          return imgService.set($elem, base64String);\n        }\n      };\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../modules/logging/assert\": 50,\n    \"./default_image_service\": 36\n  }],\n  39: [function (require, module, exports) {\n    var $, ComponentDrag, config, css, dom, isSupported;\n    $ = require('jquery');\n    dom = require('./dom');\n    isSupported = require('../modules/feature_detection/is_supported');\n    config = require('../configuration/config');\n    css = config.css;\n\n    module.exports = ComponentDrag = function () {\n      var startAndEndOffset, wiggleSpace;\n      wiggleSpace = 0;\n      startAndEndOffset = 0;\n\n      function ComponentDrag(_arg) {\n        var componentView;\n        this.componentModel = _arg.componentModel, componentView = _arg.componentView;\n\n        if (componentView) {\n          this.$view = componentView.$html;\n        }\n\n        this.$highlightedContainer = {};\n      }\n\n      ComponentDrag.prototype.start = function (eventPosition) {\n        this.started = true;\n        this.page.editableController.disableAll();\n        this.page.blurFocusedElement();\n        this.$placeholder = this.createPlaceholder().css({\n          'pointer-events': 'none'\n        });\n        this.$dragBlocker = this.page.$body.find(\".\" + css.dragBlocker);\n        this.$dropMarker = $(\"<div class='\" + css.dropMarker + \"'>\");\n        this.page.$body.append(this.$dropMarker).append(this.$placeholder).css('cursor', 'pointer');\n\n        if (this.$view != null) {\n          this.$view.addClass(css.dragged);\n        }\n\n        return this.move(eventPosition);\n      };\n\n      ComponentDrag.prototype.move = function (eventPosition) {\n        this.$placeholder.css({\n          left: \"\" + eventPosition.pageX + \"px\",\n          top: \"\" + eventPosition.pageY + \"px\"\n        });\n        return this.target = this.findDropTarget(eventPosition);\n      };\n\n      ComponentDrag.prototype.findDropTarget = function (eventPosition) {\n        var coords, elem, target, _ref, _ref1;\n\n        _ref = this.getElemUnderCursor(eventPosition), eventPosition = _ref.eventPosition, elem = _ref.elem;\n\n        if (elem == null) {\n          return void 0;\n        }\n\n        if (elem === this.$dropMarker[0]) {\n          return this.target;\n        }\n\n        coords = {\n          left: eventPosition.pageX,\n          top: eventPosition.pageY\n        };\n\n        if (elem != null) {\n          target = dom.dropTarget(elem, coords);\n        }\n\n        if (!this.canBeDropped(target)) {\n          target = void 0;\n        }\n\n        this.undoMakeSpace();\n\n        if (target != null && ((_ref1 = target.componentView) != null ? _ref1.model : void 0) !== this.componentModel) {\n          this.$placeholder.removeClass(css.noDrop);\n          this.markDropPosition(target);\n          return target;\n        } else {\n          this.$dropMarker.hide();\n          this.removeContainerHighlight();\n\n          if (target == null) {\n            this.$placeholder.addClass(css.noDrop);\n          } else {\n            this.$placeholder.removeClass(css.noDrop);\n          }\n\n          return void 0;\n        }\n      };\n\n      ComponentDrag.prototype.canBeDropped = function (target) {\n        var componentTree, isAllowed;\n\n        if (target == null) {\n          return false;\n        }\n\n        componentTree = target.componentTree;\n\n        if (componentTree == null) {\n          componentTree = target.componentView.model.componentTree;\n        }\n\n        isAllowed = componentTree.isDropAllowed(this.componentModel, target);\n        return isAllowed;\n      };\n\n      ComponentDrag.prototype.markDropPosition = function (target) {\n        switch (target.target) {\n          case 'component':\n            this.componentPosition(target);\n            return this.removeContainerHighlight();\n\n          case 'container':\n            this.showMarkerAtBeginningOfContainer(target.node);\n            return this.highlighContainer($(target.node));\n\n          case 'root':\n            this.showMarkerAtBeginningOfContainer(target.node);\n            return this.highlighContainer($(target.node));\n        }\n      };\n\n      ComponentDrag.prototype.componentPosition = function (target) {\n        var before, next;\n\n        if (target.position === 'before') {\n          before = target.componentView.prev();\n\n          if (before != null) {\n            if (before.model === this.componentModel) {\n              target.position = 'after';\n              return this.componentPosition(target);\n            }\n\n            return this.showMarkerBetweenComponents(before, target.componentView);\n          } else {\n            return this.showMarkerAtBeginningOfContainer(target.componentView.$elem[0].parentNode);\n          }\n        } else {\n          next = target.componentView.next();\n\n          if (next != null) {\n            if (next.model === this.componentModel) {\n              target.position = 'before';\n              return this.componentPosition(target);\n            }\n\n            return this.showMarkerBetweenComponents(target.componentView, next);\n          } else {\n            return this.showMarkerAtEndOfContainer(target.componentView.$elem[0].parentNode);\n          }\n        }\n      };\n\n      ComponentDrag.prototype.showMarkerBetweenComponents = function (viewA, viewB) {\n        var boxA, boxB, halfGap;\n        boxA = dom.getAbsoluteBoundingClientRect(viewA.$elem[0]);\n        boxB = dom.getAbsoluteBoundingClientRect(viewB.$elem[0]);\n        halfGap = boxB.top > boxA.bottom ? (boxB.top - boxA.bottom) / 2 : 0;\n        return this.showMarker({\n          left: boxA.left,\n          top: boxA.bottom + halfGap,\n          width: boxA.width\n        });\n      };\n\n      ComponentDrag.prototype.showMarkerAtBeginningOfContainer = function (elem) {\n        var box, paddingTop;\n\n        if (elem == null) {\n          return;\n        }\n\n        this.makeSpace(elem.firstChild, 'top');\n        box = dom.getAbsoluteBoundingClientRect(elem);\n        paddingTop = parseInt($(elem).css('padding-top')) || 0;\n        return this.showMarker({\n          left: box.left,\n          top: box.top + startAndEndOffset + paddingTop,\n          width: box.width\n        });\n      };\n\n      ComponentDrag.prototype.showMarkerAtEndOfContainer = function (elem) {\n        var box, paddingBottom;\n\n        if (elem == null) {\n          return;\n        }\n\n        this.makeSpace(elem.lastChild, 'bottom');\n        box = dom.getAbsoluteBoundingClientRect(elem);\n        paddingBottom = parseInt($(elem).css('padding-bottom')) || 0;\n        return this.showMarker({\n          left: box.left,\n          top: box.bottom - startAndEndOffset - paddingBottom,\n          width: box.width\n        });\n      };\n\n      ComponentDrag.prototype.showMarker = function (_arg) {\n        var $body, left, top, width;\n        left = _arg.left, top = _arg.top, width = _arg.width;\n\n        if (this.iframeBox != null) {\n          $body = $(this.iframeBox.window.document.body);\n          top -= $body.scrollTop();\n          left -= $body.scrollLeft();\n          left += this.iframeBox.left;\n          top += this.iframeBox.top;\n          this.$dropMarker.css({\n            position: 'fixed'\n          });\n        } else {\n          this.$dropMarker.css({\n            position: 'absolute'\n          });\n        }\n\n        return this.$dropMarker.css({\n          left: \"\" + left + \"px\",\n          top: \"\" + top + \"px\",\n          width: \"\" + width + \"px\"\n        }).show();\n      };\n\n      ComponentDrag.prototype.makeSpace = function (node, position) {\n        var $node;\n\n        if (!(wiggleSpace && node != null)) {\n          return;\n        }\n\n        $node = $(node);\n        this.lastTransform = $node;\n\n        if (position === 'top') {\n          return $node.css({\n            transform: \"translate(0, \" + wiggleSpace + \"px)\"\n          });\n        } else {\n          return $node.css({\n            transform: \"translate(0, -\" + wiggleSpace + \"px)\"\n          });\n        }\n      };\n\n      ComponentDrag.prototype.undoMakeSpace = function (node) {\n        if (this.lastTransform != null) {\n          this.lastTransform.css({\n            transform: ''\n          });\n          return this.lastTransform = void 0;\n        }\n      };\n\n      ComponentDrag.prototype.highlighContainer = function ($container) {\n        var _base, _base1;\n\n        if ($container[0] !== this.$highlightedContainer[0]) {\n          if (typeof (_base = this.$highlightedContainer).removeClass === \"function\") {\n            _base.removeClass(css.containerHighlight);\n          }\n\n          this.$highlightedContainer = $container;\n          return typeof (_base1 = this.$highlightedContainer).addClass === \"function\" ? _base1.addClass(css.containerHighlight) : void 0;\n        }\n      };\n\n      ComponentDrag.prototype.removeContainerHighlight = function () {\n        var _base;\n\n        if (typeof (_base = this.$highlightedContainer).removeClass === \"function\") {\n          _base.removeClass(css.containerHighlight);\n        }\n\n        return this.$highlightedContainer = {};\n      };\n\n      ComponentDrag.prototype.getElemUnderCursor = function (eventPosition) {\n        var elem;\n        elem = void 0;\n        this.unblockElementFromPoint(function (_this) {\n          return function () {\n            var clientX, clientY, _ref;\n\n            clientX = eventPosition.clientX, clientY = eventPosition.clientY;\n\n            if (clientX != null && clientY != null) {\n              elem = _this.page.document.elementFromPoint(clientX, clientY);\n            }\n\n            if ((elem != null ? elem.nodeName : void 0) === 'IFRAME') {\n              return _ref = _this.findElemInIframe(elem, eventPosition), eventPosition = _ref.eventPosition, elem = _ref.elem, _ref;\n            } else {\n              return _this.iframeBox = void 0;\n            }\n          };\n        }(this));\n        return {\n          eventPosition: eventPosition,\n          elem: elem\n        };\n      };\n\n      ComponentDrag.prototype.findElemInIframe = function (iframeElem, eventPosition) {\n        var $body, box, document, elem;\n        this.iframeBox = box = iframeElem.getBoundingClientRect();\n        this.iframeBox.window = iframeElem.contentWindow;\n        document = iframeElem.contentDocument;\n        $body = $(document.body);\n        eventPosition.clientX -= box.left;\n        eventPosition.clientY -= box.top;\n        eventPosition.pageX = eventPosition.clientX + $body.scrollLeft();\n        eventPosition.pageY = eventPosition.clientY + $body.scrollTop();\n        elem = document.elementFromPoint(eventPosition.clientX, eventPosition.clientY);\n        return {\n          eventPosition: eventPosition,\n          elem: elem\n        };\n      };\n\n      ComponentDrag.prototype.unblockElementFromPoint = function (callback) {\n        if (isSupported('htmlPointerEvents')) {\n          this.$dragBlocker.css({\n            'pointer-events': 'none'\n          });\n          callback();\n          return this.$dragBlocker.css({\n            'pointer-events': 'auto'\n          });\n        } else {\n          this.$dragBlocker.hide();\n          this.$placeholder.hide();\n          callback();\n          this.$dragBlocker.show();\n          return this.$placeholder.show();\n        }\n      };\n\n      ComponentDrag.prototype.drop = function () {\n        if (this.target != null) {\n          this.moveToTarget(this.target);\n          return this.page.componentWasDropped.fire(this.componentModel);\n        } else {}\n      };\n\n      ComponentDrag.prototype.moveToTarget = function (target) {\n        var componentModel, componentTree, componentView;\n\n        switch (target.target) {\n          case 'component':\n            componentView = target.componentView;\n\n            if (target.position === 'before') {\n              return componentView.model.before(this.componentModel);\n            } else {\n              return componentView.model.after(this.componentModel);\n            }\n\n            break;\n\n          case 'container':\n            componentModel = target.componentView.model;\n            return componentModel.append(target.containerName, this.componentModel);\n\n          case 'root':\n            componentTree = target.componentTree;\n            return componentTree.prepend(this.componentModel);\n        }\n      };\n\n      ComponentDrag.prototype.reset = function () {\n        if (this.started) {\n          this.undoMakeSpace();\n          this.removeContainerHighlight();\n          this.page.$body.css('cursor', '');\n          this.page.editableController.reenableAll();\n\n          if (this.$view != null) {\n            this.$view.removeClass(css.dragged);\n          }\n\n          dom.restoreContainerHeight();\n          this.$placeholder.remove();\n          return this.$dropMarker.remove();\n        }\n      };\n\n      ComponentDrag.prototype.createPlaceholder = function () {\n        var $placeholder, numberOfDraggedElems, template;\n        numberOfDraggedElems = 1;\n        template = \"<div class=\\\"\" + css.draggedPlaceholder + \"\\\">\\n  <span class=\\\"\" + css.draggedPlaceholderCounter + \"\\\">\\n    \" + numberOfDraggedElems + \"\\n  </span>\\n  Selected Item\\n</div>\";\n        return $placeholder = $(template).css({\n          position: \"absolute\"\n        });\n      };\n\n      return ComponentDrag;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../modules/feature_detection/is_supported\": 48,\n    \"./dom\": 41,\n    \"jquery\": \"jquery\"\n  }],\n  40: [function (require, module, exports) {\n    var ContainerEvent;\n\n    module.exports = ContainerEvent = function () {\n      function ContainerEvent(_arg) {\n        var blur, focus;\n        this.target = _arg.target, focus = _arg.focus, blur = _arg.blur;\n        this.type = focus ? 'containerFocus' : blur ? 'containerBlur' : void 0;\n      }\n\n      return ContainerEvent;\n    }();\n  }, {}],\n  41: [function (require, module, exports) {\n    var $, config, css, directiveFinder;\n    $ = require('jquery');\n    config = require('../configuration/config');\n    directiveFinder = require('../template/directive_finder');\n    css = config.css;\n\n    module.exports = function () {\n      var componentRegex, sectionRegex;\n      componentRegex = new RegExp(\"(?: |^)\" + css.component + \"(?: |$)\");\n      sectionRegex = new RegExp(\"(?: |^)\" + css.section + \"(?: |$)\");\n      return {\n        findComponentView: function findComponentView(node) {\n          var view;\n          node = this.getElementNode(node);\n\n          while (node && node.nodeType === 1) {\n            if (componentRegex.test(node.className)) {\n              view = this.getComponentView(node);\n              return view;\n            }\n\n            node = node.parentNode;\n          }\n\n          return void 0;\n        },\n        getDirectiveContext: function getDirectiveContext(node) {\n          var directives;\n          node = this.getElementNode(node);\n\n          while (node && node.nodeType === 1) {\n            directives = this.getDirectives(node);\n\n            if (directives) {\n              return directives;\n            }\n\n            node = node.parentNode;\n          }\n\n          return void 0;\n        },\n        isInsideDocLink: function isInsideDocLink(node) {\n          var directives;\n\n          while (node && node.nodeType === 1) {\n            directives = this.getDirectives(node);\n\n            if (directives != null ? directives['link'] : void 0) {\n              return true;\n            }\n\n            node = node.parentNode;\n          }\n\n          return false;\n        },\n        getDirectives: function getDirectives(node) {\n          var directives;\n          directives = void 0;\n          directiveFinder.eachDirective(node, function (type, name) {\n            if (type === 'optional') {\n              return;\n            }\n\n            if (directives == null) {\n              directives = {};\n            }\n\n            return directives[type] = {\n              type: type,\n              name: name\n            };\n          });\n          return directives;\n        },\n        findContainer: function findContainer(node) {\n          var containerAttr, containerName, view;\n          node = this.getElementNode(node);\n          containerAttr = config.directives.container.renderedAttr;\n\n          while (node && node.nodeType === 1) {\n            if (node.hasAttribute(containerAttr)) {\n              containerName = node.getAttribute(containerAttr);\n\n              if (!sectionRegex.test(node.className)) {\n                view = this.findComponentView(node);\n              }\n\n              return {\n                node: node,\n                containerName: containerName,\n                componentView: view\n              };\n            }\n\n            node = node.parentNode;\n          }\n\n          return {};\n        },\n        getImageName: function getImageName(node) {\n          var imageAttr, imageName;\n          imageAttr = config.directives.image.renderedAttr;\n\n          if (node.hasAttribute(imageAttr)) {\n            imageName = node.getAttribute(imageAttr);\n            return imageName;\n          }\n        },\n        getHtmlElementName: function getHtmlElementName(node) {\n          var htmlAttr, htmlElementName;\n          htmlAttr = config.directives.html.renderedAttr;\n\n          if (node.hasAttribute(htmlAttr)) {\n            htmlElementName = node.getAttribute(htmlAttr);\n            return htmlElementName;\n          }\n        },\n        getEditableName: function getEditableName(node) {\n          var editableAttr, imageName;\n          editableAttr = config.directives.editable.renderedAttr;\n\n          if (node.hasAttribute(editableAttr)) {\n            imageName = node.getAttribute(editableAttr);\n            return imageName;\n          }\n        },\n        dropTarget: function dropTarget(node, _arg) {\n          var closestComponentData, containerAttr, left, top;\n          top = _arg.top, left = _arg.left;\n          node = this.getElementNode(node);\n          containerAttr = config.directives.container.renderedAttr;\n\n          while (node && node.nodeType === 1) {\n            if (node.hasAttribute(containerAttr)) {\n              closestComponentData = this.getClosestComponent(node, {\n                top: top,\n                left: left\n              });\n\n              if (closestComponentData != null) {\n                return this.getClosestComponentTarget(closestComponentData);\n              } else {\n                return this.getContainerTarget(node);\n              }\n            } else if (componentRegex.test(node.className)) {\n              return this.getComponentTarget(node, {\n                top: top,\n                left: left\n              });\n            } else if (sectionRegex.test(node.className)) {\n              closestComponentData = this.getClosestComponent(node, {\n                top: top,\n                left: left\n              });\n\n              if (closestComponentData != null) {\n                return this.getClosestComponentTarget(closestComponentData);\n              } else {\n                return this.getRootTarget(node);\n              }\n            }\n\n            node = node.parentNode;\n          }\n        },\n        getComponentTarget: function getComponentTarget(elem, _arg) {\n          var left, position, top;\n          top = _arg.top, left = _arg.left, position = _arg.position;\n          return {\n            target: 'component',\n            componentView: this.getComponentView(elem),\n            position: position || this.getPositionOnComponent(elem, {\n              top: top,\n              left: left\n            })\n          };\n        },\n        getClosestComponentTarget: function getClosestComponentTarget(closestComponentData) {\n          var elem, position;\n          elem = closestComponentData.$elem[0];\n          position = closestComponentData.position;\n          return this.getComponentTarget(elem, {\n            position: position\n          });\n        },\n        getContainerTarget: function getContainerTarget(node) {\n          var containerAttr, containerName;\n          containerAttr = config.directives.container.renderedAttr;\n          containerName = node.getAttribute(containerAttr);\n          return {\n            target: 'container',\n            node: node,\n            componentView: this.findComponentView(node),\n            containerName: containerName\n          };\n        },\n        getRootTarget: function getRootTarget(node) {\n          var componentTree;\n          componentTree = $(node).data('componentTree');\n          return {\n            target: 'root',\n            node: node,\n            componentTree: componentTree\n          };\n        },\n        getPositionOnComponent: function getPositionOnComponent(elem, _arg) {\n          var $elem, elemBottom, elemHeight, elemTop, left, top;\n          top = _arg.top, left = _arg.left;\n          $elem = $(elem);\n          elemTop = $elem.offset().top;\n          elemHeight = $elem.outerHeight();\n          elemBottom = elemTop + elemHeight;\n\n          if (this.distance(top, elemTop) < this.distance(top, elemBottom)) {\n            return 'before';\n          } else {\n            return 'after';\n          }\n        },\n        getClosestComponent: function getClosestComponent(container, _arg) {\n          var $components, closest, closestComponent, left, top;\n          top = _arg.top, left = _arg.left;\n          $components = $(container).find(\".\" + css.component);\n          closest = void 0;\n          closestComponent = void 0;\n          $components.each(function (_this) {\n            return function (index, elem) {\n              var $elem, elemBottom, elemHeight, elemTop;\n              $elem = $(elem);\n              elemTop = $elem.offset().top;\n              elemHeight = $elem.outerHeight();\n              elemBottom = elemTop + elemHeight;\n\n              if (closest == null || _this.distance(top, elemTop) < closest) {\n                closest = _this.distance(top, elemTop);\n                closestComponent = {\n                  $elem: $elem,\n                  position: 'before'\n                };\n              }\n\n              if (closest == null || _this.distance(top, elemBottom) < closest) {\n                closest = _this.distance(top, elemBottom);\n                return closestComponent = {\n                  $elem: $elem,\n                  position: 'after'\n                };\n              }\n            };\n          }(this));\n          return closestComponent;\n        },\n        distance: function distance(a, b) {\n          if (a > b) {\n            return a - b;\n          } else {\n            return b - a;\n          }\n        },\n        maximizeContainerHeight: function maximizeContainerHeight(view) {\n          var $elem, $parent, elem, name, outer, parentHeight, _ref, _results;\n\n          if (view.template.containerCount > 1) {\n            _ref = view.containers;\n            _results = [];\n\n            for (name in _ref) {\n              elem = _ref[name];\n              $elem = $(elem);\n\n              if ($elem.hasClass(css.maximizedContainer)) {\n                continue;\n              }\n\n              $parent = $elem.parent();\n              parentHeight = $parent.height();\n              outer = $elem.outerHeight(true) - $elem.height();\n              $elem.height(parentHeight - outer);\n\n              _results.push($elem.addClass(css.maximizedContainer));\n            }\n\n            return _results;\n          }\n        },\n        restoreContainerHeight: function restoreContainerHeight() {\n          return $(\".\" + css.maximizedContainer).css('height', '').removeClass(css.maximizedContainer);\n        },\n        getElementNode: function getElementNode(node) {\n          if (node != null ? node.jquery : void 0) {\n            return node[0];\n          } else if ((node != null ? node.nodeType : void 0) === 3) {\n            return node.parentNode;\n          } else {\n            return node;\n          }\n        },\n        getComponentView: function getComponentView(node) {\n          return $(node).data('componentView');\n        },\n        getAbsoluteBoundingClientRect: function getAbsoluteBoundingClientRect(node) {\n          var coords, scrollX, scrollY, win, _ref;\n\n          win = node.ownerDocument.defaultView;\n          _ref = this.getScrollPosition(win), scrollX = _ref.scrollX, scrollY = _ref.scrollY;\n          coords = node.getBoundingClientRect();\n          coords = {\n            top: coords.top + scrollY,\n            bottom: coords.bottom + scrollY,\n            left: coords.left + scrollX,\n            right: coords.right + scrollX\n          };\n          coords.height = coords.bottom - coords.top;\n          coords.width = coords.right - coords.left;\n          return coords;\n        },\n        getScrollPosition: function getScrollPosition(win) {\n          return {\n            scrollX: win.pageXOffset !== void 0 ? win.pageXOffset : (win.document.documentElement || win.document.body.parentNode || win.document.body).scrollLeft,\n            scrollY: win.pageYOffset !== void 0 ? win.pageYOffset : (win.document.documentElement || win.document.body.parentNode || win.document.body).scrollTop\n          };\n        }\n      };\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../template/directive_finder\": 72,\n    \"jquery\": \"jquery\"\n  }],\n  42: [function (require, module, exports) {\n    var DragBase, config, css;\n    config = require('../configuration/config');\n    css = config.css;\n\n    module.exports = DragBase = function () {\n      function DragBase(page, options) {\n        var defaultConfig;\n        this.page = page;\n        this.modes = ['direct', 'longpress', 'move'];\n        defaultConfig = {\n          preventDefault: false,\n          onDragStart: void 0,\n          scrollArea: 50,\n          longpress: {\n            showIndicator: true,\n            delay: 400,\n            tolerance: 3\n          },\n          move: {\n            distance: 0\n          }\n        };\n        this.defaultConfig = $.extend(true, defaultConfig, options);\n        this.startPoint = void 0;\n        this.dragHandler = void 0;\n        this.initialized = false;\n        this.started = false;\n      }\n\n      DragBase.prototype.setOptions = function (options) {\n        this.options = $.extend(true, {}, this.defaultConfig, options);\n        return this.mode = options.direct != null ? 'direct' : options.longpress != null ? 'longpress' : options.move != null ? 'move' : 'longpress';\n      };\n\n      DragBase.prototype.setDragHandler = function (dragHandler) {\n        this.dragHandler = dragHandler;\n        return this.dragHandler.page = this.page;\n      };\n\n      DragBase.prototype.init = function (dragHandler, event, options) {\n        this.reset();\n        this.initialized = true;\n        this.setOptions(options);\n        this.setDragHandler(dragHandler);\n        this.startPoint = this.getEventPosition(event);\n        this.addStopListeners(event);\n        this.addMoveListeners(event);\n\n        if (this.mode === 'longpress') {\n          this.addLongpressIndicator(this.startPoint);\n          this.timeout = setTimeout(function (_this) {\n            return function () {\n              _this.removeLongpressIndicator();\n\n              return _this.start(event);\n            };\n          }(this), this.options.longpress.delay);\n        } else if (this.mode === 'direct') {\n          this.start(event);\n        }\n\n        if (this.options.preventDefault) {\n          return event.preventDefault();\n        }\n      };\n\n      DragBase.prototype.move = function (event) {\n        var eventPosition;\n        eventPosition = this.getEventPosition(event);\n\n        if (this.mode === 'longpress') {\n          if (this.distance(eventPosition, this.startPoint) > this.options.longpress.tolerance) {\n            return this.reset();\n          }\n        } else if (this.mode === 'move') {\n          if (this.distance(eventPosition, this.startPoint) > this.options.move.distance) {\n            return this.start(event);\n          }\n        }\n      };\n\n      DragBase.prototype.start = function (event) {\n        var eventPosition;\n        eventPosition = this.getEventPosition(event);\n        this.started = true;\n        this.addBlocker();\n        this.page.$body.addClass(css.preventSelection);\n        return this.dragHandler.start(eventPosition);\n      };\n\n      DragBase.prototype.drop = function (event) {\n        if (this.started) {\n          this.dragHandler.drop(event);\n        }\n\n        if ($.isFunction(this.options.onDrop)) {\n          this.options.onDrop(event, this.dragHandler);\n        }\n\n        return this.reset();\n      };\n\n      DragBase.prototype.cancel = function () {\n        return this.reset();\n      };\n\n      DragBase.prototype.reset = function () {\n        if (this.started) {\n          this.started = false;\n          this.page.$body.removeClass(css.preventSelection);\n        }\n\n        if (this.initialized) {\n          this.initialized = false;\n          this.startPoint = void 0;\n          this.dragHandler.reset();\n          this.dragHandler = void 0;\n\n          if (this.timeout != null) {\n            clearTimeout(this.timeout);\n            this.timeout = void 0;\n          }\n\n          this.page.$document.off('.livingdocs-drag');\n          this.removeLongpressIndicator();\n          return this.removeBlocker();\n        }\n      };\n\n      DragBase.prototype.addBlocker = function () {\n        var $blocker;\n        $blocker = $(\"<div class='\" + css.dragBlocker + \"'>\").attr('style', 'position: absolute; top: 0; bottom: 0; left: 0; right: 0;');\n        return this.page.$body.append($blocker);\n      };\n\n      DragBase.prototype.removeBlocker = function () {\n        return this.page.$body.find(\".\" + css.dragBlocker).remove();\n      };\n\n      DragBase.prototype.addLongpressIndicator = function (_arg) {\n        var $indicator, pageX, pageY;\n        pageX = _arg.pageX, pageY = _arg.pageY;\n\n        if (!this.options.longpress.showIndicator) {\n          return;\n        }\n\n        $indicator = $(\"<div class=\\\"\" + css.longpressIndicator + \"\\\"><div></div></div>\");\n        $indicator.css({\n          left: pageX,\n          top: pageY\n        });\n        return this.page.$body.append($indicator);\n      };\n\n      DragBase.prototype.removeLongpressIndicator = function () {\n        return this.page.$body.find(\".\" + css.longpressIndicator).remove();\n      };\n\n      DragBase.prototype.addStopListeners = function (event) {\n        var eventNames;\n        eventNames = event.type === 'touchstart' ? 'touchend.livingdocs-drag touchcancel.livingdocs-drag touchleave.livingdocs-drag' : event.type === 'dragenter' || event.type === 'dragbetterenter' ? 'drop.livingdocs-drag dragend.livingdocs-drag' : 'mouseup.livingdocs-drag';\n        return this.page.$document.on(eventNames, function (_this) {\n          return function (event) {\n            return _this.drop(event);\n          };\n        }(this));\n      };\n\n      DragBase.prototype.addMoveListeners = function (event) {\n        if (event.type === 'touchstart') {\n          return this.page.$document.on('touchmove.livingdocs-drag', function (_this) {\n            return function (event) {\n              event.preventDefault();\n\n              if (_this.started) {\n                return _this.dragHandler.move(_this.getEventPosition(event));\n              } else {\n                return _this.move(event);\n              }\n            };\n          }(this));\n        } else if (event.type === 'dragenter' || event.type === 'dragbetterenter') {\n          return this.page.$document.on('dragover.livingdocs-drag', function (_this) {\n            return function (event) {\n              if (_this.started) {\n                return _this.dragHandler.move(_this.getEventPosition(event));\n              } else {\n                return _this.move(event);\n              }\n            };\n          }(this));\n        } else {\n          return this.page.$document.on('mousemove.livingdocs-drag', function (_this) {\n            return function (event) {\n              if (_this.started) {\n                return _this.dragHandler.move(_this.getEventPosition(event));\n              } else {\n                return _this.move(event);\n              }\n            };\n          }(this));\n        }\n      };\n\n      DragBase.prototype.getEventPosition = function (event) {\n        if (event.type === 'touchstart' || event.type === 'touchmove') {\n          event = event.originalEvent.changedTouches[0];\n        } else if (event.type === 'dragover') {\n          event = event.originalEvent;\n        }\n\n        return {\n          clientX: event.clientX,\n          clientY: event.clientY,\n          pageX: event.pageX,\n          pageY: event.pageY\n        };\n      };\n\n      DragBase.prototype.distance = function (pointA, pointB) {\n        var distX, distY;\n\n        if (!pointA || !pointB) {\n          return void 0;\n        }\n\n        distX = pointA.pageX - pointB.pageX;\n        distY = pointA.pageY - pointB.pageY;\n        return Math.sqrt(distX * distX + distY * distY);\n      };\n\n      return DragBase;\n    }();\n  }, {\n    \"../configuration/config\": 26\n  }],\n  43: [function (require, module, exports) {\n    var EditableController,\n        config,\n        dom,\n        __slice = [].slice;\n    dom = require('./dom');\n    config = require('../configuration/config');\n\n    module.exports = EditableController = function () {\n      function EditableController(page) {\n        this.page = page;\n        this.editable = new Editable({\n          window: this.page.window,\n          browserSpellcheck: config.editable.browserSpellcheck,\n          mouseMoveSelectionChanges: config.editable.mouseMoveSelectionChanges\n        });\n        this.editableAttr = config.directives.editable.renderedAttr;\n        this.selection = $.Callbacks();\n        this.editable.focus(this.withContext(this.focus)).blur(this.withContext(this.blur)).insert(this.withContext(this.insert)).paste(this.withContext(this.paste)).merge(this.withContext(this.merge)).split(this.withContext(this.split)).selection(this.withContext(this.selectionChanged)).newline(this.withContext(this.newline)).change(this.withContext(this.change));\n      }\n\n      EditableController.prototype.add = function (nodes) {\n        return this.editable.add(nodes);\n      };\n\n      EditableController.prototype.disableAll = function () {\n        return this.editable.suspend();\n      };\n\n      EditableController.prototype.reenableAll = function () {\n        return this.editable[\"continue\"]();\n      };\n\n      EditableController.prototype.withContext = function (func) {\n        return function (_this) {\n          return function () {\n            var args, editableName, element, view;\n            element = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n            view = dom.findComponentView(element);\n            editableName = element.getAttribute(_this.editableAttr);\n            args.unshift(view, editableName);\n            return func.apply(_this, args);\n          };\n        }(this);\n      };\n\n      EditableController.prototype.extractContent = function (element) {\n        var value;\n        value = this.editable.getContent(element);\n\n        if (config.singleLineBreak.test(value) || value === '') {\n          return void 0;\n        } else {\n          return value;\n        }\n      };\n\n      EditableController.prototype.updateModel = function (view, editableName, element) {\n        var value;\n        value = this.extractContent(element);\n        return view.model.set(editableName, value);\n      };\n\n      EditableController.prototype.focus = function (view, editableName) {\n        var element;\n        view.focusEditable(editableName);\n        element = view.getDirectiveElement(editableName);\n        this.page.focus.editableFocused(element, view);\n        return true;\n      };\n\n      EditableController.prototype.blur = function (view, editableName) {\n        var element;\n        this.clearChangeTimeout();\n        element = view.getDirectiveElement(editableName);\n        this.updateModel(view, editableName, element);\n        view.blurEditable(editableName);\n        this.page.focus.editableBlurred(element, view);\n        return true;\n      };\n\n      EditableController.prototype.insert = function (view, editableName, direction, cursor) {\n        var copy, defaultParagraph, newView;\n        var newModel = null; // todo(Marcus) - this needs to use this component type's \"insertAfter\" attribute\n        // handle LIs \n\n        if (cursor.host && cursor.host.nodeName == 'LI') {\n          // duplicate the current type\n          newModel = dom.findComponentView(cursor.host);\n        }\n\n        defaultParagraph = newModel ? newModel.template : this.page.design.defaultParagraph;\n\n        if (this.hasSingleEditable(view) && defaultParagraph != null) {\n          copy = defaultParagraph.createModel();\n          newView = direction === 'before' ? (view.model.before(copy), view.prev()) : (view.model.after(copy), view.next());\n\n          if (newView && direction === 'after') {\n            newView.focus();\n          }\n        }\n\n        return false;\n      };\n\n      EditableController.prototype.paste = function (view, editableName, blocks, cursor) {\n        var block, currentBlock, defaultParagraph, firstBlock, firstEditable, index, newBlock, viewDirective, _i, _len, _ref;\n\n        firstBlock = blocks[0];\n        cursor.insertBefore(firstBlock);\n\n        if (blocks.length <= 1) {\n          cursor.setVisibleSelection();\n        } else {\n          defaultParagraph = this.page.design.defaultParagraph;\n          firstEditable = (_ref = defaultParagraph.directives['editable']) != null ? _ref[0] : void 0;\n          currentBlock = view.model;\n\n          for (index = _i = 0, _len = blocks.length; _i < _len; index = ++_i) {\n            block = blocks[index];\n\n            if (index === 0) {\n              continue;\n            }\n\n            newBlock = defaultParagraph.createModel();\n            newBlock.set(firstEditable.name, block);\n            currentBlock.after(newBlock);\n            currentBlock = newBlock;\n          }\n\n          view = currentBlock.getMainView();\n\n          if (view != null) {\n            viewDirective = view.directives.get(firstEditable.name);\n            cursor = this.editable.createCursorAtEnd(viewDirective.elem);\n            cursor.setVisibleSelection();\n          }\n        }\n\n        return false;\n      };\n\n      EditableController.prototype.merge = function (view, editableName, direction, cursor) {\n        var contentToMerge, mergedView, mergedViewElem, viewElem;\n\n        if (this.hasSingleEditable(view)) {\n          mergedView = direction === 'before' ? view.prev() : view.next();\n\n          if (mergedView && mergedView.template === view.template) {\n            viewElem = view.getDirectiveElement(editableName);\n            mergedViewElem = mergedView.getDirectiveElement(editableName);\n            contentToMerge = this.editable.getContent(viewElem);\n            cursor = direction === 'before' ? this.editable.appendTo(mergedViewElem, contentToMerge) : this.editable.prependTo(mergedViewElem, contentToMerge);\n            view.model.remove();\n            cursor.setVisibleSelection();\n            this.updateModel(mergedView, editableName, mergedViewElem);\n          }\n        }\n\n        return false;\n      };\n\n      EditableController.prototype.split = function (view, editableName, before, after, cursor) {\n        var copy, _ref;\n\n        if (this.hasSingleEditable(view)) {\n          copy = view.template.createModel();\n          copy.set(editableName, this.extractContent(after));\n          view.model.after(copy);\n\n          if ((_ref = view.next()) != null) {\n            _ref.focus();\n          }\n\n          view.model.set(editableName, this.extractContent(before));\n        }\n\n        return false;\n      };\n\n      EditableController.prototype.selectionChanged = function (view, editableName, selection) {\n        var element;\n        element = view.getDirectiveElement(editableName);\n        return this.selection.fire(view, element, selection);\n      };\n\n      EditableController.prototype.newline = function (view, editable, cursor) {\n        if (config.editable.allowNewline) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      EditableController.prototype.change = function (view, editableName) {\n        this.clearChangeTimeout();\n\n        if (config.editable.changeDelay === false) {\n          return;\n        }\n\n        return this.changeTimeout = setTimeout(function (_this) {\n          return function () {\n            var elem;\n            elem = view.getDirectiveElement(editableName);\n\n            _this.updateModel(view, editableName, elem);\n\n            return _this.changeTimeout = void 0;\n          };\n        }(this), config.editable.changeDelay);\n      };\n\n      EditableController.prototype.clearChangeTimeout = function () {\n        if (this.changeTimeout != null) {\n          clearTimeout(this.changeTimeout);\n          return this.changeTimeout = void 0;\n        }\n      };\n\n      EditableController.prototype.hasSingleEditable = function (view) {\n        return view.directives.length === 1 && view.directives[0].type === 'editable';\n      };\n\n      return EditableController;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"./dom\": 41\n  }],\n  44: [function (require, module, exports) {\n    var ContainerEvent, Focus, dom;\n    dom = require('./dom');\n    ContainerEvent = require('./container_event');\n\n    module.exports = Focus = function () {\n      function Focus() {\n        this.editableNode = void 0;\n        this.componentView = void 0;\n        this.componentFocus = $.Callbacks();\n        this.componentBlur = $.Callbacks();\n        this.containerFocus = $.Callbacks();\n        this.containerBlur = $.Callbacks();\n      }\n\n      Focus.prototype.setFocus = function (componentView, editableNode) {\n        if (editableNode !== this.editableNode) {\n          this.resetEditable();\n          this.editableNode = editableNode;\n        }\n\n        if (componentView !== this.componentView) {\n          this.resetComponentView();\n\n          if (componentView) {\n            this.componentView = componentView;\n            this.componentFocus.fire(this.componentView);\n            return this.fireContainerEvent({\n              view: this.componentView,\n              focus: true\n            });\n          }\n        }\n      };\n\n      Focus.prototype.editableFocused = function (editableNode, componentView) {\n        if (this.editableNode !== editableNode) {\n          componentView || (componentView = dom.findComponentView(editableNode));\n          return this.setFocus(componentView, editableNode);\n        }\n      };\n\n      Focus.prototype.editableBlurred = function (editableNode) {\n        if (this.editableNode === editableNode) {\n          return this.setFocus(this.componentView, void 0);\n        }\n      };\n\n      Focus.prototype.componentFocused = function (componentView) {\n        if (this.componentView !== componentView) {\n          return this.setFocus(componentView, void 0);\n        }\n      };\n\n      Focus.prototype.blur = function () {\n        return this.setFocus(void 0, void 0);\n      };\n\n      Focus.prototype.resetEditable = function () {\n        if (this.editableNode) {\n          return this.editableNode = void 0;\n        }\n      };\n\n      Focus.prototype.resetComponentView = function () {\n        var previous;\n\n        if (this.componentView) {\n          previous = this.componentView;\n          this.componentView = void 0;\n          this.componentBlur.fire(previous);\n          return this.fireContainerEvent({\n            view: previous,\n            blur: true\n          });\n        }\n      };\n\n      Focus.prototype.fireContainerEvent = function (_arg) {\n        var blur, component, event, focus, view;\n        view = _arg.view, focus = _arg.focus, blur = _arg.blur;\n        event = new ContainerEvent({\n          target: view,\n          focus: focus,\n          blur: blur\n        });\n        component = view.model;\n        return component.parentContainers(function (_this) {\n          return function (container) {\n            return _this[event.type].fire(container, event);\n          };\n        }(this));\n      };\n\n      return Focus;\n    }();\n  }, {\n    \"./container_event\": 40,\n    \"./dom\": 41\n  }],\n  45: [function (require, module, exports) {\n    var ComponentTree,\n        Dependencies,\n        EventEmitter,\n        FieldExtractor,\n        InteractivePage,\n        Livingdoc,\n        MetadataConfig,\n        Page,\n        Renderer,\n        RenderingContainer,\n        View,\n        assert,\n        config,\n        designCache,\n        dom,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    assert = require('./modules/logging/assert');\n    RenderingContainer = require('./rendering_container/rendering_container');\n    Page = require('./rendering_container/page');\n    InteractivePage = require('./rendering_container/interactive_page');\n    Renderer = require('./rendering/renderer');\n    View = require('./rendering/view');\n    EventEmitter = require('wolfy87-eventemitter');\n    config = require('./configuration/config');\n    dom = require('./interaction/dom');\n    designCache = require('./design/design_cache');\n    ComponentTree = require('./component_tree/component_tree');\n    Dependencies = require('./rendering/dependencies');\n    FieldExtractor = require('./component_tree/field_extractor');\n    MetadataConfig = require('./configuration/metadata_config');\n\n    module.exports = Livingdoc = function (_super) {\n      __extends(Livingdoc, _super);\n\n      Livingdoc.create = function (_arg) {\n        var componentTree, data, design, designName, designVersion, layoutName, _ref, _ref1;\n\n        data = _arg.data, designName = _arg.designName, designVersion = _arg.designVersion, layoutName = _arg.layoutName, componentTree = _arg.componentTree;\n        componentTree = data != null ? (designName = (_ref = data.design) != null ? _ref.name : void 0, designVersion = (_ref1 = data.design) != null ? _ref1.version : void 0, assert(designName != null, 'Error creating livingdoc: No design name is specified.'), assert(designVersion != null, 'Error creating livingdoc: No design version is specified.'), design = designCache.get(designName, designVersion), new ComponentTree({\n          content: data,\n          design: design\n        })) : designName != null && designVersion != null ? (design = designCache.get(designName, designVersion), new ComponentTree({\n          design: design\n        })) : componentTree != null ? componentTree : assert(false, 'Insufficient parameters to livingdoc#create. Pass either data, design name and version or component tree');\n\n        if (data != null ? data.layout : void 0) {\n          layoutName = data.layout;\n        }\n\n        return new Livingdoc({\n          componentTree: componentTree,\n          layoutName: layoutName\n        });\n      };\n\n      function Livingdoc(_arg) {\n        this.componentTree = _arg.componentTree, this.layoutName = _arg.layoutName;\n        this.model = this.componentTree;\n        this.interactiveView = void 0;\n        this.readOnlyViews = [];\n        this.design = this.componentTree.design;\n        this.dependencies = new Dependencies({\n          componentTree: this.componentTree\n        });\n        this.metadataConfig = new MetadataConfig(this.design.metadata);\n        this.fieldExtractor = new FieldExtractor(this.componentTree, this.metadataConfig);\n        this.forwardComponentTreeEvents();\n      }\n\n      Livingdoc.prototype.getDropTarget = function (_arg) {\n        var clientX, clientY, coords, document, elem, event, target;\n        event = _arg.event;\n        document = event.target.ownerDocument;\n        clientX = event.clientX, clientY = event.clientY;\n        elem = document.elementFromPoint(clientX, clientY);\n\n        if (elem != null) {\n          coords = {\n            left: event.pageX,\n            top: event.pageY\n          };\n          return target = dom.dropTarget(elem, coords);\n        }\n      };\n\n      Livingdoc.prototype.forwardComponentTreeEvents = function () {\n        return this.componentTree.changed.add(function (_this) {\n          return function () {\n            return _this.emit('change', arguments);\n          };\n        }(this));\n      };\n\n      Livingdoc.prototype.createView = function (_arg) {\n        var $host, host, iframe, interactive, layoutName, loadResources, view, viewWrapper, wrapper;\n        host = _arg.host, interactive = _arg.interactive, loadResources = _arg.loadResources, wrapper = _arg.wrapper, layoutName = _arg.layoutName, iframe = _arg.iframe;\n        $host = $(host);\n\n        if (iframe == null) {\n          iframe = true;\n        }\n\n        $host.html('');\n        viewWrapper = this.getWrapper({\n          wrapper: wrapper,\n          layoutName: layoutName\n        });\n        view = new View({\n          livingdoc: this,\n          parent: $host,\n          isInteractive: interactive,\n          loadResources: loadResources,\n          wrapper: viewWrapper\n        });\n        this.addView(view);\n        return view.create({\n          renderInIframe: iframe\n        });\n      };\n\n      Livingdoc.prototype.appendTo = function (options) {\n        if (options == null) {\n          options = {};\n        }\n\n        options.iframe = false;\n        return this.createView(options);\n      };\n\n      Livingdoc.prototype.createComponent = function () {\n        return this.componentTree.createComponent.apply(this.componentTree, arguments);\n      };\n\n      Livingdoc.prototype.getWrapper = function (_arg) {\n        var layoutName, wrapper, _ref;\n\n        wrapper = _arg.wrapper, layoutName = _arg.layoutName;\n\n        if (wrapper != null) {\n          return wrapper;\n        } else {\n          if (layoutName == null) {\n            layoutName = this.layoutName;\n          }\n\n          return (_ref = this.design.getLayout(layoutName)) != null ? _ref.wrapper : void 0;\n        }\n      };\n\n      Livingdoc.prototype.addView = function (view) {\n        if (view.isInteractive) {\n          assert(this.interactiveView == null, 'Error creating interactive view: A Livingdoc can have only one interactive view');\n          this.interactiveView = view;\n          return view.whenReady.then(function (_this) {\n            return function (_arg) {\n              var iframe, renderer;\n              iframe = _arg.iframe, renderer = _arg.renderer;\n              return _this.componentTree.setMainView(view);\n            };\n          }(this));\n        } else {\n          return this.readOnlyViews.push(view);\n        }\n      };\n\n      Livingdoc.prototype.addJsDependency = function (obj) {\n        return this.dependencies.addJs(obj);\n      };\n\n      Livingdoc.prototype.addCssDependency = function (obj) {\n        return this.dependencies.addCss(obj);\n      };\n\n      Livingdoc.prototype.hasDependencies = function () {\n        var _ref, _ref1;\n\n        return ((_ref = this.dependencies) != null ? _ref.hasJs() : void 0) || ((_ref1 = this.dependencies) != null ? _ref1.hasCss() : void 0);\n      };\n\n      Livingdoc.prototype.toHtml = function (_arg) {\n        var excludeComponents;\n        excludeComponents = (_arg != null ? _arg : {}).excludeComponents;\n        return new Renderer({\n          componentTree: this.componentTree,\n          renderingContainer: new RenderingContainer(),\n          excludeComponents: excludeComponents\n        }).html();\n      };\n\n      Livingdoc.prototype.serialize = function () {\n        var serialized;\n        serialized = this.componentTree.serialize();\n        serialized['layout'] = this.layoutName;\n        return serialized;\n      };\n\n      Livingdoc.prototype.toJson = function (prettify) {\n        var data, indentation, replacer;\n        data = this.serialize();\n\n        if (prettify != null) {\n          replacer = null;\n          indentation = 2;\n          return JSON.stringify(data, replacer, indentation);\n        } else {\n          return JSON.stringify(data);\n        }\n      };\n\n      Livingdoc.prototype.printModel = function () {\n        return this.componentTree.print();\n      };\n\n      Livingdoc.dom = dom;\n      return Livingdoc;\n    }(EventEmitter);\n  }, {\n    \"./component_tree/component_tree\": 19,\n    \"./component_tree/field_extractor\": 21,\n    \"./configuration/config\": 26,\n    \"./configuration/metadata_config\": 27,\n    \"./design/design_cache\": 30,\n    \"./interaction/dom\": 41,\n    \"./modules/logging/assert\": 50,\n    \"./rendering/dependencies\": 57,\n    \"./rendering/renderer\": 60,\n    \"./rendering/view\": 61,\n    \"./rendering_container/interactive_page\": 65,\n    \"./rendering_container/page\": 67,\n    \"./rendering_container/rendering_container\": 68,\n    \"wolfy87-eventemitter\": 11\n  }],\n  46: [function (require, module, exports) {\n    var __slice = [].slice;\n\n    module.exports = function () {\n      return {\n        callOnce: function callOnce(callbacks, listener) {\n          var _selfRemovingFunc;\n\n          _selfRemovingFunc = function selfRemovingFunc() {\n            var args;\n            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n            callbacks.remove(_selfRemovingFunc);\n            return listener.apply(this, args);\n          };\n\n          callbacks.add(_selfRemovingFunc);\n          return _selfRemovingFunc;\n        }\n      };\n    }();\n  }, {}],\n  47: [function (require, module, exports) {\n    var $;\n    $ = require('jquery');\n\n    module.exports = function () {\n      return {\n        htmlPointerEvents: function htmlPointerEvents() {\n          var element;\n          element = $('<x>')[0];\n          element.style.cssText = 'pointer-events:auto';\n          return element.style.pointerEvents === 'auto';\n        }\n      };\n    }();\n  }, {\n    \"jquery\": \"jquery\"\n  }],\n  48: [function (require, module, exports) {\n    var detects, executedTests;\n    detects = require('./feature_detects');\n    executedTests = {};\n\n    module.exports = function (name) {\n      var result;\n\n      if ((result = executedTests[name]) === void 0) {\n        return executedTests[name] = Boolean(detects[name]());\n      } else {\n        return result;\n      }\n    };\n  }, {\n    \"./feature_detects\": 47\n  }],\n  49: [function (require, module, exports) {\n    module.exports = function () {\n      var idCounter, lastId;\n      idCounter = lastId = void 0;\n      return {\n        next: function next(user) {\n          var nextId;\n\n          if (user == null) {\n            user = 'doc';\n          }\n\n          nextId = Date.now().toString(32);\n\n          if (lastId === nextId) {\n            idCounter += 1;\n          } else {\n            idCounter = 0;\n            lastId = nextId;\n          }\n\n          return \"\" + user + \"-\" + nextId + idCounter;\n        }\n      };\n    }();\n  }, {}],\n  50: [function (require, module, exports) {\n    var assert, log;\n    log = require('./log');\n\n    module.exports = assert = function assert(condition, message) {\n      if (!condition) {\n        return log.error(message);\n      }\n    };\n  }, {\n    \"./log\": 51\n  }],\n  51: [function (require, module, exports) {\n    var log,\n        __slice = [].slice,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    module.exports = log = function log() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\n      if (window.console != null) {\n        if (args.length && args[args.length - 1] === 'trace') {\n          args.pop();\n\n          if (window.console.trace != null) {\n            window.console.trace();\n          }\n        }\n\n        window.console.log.apply(window.console, args);\n        return void 0;\n      }\n    };\n\n    (function () {\n      var LivingdocsError, notify;\n\n      LivingdocsError = function (_super) {\n        __extends(LivingdocsError, _super);\n\n        function LivingdocsError(message) {\n          LivingdocsError.__super__.constructor.apply(this, arguments);\n\n          this.message = message;\n          this.thrownByLivingdocs = true;\n        }\n\n        return LivingdocsError;\n      }(Error);\n\n      notify = function notify(message, level) {\n        if (level == null) {\n          level = 'error';\n        }\n\n        if (typeof _rollbar !== \"undefined\" && _rollbar !== null) {\n          _rollbar.push(new Error(message), function () {\n            var _ref;\n\n            if ((level === 'critical' || level === 'error') && ((_ref = window.console) != null ? _ref.error : void 0) != null) {\n              return window.console.error.call(window.console, message);\n            } else {\n              return log.call(void 0, message);\n            }\n          });\n        } else {\n          if (level === 'critical' || level === 'error') {\n            throw new LivingdocsError(message);\n          } else {\n            log.call(void 0, message);\n          }\n        }\n\n        return void 0;\n      };\n\n      log.debug = function (message) {\n        if (!log.debugDisabled) {\n          return notify(message, 'debug');\n        }\n      };\n\n      log.warn = function (message) {\n        if (!log.warningsDisabled) {\n          return notify(message, 'warning');\n        }\n      };\n\n      return log.error = function (message) {\n        return notify(message, 'error');\n      };\n    })();\n  }, {}],\n  52: [function (require, module, exports) {\n    var OrderedHash;\n\n    module.exports = OrderedHash = function () {\n      function OrderedHash() {\n        this.obj = {};\n        this.length = 0;\n      }\n\n      OrderedHash.prototype.push = function (key, value) {\n        this.obj[key] = value;\n        this[this.length] = value;\n        return this.length += 1;\n      };\n\n      OrderedHash.prototype.get = function (key) {\n        return this.obj[key];\n      };\n\n      OrderedHash.prototype.each = function (callback) {\n        var value, _i, _len, _results;\n\n        _results = [];\n\n        for (_i = 0, _len = this.length; _i < _len; _i++) {\n          value = this[_i];\n\n          _results.push(callback(value));\n        }\n\n        return _results;\n      };\n\n      OrderedHash.prototype.toArray = function () {\n        var value, _i, _len, _results;\n\n        _results = [];\n\n        for (_i = 0, _len = this.length; _i < _len; _i++) {\n          value = this[_i];\n\n          _results.push(value);\n        }\n\n        return _results;\n      };\n\n      return OrderedHash;\n    }();\n  }, {}],\n  53: [function (require, module, exports) {\n    var Semaphore, assert;\n    assert = require('../modules/logging/assert');\n\n    module.exports = Semaphore = function () {\n      function Semaphore() {\n        this.count = 0;\n        this.started = false;\n        this.wasFired = false;\n        this.callbacks = [];\n      }\n\n      Semaphore.prototype.addCallback = function (callback) {\n        if (this.wasFired) {\n          return callback();\n        } else {\n          return this.callbacks.push(callback);\n        }\n      };\n\n      Semaphore.prototype.isReady = function () {\n        return this.wasFired;\n      };\n\n      Semaphore.prototype.start = function () {\n        assert(!this.started, \"Unable to start Semaphore once started.\");\n        this.started = true;\n        return this.fireIfReady();\n      };\n\n      Semaphore.prototype.increment = function (num) {\n        if (num == null) {\n          num = 1;\n        }\n\n        assert(!this.wasFired, \"Unable to increment count once Semaphore is fired.\");\n        return this.count += num;\n      };\n\n      Semaphore.prototype.decrement = function (num) {\n        if (num == null) {\n          num = 1;\n        }\n\n        assert(this.count > 0, \"Unable to decrement count resulting in negative count.\");\n        this.count -= num;\n        return this.fireIfReady();\n      };\n\n      Semaphore.prototype.wait = function (num) {\n        this.increment(num);\n        return function (_this) {\n          return function () {\n            return _this.decrement(num);\n          };\n        }(this);\n      };\n\n      Semaphore.prototype.fireIfReady = function () {\n        var callback, _i, _len, _ref, _results;\n\n        if (this.count === 0 && this.started === true) {\n          this.wasFired = true;\n          _ref = this.callbacks;\n          _results = [];\n\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            callback = _ref[_i];\n\n            _results.push(callback());\n          }\n\n          return _results;\n        }\n      };\n\n      return Semaphore;\n    }();\n  }, {\n    \"../modules/logging/assert\": 50\n  }],\n  54: [function (require, module, exports) {\n    module.exports = function () {\n      return {\n        isEmpty: function isEmpty(obj) {\n          var name;\n\n          if (obj == null) {\n            return true;\n          }\n\n          for (name in obj) {\n            if (obj.hasOwnProperty(name)) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        flatCopy: function flatCopy(obj) {\n          var copy, name, value;\n          copy = void 0;\n\n          for (name in obj) {\n            value = obj[name];\n            copy || (copy = {});\n            copy[name] = value;\n          }\n\n          return copy;\n        }\n      };\n    }();\n  }, {}],\n  55: [function (require, module, exports) {\n    var $;\n    $ = require('jquery');\n\n    module.exports = function () {\n      return {\n        humanize: function humanize(str) {\n          var uncamelized;\n          uncamelized = $.trim(str).replace(/([a-z\\d])([A-Z]+)/g, '$1 $2').toLowerCase();\n          return this.titleize(uncamelized);\n        },\n        capitalize: function capitalize(str) {\n          str = str == null ? '' : String(str);\n          return str.charAt(0).toUpperCase() + str.slice(1);\n        },\n        titleize: function titleize(str) {\n          if (str == null) {\n            return '';\n          } else {\n            return String(str).replace(/(?:^|\\s)\\S/g, function (c) {\n              return c.toUpperCase();\n            });\n          }\n        },\n        snakeCase: function snakeCase(str) {\n          return $.trim(str).replace(/([A-Z])/g, '-$1').replace(/[-_\\s]+/g, '-').toLowerCase();\n        },\n        prefix: function prefix(_prefix, string) {\n          if (string.indexOf(_prefix) === 0) {\n            return string;\n          } else {\n            return \"\" + _prefix + string;\n          }\n        },\n        readableJson: function readableJson(obj) {\n          return JSON.stringify(obj, null, 2);\n        },\n        camelize: function camelize(str) {\n          return $.trim(str).replace(/[-_\\s]+(.)?/g, function (match, c) {\n            return c.toUpperCase();\n          });\n        },\n        trim: function trim(str) {\n          return str.replace(/^\\s+|\\s+$/g, '');\n        },\n        extractTextFromHtml: function extractTextFromHtml(str) {\n          var div;\n          div = $('<div>')[0];\n          div.innerHTML = str;\n          return div.textContent;\n        }\n      };\n    }();\n  }, {\n    \"jquery\": \"jquery\"\n  }],\n  56: [function (require, module, exports) {\n    var $, ComponentView, DirectiveIterator, attr, config, css, dom, eventing;\n    $ = require('jquery');\n    config = require('../configuration/config');\n    css = config.css;\n    attr = config.attr;\n    DirectiveIterator = require('../template/directive_iterator');\n    eventing = require('../modules/eventing');\n    dom = require('../interaction/dom');\n\n    module.exports = ComponentView = function () {\n      function ComponentView(_arg) {\n        this.model = _arg.model, this.$html = _arg.$html, this.directives = _arg.directives, this.isReadOnly = _arg.isReadOnly;\n        this.renderer = void 0;\n        this.$elem = this.$html;\n        this.template = this.model.template;\n        this.isAttachedToDom = false;\n        this.wasAttachedToDom = $.Callbacks();\n        this.decorateMarkup();\n        this.render();\n      }\n\n      ComponentView.prototype.decorateMarkup = function () {\n        if (!this.isReadOnly) {\n          return this.$html.data('componentView', this).addClass(css.component).attr(attr.template, this.template.identifier);\n        }\n      };\n\n      ComponentView.prototype.setRenderer = function (renderer) {\n        return this.renderer = renderer;\n      };\n\n      ComponentView.prototype.removeRenderer = function () {\n        return this.renderer = void 0;\n      };\n\n      ComponentView.prototype.viewForModel = function (model) {\n        var _ref;\n\n        if (model != null) {\n          return (_ref = this.renderer) != null ? _ref.getComponentViewById(model.id) : void 0;\n        }\n      };\n\n      ComponentView.prototype.recreateHtml = function () {\n        var _ref;\n\n        this.isAttachedToDom = false;\n        _ref = this.model.template.createViewHtml(this.model), this.$elem = _ref.$elem, this.directives = _ref.directives;\n        this.$html = this.$elem;\n        this.decorateMarkup();\n        return this.render();\n      };\n\n      ComponentView.prototype.refresh = function () {\n        return this.renderer.refreshComponent(this.model);\n      };\n\n      ComponentView.prototype.render = function (mode) {\n        this.updateContent();\n        return this.updateHtml();\n      };\n\n      ComponentView.prototype.updateContent = function (directiveName) {\n        var attributes, name, _ref, $elem;\n\n        if (directiveName) {\n          this.set(directiveName, this.model.content[directiveName]);\n        } else {\n          this.setAll();\n        }\n\n        if (!this.hasFocus()) {\n          this.displayOptionals();\n        }\n\n        attributes = this.model.getData('data_attributes');\n        _ref = this;\n\n        var updateElem = function updateElem(name) {\n          if (attributes && attributes[name]) {\n            $elem = _ref.directives.$getElem(name);\n\n            for (var attr in attributes[name]) {\n              $elem.attr(attr, attributes[name][attr]);\n            }\n          }\n        };\n\n        if (directiveName) {\n          updateElem(directiveName);\n        } else {\n          for (var i = 0; i < this.directives.length; i++) {\n            updateElem(this.directives[i].name);\n          }\n        }\n\n        return this.stripHtmlIfReadOnly();\n      };\n\n      ComponentView.prototype.updateHtml = function () {\n        var name, value, _ref;\n\n        _ref = this.model.styles;\n\n        for (name in _ref) {\n          value = _ref[name];\n          this.setStyle(name, value);\n        }\n\n        return this.stripHtmlIfReadOnly();\n      };\n\n      ComponentView.prototype.displayOptionals = function () {\n        return this.directives.each(function (_this) {\n          return function (directive) {\n            var $elem;\n\n            if (directive.optional) {\n              $elem = $(directive.elem);\n\n              if (_this.model.isEmpty(directive.name)) {\n                return $elem.css('display', 'none');\n              } else {\n                return $elem.css('display', '');\n              }\n            }\n          };\n        }(this));\n      };\n\n      ComponentView.prototype.showOptionals = function () {\n        return this.directives.each(function (_this) {\n          return function (directive) {\n            if (directive.optional) {\n              return config.animations.optionals.show($(directive.elem));\n            }\n          };\n        }(this));\n      };\n\n      ComponentView.prototype.hideEmptyOptionals = function () {\n        return this.directives.each(function (_this) {\n          return function (directive) {\n            if (directive.optional && _this.model.isEmpty(directive.name)) {\n              return config.animations.optionals.hide($(directive.elem));\n            }\n          };\n        }(this));\n      };\n\n      ComponentView.prototype.afterFocused = function () {\n        this.$html.addClass(css.componentHighlight);\n        return this.showOptionals();\n      };\n\n      ComponentView.prototype.afterBlurred = function () {\n        this.$html.removeClass(css.componentHighlight);\n        return this.hideEmptyOptionals();\n      };\n\n      ComponentView.prototype.focus = function (editableName) {\n        var directive, _ref;\n\n        directive = editableName ? this.directives.get(editableName) : (_ref = this.directives.editable) != null ? _ref[0] : void 0;\n        return $(directive != null ? directive.elem : void 0).focus();\n      };\n\n      ComponentView.prototype.hasFocus = function () {\n        return this.$html.hasClass(css.componentHighlight);\n      };\n\n      ComponentView.prototype.getBoundingClientRect = function () {\n        return this.$html[0].getBoundingClientRect();\n      };\n\n      ComponentView.prototype.getAbsoluteBoundingClientRect = function () {\n        return dom.getAbsoluteBoundingClientRect(this.$html[0]);\n      };\n\n      ComponentView.prototype.setAll = function () {\n        var name, value, _ref;\n\n        _ref = this.model.content;\n\n        for (name in _ref) {\n          value = _ref[name];\n          this.set(name, value);\n        }\n\n        return void 0;\n      };\n\n      ComponentView.prototype.set = function (name, value) {\n        var directive, attributes, $elem, result;\n        directive = this.model.directives.get(name);\n\n        switch (directive.type) {\n          case 'editable':\n            return this.setEditable(name, value);\n\n          case 'image':\n            if (directive.base64Image != null) {\n              return this.setImage(name, directive.base64Image);\n            } else {\n              return this.setImage(name, directive.getImageUrl());\n            }\n\n            break;\n\n          case 'embeditem':\n            return this.setEmbedItem(name, value);\n\n          case 'html':\n            return this.setHtml(name, value);\n\n          case 'link':\n            return this.setLink(name, value);\n        }\n      };\n\n      ComponentView.prototype.get = function (name) {\n        var directive;\n        directive = this.directives.get(name);\n\n        switch (directive.type) {\n          case 'editable':\n            return this.getEditable(name);\n\n          case 'image':\n            return this.getImage(name);\n\n          case 'html':\n            return this.getHtml(name);\n\n          case 'link':\n            return this.getLink(name);\n        }\n      };\n\n      ComponentView.prototype.getEditable = function (name) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n        return $elem.html();\n      };\n\n      ComponentView.prototype.setEditable = function (name, value) {\n        var $elem, element, elementHasFocus, ownerDocument;\n        $elem = this.directives.$getElem(name);\n        element = $elem[0];\n        ownerDocument = element.ownerDocument;\n        elementHasFocus = ownerDocument.activeElement === element;\n\n        if (elementHasFocus) {\n          return;\n        }\n\n        $elem.toggleClass(css.noPlaceholder, Boolean(value));\n        $elem.attr(attr.placeholder, this.template.defaults[name]);\n        return $elem.html(value || '');\n      };\n\n      ComponentView.prototype.focusEditable = function (name) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n        return $elem.addClass(css.noPlaceholder);\n      };\n\n      ComponentView.prototype.blurEditable = function (name) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n\n        if (this.model.isEmpty(name)) {\n          return $elem.removeClass(css.noPlaceholder);\n        }\n      };\n\n      ComponentView.prototype.getHtml = function (name) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n        return $elem.html();\n      };\n\n      ComponentView.prototype.setHtml = function (name, value) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n        $elem.html(value || '');\n\n        if (!value) {\n          $elem.html(this.template.defaults[name]);\n        } else if (value && !this.isReadOnly) {\n          this.blockInteraction($elem);\n        }\n\n        this.directivesToReset || (this.directivesToReset = {});\n        return this.directivesToReset[name] = name;\n      };\n\n      ComponentView.prototype.setEmbedItem = function (name, value) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n        value = value || {\n          source: '',\n          attrs: '',\n          content: null\n        };\n\n        if (!value.content) {\n          value.content = this.template.defaults[name];\n        }\n\n        $elem.attr('data-embed-source-' + name, value.source);\n        $elem.attr('data-embed-attrs-' + name, value.attrs);\n        $elem.html(value.content);\n        this.directivesToReset || (this.directivesToReset = {});\n        return this.directivesToReset[name] = name;\n      };\n\n      ComponentView.prototype.getEmbedItem = function (name) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n        return $elem.attr('data-embed-source-' + name);\n      };\n\n      ComponentView.prototype.setLink = function (name, value) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n\n        if (value) {\n          return $elem.attr('href', value);\n        } else {\n          return $elem.removeAttr('href');\n        }\n      };\n\n      ComponentView.prototype.getLink = function (name) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n        return $elem.attr('href');\n      };\n\n      ComponentView.prototype.getDirectiveElement = function (directiveName) {\n        var _ref;\n\n        return (_ref = this.directives.get(directiveName)) != null ? _ref.elem : void 0;\n      };\n\n      ComponentView.prototype.resetDirectives = function () {\n        var $elem, name, _results;\n\n        _results = [];\n\n        for (name in this.directivesToReset) {\n          $elem = this.directives.$getElem(name);\n\n          if ($elem.find('iframe').length) {\n            _results.push(this.set(name, this.model.content[name]));\n          } else {\n            _results.push(void 0);\n          }\n        }\n\n        return _results;\n      };\n\n      ComponentView.prototype.getImage = function (name) {\n        var $elem;\n        $elem = this.directives.$getElem(name);\n        return $elem.attr('src');\n      };\n\n      ComponentView.prototype.setImage = function (name, value) {\n        var $elem, imageService, setPlaceholder;\n        $elem = this.directives.$getElem(name);\n\n        if (value) {\n          this.cancelDelayed(name);\n          imageService = this.model.directives.get(name).getImageService();\n          imageService.set($elem, value);\n          return $elem.removeClass(config.css.emptyImage);\n        } else {\n          setPlaceholder = $.proxy(this.setPlaceholderImage, this, $elem, name);\n          return this.delayUntilAttached(name, setPlaceholder);\n        }\n      };\n\n      ComponentView.prototype.setPlaceholderImage = function ($elem, name) {\n        var imageService;\n        $elem.addClass(config.css.emptyImage);\n        imageService = this.model.directives.get(name).getImageService();\n        return imageService.set($elem, config.imagePlaceholder);\n      };\n\n      ComponentView.prototype.setStyle = function (name, className) {\n        var changes, removeClass, _i, _len, _ref;\n\n        changes = this.template.styles[name].cssClassChanges(className, this.$html.attr('class'));\n\n        if (changes.remove) {\n          _ref = changes.remove;\n\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            removeClass = _ref[_i];\n            this.$html.removeClass(removeClass);\n          }\n        }\n\n        return this.$html.addClass(changes.add);\n      };\n\n      ComponentView.prototype.disableTabbing = function ($elem) {\n        return setTimeout(function (_this) {\n          return function () {\n            return $elem.find('iframe').attr('tabindex', '-1');\n          };\n        }(this), 400);\n      };\n\n      ComponentView.prototype.blockInteraction = function ($elem) {\n        var $blocker;\n        this.ensureRelativePosition($elem);\n        $blocker = $(\"<div class='\" + css.interactionBlocker + \"'>\").attr('style', 'position: absolute; top: 0; bottom: 0; left: 0; right: 0;');\n        $elem.append($blocker);\n        return this.disableTabbing($elem);\n      };\n\n      ComponentView.prototype.ensureRelativePosition = function ($elem) {\n        var position;\n        position = $elem.css('position');\n\n        if (position !== 'absolute' && position !== 'fixed' && position !== 'relative') {\n          return $elem.css('position', 'relative');\n        }\n      };\n\n      ComponentView.prototype.get$container = function () {\n        return $(dom.findContainer(this.$html[0]).node);\n      };\n\n      ComponentView.prototype.delayUntilAttached = function (name, func) {\n        if (this.isAttachedToDom) {\n          return func();\n        } else {\n          this.cancelDelayed(name);\n          this.delayed || (this.delayed = {});\n          return this.delayed[name] = eventing.callOnce(this.wasAttachedToDom, function (_this) {\n            return function () {\n              _this.delayed[name] = void 0;\n              return func();\n            };\n          }(this));\n        }\n      };\n\n      ComponentView.prototype.cancelDelayed = function (name) {\n        var _ref;\n\n        if ((_ref = this.delayed) != null ? _ref[name] : void 0) {\n          this.wasAttachedToDom.remove(this.delayed[name]);\n          return this.delayed[name] = void 0;\n        }\n      };\n\n      ComponentView.prototype.stripHtmlIfReadOnly = function () {\n        var elem, iterator, _results;\n\n        if (!this.isReadOnly) {\n          return;\n        }\n\n        iterator = new DirectiveIterator(this.$html[0]);\n        _results = [];\n\n        while (elem = iterator.nextElement()) {\n          this.stripDocClasses(elem);\n          this.stripDocAttributes(elem);\n\n          _results.push(this.stripEmptyAttributes(elem));\n        }\n\n        return _results;\n      };\n\n      ComponentView.prototype.stripDocClasses = function (elem) {\n        var $elem, klass, _i, _len, _ref, _results;\n\n        $elem = $(elem);\n        _ref = elem.className.split(/\\s+/);\n        _results = [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          klass = _ref[_i];\n\n          if (/doc\\-.*/i.test(klass)) {\n            _results.push($elem.removeClass(klass));\n          } else {\n            _results.push(void 0);\n          }\n        }\n\n        return _results;\n      };\n\n      ComponentView.prototype.stripDocAttributes = function (elem) {\n        var $elem, attribute, name, _i, _len, _ref, _results;\n\n        $elem = $(elem);\n        _ref = Array.prototype.slice.apply(elem.attributes);\n        _results = [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          attribute = _ref[_i];\n          name = attribute.name;\n\n          if (/data\\-doc\\-.*/i.test(name)) {\n            _results.push($elem.removeAttr(name));\n          } else {\n            _results.push(void 0);\n          }\n        }\n\n        return _results;\n      };\n\n      ComponentView.prototype.stripEmptyAttributes = function (elem) {\n        var $elem, attribute, isEmptyAttribute, isStrippableAttribute, strippableAttributes, _i, _len, _ref, _results;\n\n        $elem = $(elem);\n        strippableAttributes = ['style', 'class'];\n        _ref = Array.prototype.slice.apply(elem.attributes);\n        _results = [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          attribute = _ref[_i];\n          isStrippableAttribute = strippableAttributes.indexOf(attribute.name) >= 0;\n          isEmptyAttribute = attribute.value.trim() === '';\n\n          if (isStrippableAttribute && isEmptyAttribute) {\n            _results.push($elem.removeAttr(attribute.name));\n          } else {\n            _results.push(void 0);\n          }\n        }\n\n        return _results;\n      };\n\n      ComponentView.prototype.setAttachedToDom = function (newVal) {\n        if (newVal === this.isAttachedToDom) {\n          return;\n        }\n\n        this.isAttachedToDom = newVal;\n\n        if (newVal) {\n          this.resetDirectives();\n          return this.wasAttachedToDom.fire();\n        }\n      };\n\n      ComponentView.prototype.getOwnerWindow = function () {\n        return this.$elem[0].ownerDocument.defaultView;\n      };\n\n      ComponentView.prototype.next = function () {\n        return this.viewForModel(this.model.next);\n      };\n\n      ComponentView.prototype.prev = function () {\n        return this.previous();\n      };\n\n      ComponentView.prototype.previous = function () {\n        return this.viewForModel(this.model.previous);\n      };\n\n      ComponentView.prototype.parent = function () {\n        return this.viewForModel(this.model.getParent());\n      };\n\n      return ComponentView;\n    }();\n\n    ['parents', 'children', 'childrenAndSelf', 'descendants', 'descendantsAndSelf'].forEach(function (method) {\n      return ComponentView.prototype[method] = function (callback) {\n        return this.model[method](function (_this) {\n          return function (model) {\n            return callback(_this.viewForModel(model));\n          };\n        }(this));\n      };\n    });\n  }, {\n    \"../configuration/config\": 26,\n    \"../interaction/dom\": 41,\n    \"../modules/eventing\": 46,\n    \"../template/directive_iterator\": 73,\n    \"jquery\": \"jquery\"\n  }],\n  57: [function (require, module, exports) {\n    var $,\n        Dependencies,\n        Dependency,\n        assert,\n        dependenciesToHtml,\n        log,\n        __bind = function __bind(fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    };\n\n    $ = require('jquery');\n    log = require('../modules/logging/log');\n    assert = require('../modules/logging/assert');\n    Dependency = require('./dependency');\n    dependenciesToHtml = require('./dependencies_to_html');\n\n    module.exports = Dependencies = function () {\n      function Dependencies(_arg) {\n        this.componentTree = (_arg != null ? _arg : {}).componentTree;\n        this.onComponentRemoved = __bind(this.onComponentRemoved, this);\n        this.js = [];\n        this.css = [];\n        this.namespaces = {};\n        this.jsWaitlist = [];\n        this.dependenciesAdded = $.Callbacks();\n        this.dependencyToExecute = $.Callbacks();\n        this.codeToExecute = $.Callbacks();\n        this.dependencyRemoved = $.Callbacks();\n\n        if (this.componentTree != null) {\n          this.componentTree.componentRemoved.add(this.onComponentRemoved);\n        }\n      }\n\n      Dependencies.prototype.add = function (obj) {\n        var dep, existing;\n        this.convertToAbsolutePaths(obj);\n        dep = new Dependency(obj);\n\n        if (existing = this.getExisting(dep)) {\n          if (obj.component != null) {\n            return existing.addComponent(obj.component);\n          }\n        } else {\n          return this.addDependency(dep);\n        }\n      };\n\n      Dependencies.prototype.addJs = function (obj) {\n        obj.type = 'js';\n        return this.add(obj);\n      };\n\n      Dependencies.prototype.addCss = function (obj) {\n        obj.type = 'css';\n        return this.add(obj);\n      };\n\n      Dependencies.prototype.executeJs = function (obj) {\n        obj.isExecuteOnly = true;\n        return this.addJs(obj);\n      };\n\n      Dependencies.prototype.executeCode = function (callback) {\n        return this.codeToExecute.fire(callback);\n      };\n\n      Dependencies.prototype.convertToAbsolutePaths = function (obj) {\n        var src;\n\n        if (!obj.src) {\n          return;\n        }\n\n        src = obj.src;\n\n        if (!this.isAbsoluteUrl(src)) {\n          assert(obj.basePath, \"Dependencies: relative urls are not allowed: \" + src);\n          src = src.replace(/^[\\.\\/]*/, '');\n          return obj.src = \"\" + obj.basePath.replace(/\\/$/, '') + \"/\" + src;\n        }\n      };\n\n      Dependencies.prototype.isAbsoluteUrl = function (src) {\n        return /(^\\/\\/|[a-z]*:\\/\\/)/.test(src) || /^\\//.test(src);\n      };\n\n      Dependencies.prototype.addDependency = function (dependency) {\n        if (!dependency.isExecuteOnly) {\n          if (dependency.namespace) {\n            this.addToNamespace(dependency);\n          }\n\n          if (dependency.isJs()) {\n            this.js.push(dependency);\n            this.delayedDependency(dependency);\n          } else {\n            this.css.push(dependency);\n            this.dependenciesAdded.fire(void 0, [dependency]);\n          }\n        } else {\n          this.dependencyToExecute.fire(dependency);\n        }\n\n        return dependency;\n      };\n\n      Dependencies.prototype.delayedDependency = function (dependency) {\n        this.jsWaitlist.push(dependency);\n\n        if (this.jsWaitlist.length === 1) {\n          return setTimeout(function (_this) {\n            return function () {\n              _this.dependenciesAdded.fire(_this.jsWaitlist, void 0);\n\n              return _this.jsWaitlist = [];\n            };\n          }(this), 0);\n        }\n      };\n\n      Dependencies.prototype.addToNamespace = function (dependency) {\n        var namespace, _base, _name;\n\n        if (dependency.namespace) {\n          if ((_base = this.namespaces)[_name = dependency.namespace] == null) {\n            _base[_name] = [];\n          }\n\n          namespace = this.namespaces[dependency.namespace];\n          return namespace.push(dependency);\n        }\n      };\n\n      Dependencies.prototype.removeFromNamespace = function (dependency) {\n        var index, namespace;\n\n        if (namespace = this.getNamespace(dependency.namespace)) {\n          index = namespace.indexOf(dependency);\n\n          if (index > -1) {\n            return namespace.splice(index, 1);\n          }\n        }\n      };\n\n      Dependencies.prototype.getNamespaces = function () {\n        var array, name, _ref, _results;\n\n        _ref = this.namespaces;\n        _results = [];\n\n        for (name in _ref) {\n          array = _ref[name];\n\n          _results.push(name);\n        }\n\n        return _results;\n      };\n\n      Dependencies.prototype.getNamespace = function (name) {\n        var namespace;\n        namespace = this.namespaces[name];\n\n        if (namespace != null ? namespace.length : void 0) {\n          return namespace;\n        } else {\n          return void 0;\n        }\n      };\n\n      Dependencies.prototype.getExisting = function (dep) {\n        var collection, entry, _i, _len;\n\n        collection = dep.isJs() ? this.js : this.css;\n\n        for (_i = 0, _len = collection.length; _i < _len; _i++) {\n          entry = collection[_i];\n\n          if (entry.isSameAs(dep)) {\n            return entry;\n          }\n        }\n\n        return void 0;\n      };\n\n      Dependencies.prototype.hasCss = function () {\n        return this.css.length > 0;\n      };\n\n      Dependencies.prototype.hasJs = function () {\n        return this.js.length > 0;\n      };\n\n      Dependencies.prototype.onComponentRemoved = function (component) {\n        var dependency, needed, toBeRemoved, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _results;\n\n        toBeRemoved = [];\n        _ref = this.js;\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          dependency = _ref[_i];\n          needed = dependency.removeComponent(component);\n\n          if (!needed) {\n            toBeRemoved.push(dependency);\n          }\n        }\n\n        _ref1 = this.css;\n\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          dependency = _ref1[_j];\n          needed = dependency.removeComponent(component);\n\n          if (!needed) {\n            toBeRemoved.push(dependency);\n          }\n        }\n\n        _results = [];\n\n        for (_k = 0, _len2 = toBeRemoved.length; _k < _len2; _k++) {\n          dependency = toBeRemoved[_k];\n\n          _results.push(this.removeDependency(dependency));\n        }\n\n        return _results;\n      };\n\n      Dependencies.prototype.removeDependency = function (dependency) {\n        var collection, index;\n\n        if (dependency.namespace) {\n          this.removeFromNamespace(dependency);\n        }\n\n        collection = dependency.isJs() ? this.js : this.css;\n        index = collection.indexOf(dependency);\n\n        if (index > -1) {\n          collection.splice(index, 1);\n        }\n\n        return this.dependencyRemoved.fire(dependency);\n      };\n\n      Dependencies.prototype.serialize = function () {\n        var data, dependency, _i, _j, _len, _len1, _ref, _ref1;\n\n        data = {};\n        _ref = this.js;\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          dependency = _ref[_i];\n\n          if (data['js'] == null) {\n            data['js'] = [];\n          }\n\n          data['js'].push(dependency.serialize());\n        }\n\n        _ref1 = this.css;\n\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          dependency = _ref1[_j];\n\n          if (data['css'] == null) {\n            data['css'] = [];\n          }\n\n          data['css'].push(dependency.serialize());\n        }\n\n        return data;\n      };\n\n      Dependencies.prototype.deserialize = function (data) {\n        var entry, obj, _i, _j, _len, _len1, _ref, _ref1, _results;\n\n        if (data == null) {\n          return;\n        }\n\n        _ref = data.js || [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          entry = _ref[_i];\n          obj = {\n            type: 'js',\n            src: entry.src,\n            code: entry.code,\n            namespace: entry.namespace,\n            library: entry.library\n          };\n          this.addDeserialzedObj(obj, entry);\n        }\n\n        _ref1 = data.css || [];\n        _results = [];\n\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          entry = _ref1[_j];\n          obj = {\n            type: 'css',\n            src: entry.src,\n            code: entry.code,\n            namespace: entry.namespace,\n            library: entry.library\n          };\n\n          _results.push(this.addDeserialzedObj(obj, entry));\n        }\n\n        return _results;\n      };\n\n      Dependencies.prototype.addDeserialzedObj = function (obj, entry) {\n        var component, components, dependency, id, _i, _j, _len, _len1, _ref, _ref1, _results;\n\n        if ((_ref = entry.componentIds) != null ? _ref.length : void 0) {\n          components = [];\n          _ref1 = entry.componentIds;\n\n          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n            id = _ref1[_i];\n            component = this.componentTree.findById(id);\n\n            if (component != null) {\n              components.push(component);\n            }\n          }\n\n          if (components.length) {\n            dependency = this.add(obj);\n            _results = [];\n\n            for (_j = 0, _len1 = components.length; _j < _len1; _j++) {\n              component = components[_j];\n\n              _results.push(dependency.addComponent(component));\n            }\n\n            return _results;\n          } else {\n            return log.warn('Dropped dependency: could not find components that depend on it', entry);\n          }\n        } else {\n          return this.add(obj);\n        }\n      };\n\n      Dependencies.prototype.printJs = function () {\n        return dependenciesToHtml.printJs(this);\n      };\n\n      Dependencies.prototype.printCss = function () {\n        return dependenciesToHtml.printCss(this);\n      };\n\n      return Dependencies;\n    }();\n  }, {\n    \"../modules/logging/assert\": 50,\n    \"../modules/logging/log\": 51,\n    \"./dependencies_to_html\": 58,\n    \"./dependency\": 59,\n    \"jquery\": \"jquery\"\n  }],\n  58: [function (require, module, exports) {\n    var CssLoader, JsLoader;\n    JsLoader = require('../rendering_container/js_loader');\n    CssLoader = require('../rendering_container/css_loader');\n    module.exports = {\n      printJs: function printJs(dependencies) {\n        var dependency, html, _i, _len, _ref;\n\n        html = '';\n        _ref = dependencies.js;\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          dependency = _ref[_i];\n\n          if (dependency.inline) {\n            html += this.printInlineScript({\n              codeBlock: dependency.code\n            });\n          } else {\n            html += this.printScriptTag({\n              src: dependency.src\n            });\n          }\n\n          html += '\\n';\n        }\n\n        return html;\n      },\n      printCss: function printCss(dependencies) {\n        var dependency, html, _i, _len, _ref;\n\n        html = '';\n        _ref = dependencies.css;\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          dependency = _ref[_i];\n\n          if (dependency.inline) {\n            html += this.printInlineCss({\n              styles: dependency.code\n            });\n          } else {\n            html += this.printCssLink({\n              src: dependency.src\n            });\n          }\n\n          html += '\\n';\n        }\n\n        return html;\n      },\n      printScriptTag: function printScriptTag(_arg) {\n        var src;\n        src = _arg.src;\n        return \"<script src=\\\"\" + src + \"\\\"></script>\";\n      },\n      printInlineScript: function printInlineScript(_arg) {\n        var codeBlock;\n        codeBlock = _arg.codeBlock;\n        codeBlock = JsLoader.prototype.prepareInlineCode(codeBlock);\n        return \"<script> \" + codeBlock + \" </script>\";\n      },\n      printCssLink: function printCssLink(_arg) {\n        var head, src;\n        src = _arg.src, head = _arg.head;\n\n        if (head == null) {\n          head = true;\n        }\n\n        if (head) {\n          return \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + src + \"\\\">\";\n        } else {\n          return \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + src + \"\\\">\";\n        }\n      },\n      printInlineCss: function printInlineCss(_arg) {\n        var styles;\n        styles = _arg.styles;\n        styles = CssLoader.prototype.prepareInlineStyles(styles);\n        return \"<style> \" + styles + \" </style>\";\n      },\n      printComment: function printComment(text) {\n        return \"<!-- \" + text + \" -->\";\n      }\n    };\n  }, {\n    \"../rendering_container/css_loader\": 63,\n    \"../rendering_container/js_loader\": 66\n  }],\n  59: [function (require, module, exports) {\n    var Dependency, assert;\n    assert = require('../modules/logging/assert');\n\n    module.exports = Dependency = function () {\n      function Dependency(_arg) {\n        var component, _ref;\n\n        this.type = _arg.type, this.src = _arg.src, this.code = _arg.code, this.namespace = _arg.namespace, this.library = _arg.library, this.isExecuteOnly = _arg.isExecuteOnly, component = _arg.component;\n        assert(this.src || this.code, 'Dependency: No \"src\" or \"code\" param provided');\n        assert(!(this.src && this.code), 'Dependency: Only provide one of \"src\" or \"code\" params');\n        assert(this.type, \"Dependency: Param type must be specified\");\n        assert((_ref = this.type) === 'js' || _ref === 'css', \"Dependency: Unrecognized type: \" + this.type);\n\n        if (this.code != null) {\n          this.inline = true;\n        }\n\n        this.components = {};\n        this.componentCount = 0;\n\n        if (component != null) {\n          this.addComponent(component);\n        }\n      }\n\n      Dependency.prototype.isJs = function () {\n        return this.type === 'js';\n      };\n\n      Dependency.prototype.isCss = function () {\n        return this.type === 'css';\n      };\n\n      Dependency.prototype.hasComponent = function (component) {\n        return this.components[component.id] != null;\n      };\n\n      Dependency.prototype.addComponent = function (component) {\n        if (!this.hasComponent(component)) {\n          this.componentCount += 1;\n          return this.components[component.id] = true;\n        }\n      };\n\n      Dependency.prototype.removeComponent = function (component) {\n        if (this.hasComponent(component)) {\n          this.componentCount -= 1;\n          this.components[component.id] = void 0;\n          return this.componentCount !== 0;\n        } else {\n          return true;\n        }\n      };\n\n      Dependency.prototype.isSameAs = function (otherDependency) {\n        if (this.type !== otherDependency.type) {\n          return false;\n        }\n\n        if (this.namespace !== otherDependency.namespace) {\n          return false;\n        }\n\n        if (otherDependency.src) {\n          return this.src === otherDependency.src;\n        } else {\n          return this.code === otherDependency.code;\n        }\n      };\n\n      Dependency.prototype.serialize = function () {\n        var componentId, key, obj, _i, _len, _ref;\n\n        assert(!this.isExecuteOnly, 'engine//dependency.coffee: Cannot serialize a temporary dependency');\n        obj = {};\n        _ref = ['src', 'code', 'inline', 'library', 'namespace'];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          key = _ref[_i];\n\n          if (this[key] != null) {\n            obj[key] = this[key];\n          }\n        }\n\n        for (componentId in this.components) {\n          if (obj.componentIds == null) {\n            obj.componentIds = [];\n          }\n\n          obj.componentIds.push(componentId);\n        }\n\n        return obj;\n      };\n\n      return Dependency;\n    }();\n  }, {\n    \"../modules/logging/assert\": 50\n  }],\n  60: [function (require, module, exports) {\n    var $, Renderer, Semaphore, assert, config, log;\n    $ = require('jquery');\n    assert = require('../modules/logging/assert');\n    log = require('../modules/logging/log');\n    Semaphore = require('../modules/semaphore');\n    config = require('../configuration/config');\n\n    module.exports = Renderer = function () {\n      function Renderer(_arg) {\n        var $wrapper, excludeComponents;\n        this.componentTree = _arg.componentTree, this.renderingContainer = _arg.renderingContainer, $wrapper = _arg.$wrapper, excludeComponents = _arg.excludeComponents;\n        assert(this.componentTree, 'no componentTree specified');\n        assert(this.renderingContainer, 'no rendering container specified');\n        this.$root = $(this.renderingContainer.renderNode);\n        this.$wrapperHtml = $wrapper;\n        this.componentViews = {};\n        this.excludedComponentIds = {};\n        this.excludeComponent(excludeComponents);\n        this.readySemaphore = new Semaphore();\n        this.renderOncePageReady();\n        this.readySemaphore.start();\n      }\n\n      Renderer.prototype.excludeComponent = function (componentId) {\n        var compId, view, _i, _len, _results;\n\n        if (componentId == null) {\n          return;\n        }\n\n        if ($.isArray(componentId)) {\n          _results = [];\n\n          for (_i = 0, _len = componentId.length; _i < _len; _i++) {\n            compId = componentId[_i];\n\n            _results.push(this.excludeComponent(compId));\n          }\n\n          return _results;\n        } else {\n          this.excludedComponentIds[componentId] = true;\n          view = this.componentViews[componentId];\n\n          if (view != null && view.isAttachedToDom) {\n            return this.removeComponentFromDom(view.model);\n          }\n        }\n      };\n\n      Renderer.prototype.setRoot = function () {\n        var $insert, selector, _ref;\n\n        if (((_ref = this.$wrapperHtml) != null ? _ref.length : void 0) && this.$wrapperHtml.jquery) {\n          selector = \".\" + config.css.section;\n          $insert = this.$wrapperHtml.find(selector).add(this.$wrapperHtml.filter(selector));\n\n          if ($insert.length) {\n            this.$wrapper = this.$root;\n            this.$wrapper.append(this.$wrapperHtml);\n            this.$root = $insert;\n          }\n        }\n\n        return this.$root.data('componentTree', this.componentTree);\n      };\n\n      Renderer.prototype.renderOncePageReady = function () {\n        this.readySemaphore.increment();\n        return this.renderingContainer.ready(function (_this) {\n          return function () {\n            _this.setRoot();\n\n            _this.render();\n\n            _this.setupComponentTreeListeners();\n\n            return _this.readySemaphore.decrement();\n          };\n        }(this));\n      };\n\n      Renderer.prototype.ready = function (callback) {\n        return this.readySemaphore.addCallback(callback);\n      };\n\n      Renderer.prototype.isReady = function () {\n        return this.readySemaphore.isReady();\n      };\n\n      Renderer.prototype.html = function () {\n        assert(this.isReady(), 'Cannot generate html. Renderer is not ready.');\n        return this.renderingContainer.html();\n      };\n\n      Renderer.prototype.setupComponentTreeListeners = function () {\n        this.componentTree.componentAdded.add($.proxy(this.componentAdded, this));\n        this.componentTree.componentRemoved.add($.proxy(this.componentRemoved, this));\n        this.componentTree.componentMoved.add($.proxy(this.componentMoved, this));\n        this.componentTree.componentContentChanged.add($.proxy(this.componentContentChanged, this));\n        return this.componentTree.componentHtmlChanged.add($.proxy(this.componentHtmlChanged, this));\n      };\n\n      Renderer.prototype.componentAdded = function (model) {\n        return this.insertComponent(model);\n      };\n\n      Renderer.prototype.componentRemoved = function (component) {\n        return component.descendantsAndSelf(function (_this) {\n          return function (model) {\n            _this.removeComponentFromDom(model);\n\n            return _this.deleteCachedComponentView(model);\n          };\n        }(this));\n      };\n\n      Renderer.prototype.componentMoved = function (model) {\n        this.removeComponentFromDom(model);\n        return this.insertComponent(model);\n      };\n\n      Renderer.prototype.componentContentChanged = function (model, directiveName) {\n        return this.getOrCreateComponentView(model).updateContent(directiveName);\n      };\n\n      Renderer.prototype.componentHtmlChanged = function (model) {\n        return this.getOrCreateComponentView(model).updateHtml();\n      };\n\n      Renderer.prototype.getComponentViewById = function (componentId) {\n        return this.componentViews[componentId];\n      };\n\n      Renderer.prototype.getOrCreateComponentView = function (model) {\n        var view;\n\n        if (view = this.componentViews[model.id]) {\n          return view;\n        }\n\n        view = model.createView(this.renderingContainer.isReadOnly);\n        view.setRenderer(this);\n        return this.componentViews[model.id] = view;\n      };\n\n      Renderer.prototype.deleteCachedComponentView = function (model) {\n        var _ref;\n\n        if ((_ref = this.componentViews[model.id]) != null) {\n          _ref.removeRenderer();\n        }\n\n        return delete this.componentViews[model.id];\n      };\n\n      Renderer.prototype.render = function () {\n        return this.componentTree.each(function (_this) {\n          return function (model) {\n            return _this.insertComponent(model);\n          };\n        }(this));\n      };\n\n      Renderer.prototype.clear = function () {\n        this.componentTree.each(function (_this) {\n          return function (model) {\n            return _this.getOrCreateComponentView(model).setAttachedToDom(false);\n          };\n        }(this));\n        return this.$root.empty();\n      };\n\n      Renderer.prototype.redraw = function () {\n        this.clear();\n        return this.render();\n      };\n\n      Renderer.prototype.refreshComponent = function (component) {\n        var view;\n        view = this.getComponentViewById(component.id);\n        view.descendantsAndSelf(function (_this) {\n          return function (view) {\n            _this.removeComponentFromDom(view.model);\n\n            return view.recreateHtml();\n          };\n        }(this));\n        this.insertComponent(component);\n        return this.renderingContainer.componentViewWasRefreshed.fire(view);\n      };\n\n      Renderer.prototype.insertComponent = function (model) {\n        var componentView;\n\n        if (this.isComponentAttached(model) || this.excludedComponentIds[model.id] === true) {\n          return;\n        }\n\n        if (this.isComponentAttached(model.previous)) {\n          this.insertComponentAsSibling(model.previous, model);\n        } else if (this.isComponentAttached(model.next)) {\n          this.insertComponentAsSibling(model.next, model);\n        } else if (model.parentContainer) {\n          this.appendComponentToParentContainer(model);\n        } else {\n          log.error('Component could not be inserted by renderer.');\n        }\n\n        componentView = this.getOrCreateComponentView(model);\n        componentView.setAttachedToDom(true);\n        this.renderingContainer.componentViewWasInserted(componentView);\n        return this.attachChildComponents(model);\n      };\n\n      Renderer.prototype.isComponentAttached = function (model) {\n        var _ref;\n\n        return model && ((_ref = this.getComponentViewById(model.id)) != null ? _ref.isAttachedToDom : void 0);\n      };\n\n      Renderer.prototype.attachChildComponents = function (model) {\n        return model.children(function (_this) {\n          return function (childModel) {\n            if (!_this.isComponentAttached(childModel)) {\n              return _this.insertComponent(childModel);\n            }\n          };\n        }(this));\n      };\n\n      Renderer.prototype.insertComponentAsSibling = function (sibling, model) {\n        var method;\n        method = sibling === model.previous ? 'after' : 'before';\n        return this.$nodeForComponent(sibling)[method](this.$nodeForComponent(model));\n      };\n\n      Renderer.prototype.appendComponentToParentContainer = function (model) {\n        var $container, $node;\n        $node = this.$nodeForComponent(model);\n        $container = this.$nodeForContainer(model.parentContainer);\n        return $container.append($node);\n      };\n\n      Renderer.prototype.$nodeForComponent = function (model) {\n        return this.getOrCreateComponentView(model).$html;\n      };\n\n      Renderer.prototype.$nodeForContainer = function (container) {\n        var parentView;\n\n        if (container.isRoot) {\n          return this.$root;\n        } else {\n          parentView = this.getOrCreateComponentView(container.parentComponent);\n          return $(parentView.getDirectiveElement(container.name));\n        }\n      };\n\n      Renderer.prototype.removeComponentFromDom = function (model) {\n        var view;\n\n        if (this.isComponentAttached(model)) {\n          view = this.getComponentViewById(model.id);\n          view.$html.detach();\n          return view.setAttachedToDom(false);\n        }\n      };\n\n      return Renderer;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../modules/logging/assert\": 50,\n    \"../modules/logging/log\": 51,\n    \"../modules/semaphore\": 53,\n    \"jquery\": \"jquery\"\n  }],\n  61: [function (require, module, exports) {\n    var InteractivePage, Page, Renderer, View;\n    Renderer = require('./renderer');\n    Page = require('../rendering_container/page');\n    InteractivePage = require('../rendering_container/interactive_page');\n\n    module.exports = View = function () {\n      function View(_arg) {\n        var parent;\n        this.livingdoc = _arg.livingdoc, parent = _arg.parent, this.isInteractive = _arg.isInteractive, this.wrapper = _arg.wrapper, this.loadResources = _arg.loadResources;\n        this.parent = (parent != null ? parent.jquery : void 0) ? parent[0] : parent;\n\n        if (this.parent == null) {\n          this.parent = window.document.body;\n        }\n\n        if (this.isInteractive == null) {\n          this.isInteractive = false;\n        }\n\n        this.isReady = false;\n        this.whenReadyDeferred = $.Deferred();\n        this.whenReady = this.whenReadyDeferred.promise();\n      }\n\n      View.prototype.create = function (_arg) {\n        var renderInIframe;\n        renderInIframe = (_arg != null ? _arg : {}).renderInIframe;\n\n        if (renderInIframe) {\n          this.createIFrame(this.parent, function (_this) {\n            return function () {\n              _this.addBaseTarget();\n\n              _this.createIFrameRenderer();\n\n              _this.isReady = true;\n              return _this.whenReadyDeferred.resolve({\n                iframe: _this.iframe,\n                renderer: _this.renderer\n              });\n            };\n          }(this));\n        } else {\n          this.createRenderer({\n            renderNode: this.parent\n          });\n          this.isReady = true;\n          this.whenReadyDeferred.resolve({\n            renderer: this.renderer\n          });\n        }\n\n        return this.whenReady;\n      };\n\n      View.prototype.addBaseTarget = function () {\n        var base, doc;\n        doc = this.iframe.contentDocument;\n        base = doc.createElement('base');\n        base.setAttribute('target', '_blank');\n        return doc.getElementsByTagName('head')[0].appendChild(base);\n      };\n\n      View.prototype.createIFrame = function (parent, callback) {\n        var iframe;\n        iframe = parent.ownerDocument.createElement('iframe');\n        iframe.src = 'about:blank';\n        iframe.setAttribute('frameBorder', '0');\n        this.iframe = iframe;\n\n        iframe.onload = function () {\n          return callback(iframe);\n        };\n\n        return parent.appendChild(iframe);\n      };\n\n      View.prototype.createIFrameRenderer = function () {\n        return this.createRenderer({\n          renderNode: this.iframe.contentDocument.body\n        });\n      };\n\n      View.prototype.createRenderer = function (_arg) {\n        var params, renderNode;\n        renderNode = (_arg != null ? _arg : {}).renderNode;\n        params = {\n          renderNode: renderNode || this.parent,\n          documentDependencies: this.livingdoc.dependencies,\n          design: this.livingdoc.design,\n          loadResources: this.loadResources\n        };\n        this.page = this.isInteractive ? new InteractivePage(params) : new Page(params);\n        return this.renderer = new Renderer({\n          renderingContainer: this.page,\n          componentTree: this.livingdoc.componentTree,\n          $wrapper: $(this.wrapper)\n        });\n      };\n\n      return View;\n    }();\n  }, {\n    \"../rendering_container/interactive_page\": 65,\n    \"../rendering_container/page\": 67,\n    \"./renderer\": 60\n  }],\n  62: [function (require, module, exports) {\n    var $, Assets, CssLoader, JsLoader, Semaphore;\n    $ = require('jquery');\n    JsLoader = require('./js_loader');\n    CssLoader = require('./css_loader');\n    Semaphore = require('../modules/semaphore');\n\n    module.exports = Assets = function () {\n      function Assets(_arg) {\n        var disable;\n        this.window = _arg.window, disable = _arg.disable;\n        this.isDisabled = disable || false;\n        this.cssLoader = new CssLoader(this.window);\n        this.jsLoader = new JsLoader(this.window);\n      }\n\n      Assets.prototype.loadDependencies = function (jsDependencies, cssDependencies, callback) {\n        var dep, semaphore, _i, _len, _ref;\n\n        semaphore = new Semaphore();\n        semaphore.addCallback(callback);\n        this.loadSequentially(jsDependencies, semaphore);\n        _ref = cssDependencies || [];\n\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          dep = _ref[_i];\n          this.loadCss(dep, semaphore.wait());\n        }\n\n        return semaphore.start();\n      };\n\n      Assets.prototype.loadSequentially = function (jsDependencies, semaphore) {\n        var current, next;\n\n        if (jsDependencies != null ? jsDependencies.length : void 0) {\n          semaphore.increment(jsDependencies.length);\n          current = 0;\n\n          next = function (_this) {\n            return function () {\n              return _this.loadJs(jsDependencies[current], function () {\n                semaphore.decrement();\n                current += 1;\n\n                if (current < jsDependencies.length) {\n                  return next();\n                }\n              });\n            };\n          }(this);\n\n          return next();\n        }\n      };\n\n      Assets.prototype.loadDependency = function (dependency, callback) {\n        if (dependency.isJs()) {\n          return this.loadJs(dependency, callback);\n        } else if (dependency.isCss()) {\n          return this.loadCss(dependency, callback);\n        }\n      };\n\n      Assets.prototype.loadJs = function (dependency, callback) {\n        var preventRepeatedExecution;\n\n        if (this.isDisabled) {\n          return callback();\n        }\n\n        if (dependency.inline) {\n          preventRepeatedExecution = !dependency.isExecuteOnly;\n          return this.jsLoader.loadInlineScript(dependency.code, preventRepeatedExecution, callback);\n        } else {\n          return this.jsLoader.loadSingleUrl(dependency.src, callback);\n        }\n      };\n\n      Assets.prototype.loadCss = function (dependency, callback) {\n        if (this.isDisabled) {\n          return callback();\n        }\n\n        if (dependency.inline) {\n          return this.cssLoader.loadInlineStyles(dependency.code, callback);\n        } else {\n          return this.cssLoader.loadSingleUrl(dependency.src, callback);\n        }\n      };\n\n      return Assets;\n    }();\n  }, {\n    \"../modules/semaphore\": 53,\n    \"./css_loader\": 63,\n    \"./js_loader\": 66,\n    \"jquery\": \"jquery\"\n  }],\n  63: [function (require, module, exports) {\n    var $, CssLoader;\n    $ = require('jquery');\n\n    module.exports = CssLoader = function () {\n      function CssLoader(window) {\n        this.window = window;\n        this.loadedUrls = [];\n        this.loadedInlineStyles = [];\n      }\n\n      CssLoader.prototype.loadSingleUrl = function (url, callback) {\n        var link;\n\n        if (callback == null) {\n          callback = function callback() {};\n        }\n\n        if (this.isUrlLoaded(url)) {\n          return callback();\n        }\n\n        link = $('<link rel=\"stylesheet\" type=\"text/css\" />')[0];\n        link.onload = callback;\n\n        link.onerror = function () {\n          console.warn(\"Stylesheet could not be loaded: \" + url);\n          return callback();\n        };\n\n        link.href = url;\n        this.window.document.head.appendChild(link);\n        return this.loadedUrls.push(url);\n      };\n\n      CssLoader.prototype.isUrlLoaded = function (url) {\n        return this.loadedUrls.indexOf(url) >= 0;\n      };\n\n      CssLoader.prototype.loadInlineStyles = function (inlineStyles, callback) {\n        var doc, styles;\n\n        if (callback == null) {\n          callback = function callback() {};\n        }\n\n        inlineStyles = this.prepareInlineStyles(inlineStyles);\n\n        if (this.areInlineStylesLoaded(inlineStyles)) {\n          return callback();\n        }\n\n        doc = this.window.document;\n        styles = doc.createElement('style');\n        styles.innerHTML = inlineStyles;\n        doc.body.appendChild(styles);\n        this.loadedInlineStyles.push(inlineStyles);\n        return callback();\n      };\n\n      CssLoader.prototype.prepareInlineStyles = function (inlineStyles) {\n        return inlineStyles.replace(/<style[^>]*>|<\\/style>/gi, '');\n      };\n\n      CssLoader.prototype.areInlineStylesLoaded = function (inlineStyles) {\n        return this.loadedInlineStyles.indexOf(inlineStyles) >= 0;\n      };\n\n      return CssLoader;\n    }();\n  }, {\n    \"jquery\": \"jquery\"\n  }],\n  64: [function (require, module, exports) {\n    var ComponentDrag, DragBase, EditorPage, config, css;\n    config = require('../configuration/config');\n    css = config.css;\n    DragBase = require('../interaction/drag_base');\n    ComponentDrag = require('../interaction/component_drag');\n\n    module.exports = EditorPage = function () {\n      function EditorPage() {\n        this.setWindow();\n        this.dragBase = new DragBase(this);\n        this.editableController = {\n          disableAll: function disableAll() {},\n          reenableAll: function reenableAll() {}\n        };\n        this.componentWasDropped = {\n          fire: function fire() {}\n        };\n\n        this.blurFocusedElement = function () {};\n      }\n\n      EditorPage.prototype.startDrag = function (_arg) {\n        var componentDrag, componentModel, componentView, config, event;\n        componentModel = _arg.componentModel, componentView = _arg.componentView, event = _arg.event, config = _arg.config;\n\n        if (!(componentModel || componentView)) {\n          return;\n        }\n\n        if (componentView) {\n          componentModel = componentView.model;\n        }\n\n        componentDrag = new ComponentDrag({\n          componentModel: componentModel,\n          componentView: componentView\n        });\n\n        if (config == null) {\n          config = {\n            longpress: {\n              showIndicator: true,\n              delay: 400,\n              tolerance: 3\n            }\n          };\n        }\n\n        return this.dragBase.init(componentDrag, event, config);\n      };\n\n      EditorPage.prototype.setWindow = function () {\n        this.window = window;\n        this.document = this.window.document;\n        this.$document = $(this.document);\n        return this.$body = $(this.document.body);\n      };\n\n      return EditorPage;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../interaction/component_drag\": 39,\n    \"../interaction/drag_base\": 42\n  }],\n  65: [function (require, module, exports) {\n    var ComponentDrag,\n        DragBase,\n        EditableController,\n        Focus,\n        InteractivePage,\n        Page,\n        config,\n        dom,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    config = require('../configuration/config');\n    Page = require('./page');\n    dom = require('../interaction/dom');\n    Focus = require('../interaction/focus');\n    EditableController = require('../interaction/editable_controller');\n    DragBase = require('../interaction/drag_base');\n    ComponentDrag = require('../interaction/component_drag');\n\n    module.exports = InteractivePage = function (_super) {\n      var LEFT_MOUSE_BUTTON;\n\n      __extends(InteractivePage, _super);\n\n      LEFT_MOUSE_BUTTON = 1;\n      InteractivePage.prototype.isReadOnly = false;\n\n      function InteractivePage(_arg) {\n        var hostWindow, renderNode, _ref;\n\n        _ref = _arg != null ? _arg : {}, renderNode = _ref.renderNode, hostWindow = _ref.hostWindow;\n\n        InteractivePage.__super__.constructor.apply(this, arguments);\n\n        this.focus = new Focus();\n        this.editableController = new EditableController(this);\n        this.imageClick = $.Callbacks();\n        this.htmlElementClick = $.Callbacks();\n        this.linkClick = $.Callbacks();\n        this.embedItemClick = $.Callbacks();\n        this.componentWillBeDragged = $.Callbacks();\n        this.componentWasDropped = $.Callbacks();\n        this.dragBase = new DragBase(this);\n        this.focus.componentFocus.add($.proxy(this.afterComponentFocused, this));\n        this.focus.componentBlur.add($.proxy(this.afterComponentBlurred, this));\n        this.beforeInteractivePageReady();\n        this.$document.on('mousedown.livingdocs', $.proxy(this.mousedown, this)).on('click.livingdocs', $.proxy(this.click, this)).on('touchstart.livingdocs', $.proxy(this.mousedown, this)).on('dragstart.livingdocs', $.proxy(this.browserDragStart, this));\n      }\n\n      InteractivePage.prototype.beforeInteractivePageReady = function () {\n        if (config.livingdocsCssFile && this.loadResources) {\n          return this.assets.cssLoader.loadSingleUrl(config.livingdocsCssFile, this.readySemaphore.wait());\n        }\n      };\n\n      InteractivePage.prototype.browserDragStart = function (event) {\n        event.preventDefault();\n        return event.stopPropagation();\n      };\n\n      InteractivePage.prototype.removeListeners = function () {\n        this.$document.off('.livingdocs');\n        return this.$document.off('.livingdocs-drag');\n      };\n\n      InteractivePage.prototype.mousedown = function (event) {\n        var componentView, isControl;\n\n        if (event.which !== LEFT_MOUSE_BUTTON && event.type === 'mousedown') {\n          return;\n        }\n\n        isControl = $(event.target).closest(config.ignoreInteraction).length;\n\n        if (isControl) {\n          return;\n        }\n\n        componentView = dom.findComponentView(event.target);\n        this.handleClickedComponent(event, componentView);\n\n        if (componentView) {\n          return this.startDrag({\n            componentView: componentView,\n            event: event\n          });\n        }\n      };\n\n      InteractivePage.prototype.click = function (event) {\n        var target;\n        target = event.target;\n\n        if (dom.isInsideDocLink(target)) {\n          return event.preventDefault();\n        }\n      };\n\n      InteractivePage.prototype.startDrag = function (_arg) {\n        var componentDrag, componentModel, componentView, config, event;\n        componentModel = _arg.componentModel, componentView = _arg.componentView, event = _arg.event, config = _arg.config;\n\n        if (!(componentModel || componentView)) {\n          return;\n        }\n\n        if (componentView) {\n          componentModel = componentView.model;\n        }\n\n        componentDrag = new ComponentDrag({\n          componentModel: componentModel,\n          componentView: componentView\n        });\n\n        if (config == null) {\n          config = {\n            longpress: {\n              showIndicator: true,\n              delay: 400,\n              tolerance: 3\n            }\n          };\n        }\n\n        return this.dragBase.init(componentDrag, event, config);\n      };\n\n      InteractivePage.prototype.cancelDrag = function () {\n        return this.dragBase.cancel();\n      };\n\n      InteractivePage.prototype.handleClickedComponent = function (event, componentView) {\n        var directives;\n\n        if (componentView) {\n          this.focus.componentFocused(componentView);\n          directives = dom.getDirectiveContext(event.target);\n\n          if (directives != null) {\n            if (directives['image']) {\n              return this.imageClick.fire(componentView, directives['image'].name, event);\n            } else if (directives['link']) {\n              return this.linkClick.fire(componentView, directives['link'].name, event);\n            } else if (directives['html']) {\n              return this.htmlElementClick.fire(componentView, directives['html'].name, event);\n            } else if (directives['embeditem']) {\n              return this.embedItemClick.fire(componentView, directives['embeditem'].name, event);\n            }\n          }\n        } else {\n          return this.focus.blur();\n        }\n      };\n\n      InteractivePage.prototype.getFocusedElement = function () {\n        return this.window.document.activeElement;\n      };\n\n      InteractivePage.prototype.blurFocusedElement = function () {\n        var focusedElement;\n        this.focus.setFocus(void 0);\n        focusedElement = this.getFocusedElement();\n\n        if (focusedElement) {\n          return $(focusedElement).blur();\n        }\n      };\n\n      InteractivePage.prototype.componentViewWasInserted = function (componentView) {\n        return this.initializeEditables(componentView);\n      };\n\n      InteractivePage.prototype.initializeEditables = function (componentView) {\n        var directive, editableNodes;\n\n        if (componentView.directives.editable) {\n          editableNodes = function () {\n            var _i, _len, _ref, _results;\n\n            _ref = componentView.directives.editable;\n            _results = [];\n\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n              directive = _ref[_i];\n\n              _results.push(directive.elem);\n            }\n\n            return _results;\n          }();\n\n          return this.editableController.add(editableNodes);\n        }\n      };\n\n      InteractivePage.prototype.afterComponentFocused = function (componentView) {\n        return componentView.afterFocused();\n      };\n\n      InteractivePage.prototype.afterComponentBlurred = function (componentView) {\n        return componentView.afterBlurred();\n      };\n\n      return InteractivePage;\n    }(Page);\n  }, {\n    \"../configuration/config\": 26,\n    \"../interaction/component_drag\": 39,\n    \"../interaction/dom\": 41,\n    \"../interaction/drag_base\": 42,\n    \"../interaction/editable_controller\": 43,\n    \"../interaction/focus\": 44,\n    \"./page\": 67\n  }],\n  66: [function (require, module, exports) {\n    var JsLoader;\n\n    module.exports = JsLoader = function () {\n      function JsLoader(window) {\n        this.window = window;\n        this.loadedUrls = [];\n        this.loadedScripts = [];\n      }\n\n      JsLoader.prototype.loadSingleUrl = function (path, callback) {\n        var doc, el, head, loaded, onreadystatechange, readyState;\n\n        if (callback == null) {\n          callback = function callback() {};\n        }\n\n        if (this.isUrlLoaded(path)) {\n          return callback();\n        }\n\n        doc = this.window.document;\n        readyState = 'readyState';\n        onreadystatechange = 'onreadystatechange';\n        head = doc.getElementsByTagName('head')[0];\n        el = doc.createElement('script');\n        loaded = void 0;\n\n        el.onload = el.onerror = el[onreadystatechange] = function (_this) {\n          return function () {\n            if (el[readyState] && !/^c|loade/.test(el[readyState]) || loaded) {\n              return;\n            }\n\n            el.onload = el[onreadystatechange] = null;\n            loaded = true;\n\n            _this.loadedUrls.push(path);\n\n            return callback();\n          };\n        }(this);\n\n        el.async = true;\n        el.src = path;\n        return head.insertBefore(el, head.lastChild);\n      };\n\n      JsLoader.prototype.isUrlLoaded = function (url) {\n        return this.loadedUrls.indexOf(url) >= 0;\n      };\n\n      JsLoader.prototype.loadInlineScript = function (codeBlock, preventRepeatedExecution, callback) {\n        var doc, script;\n\n        if (callback == null) {\n          callback = function callback() {};\n        }\n\n        codeBlock = this.prepareInlineCode(codeBlock);\n\n        if (this.isInlineBlockLoaded(codeBlock)) {\n          return callback();\n        }\n\n        doc = this.window.document;\n        script = doc.createElement('script');\n        script.innerHTML = codeBlock;\n        doc.body.appendChild(script);\n\n        if (preventRepeatedExecution) {\n          this.loadedScripts.push(codeBlock);\n        }\n\n        return callback();\n      };\n\n      JsLoader.prototype.prepareInlineCode = function (codeBlock) {\n        return codeBlock.replace(/<script[^>]*>|<\\/script>/gi, '');\n      };\n\n      JsLoader.prototype.isInlineBlockLoaded = function (codeBlock) {\n        return this.loadedScripts.indexOf(codeBlock) >= 0;\n      };\n\n      return JsLoader;\n    }();\n  }, {}],\n  67: [function (require, module, exports) {\n    var $,\n        Assets,\n        Page,\n        RenderingContainer,\n        config,\n        __bind = function __bind(fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    },\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    $ = require('jquery');\n    RenderingContainer = require('./rendering_container');\n    Assets = require('./assets');\n    config = require('../configuration/config');\n\n    module.exports = Page = function (_super) {\n      __extends(Page, _super);\n\n      function Page(_arg) {\n        var hostWindow, preventAssetLoading, readOnly, renderNode, _ref;\n\n        _ref = _arg != null ? _arg : {}, renderNode = _ref.renderNode, readOnly = _ref.readOnly, hostWindow = _ref.hostWindow, this.documentDependencies = _ref.documentDependencies, this.design = _ref.design, this.componentTree = _ref.componentTree, this.loadResources = _ref.loadResources;\n        this.loadAssets = __bind(this.loadAssets, this);\n\n        if (this.loadResources == null) {\n          this.loadResources = config.loadResources;\n        }\n\n        if (readOnly != null) {\n          this.isReadOnly = readOnly;\n        }\n\n        this.renderNode = (renderNode != null ? renderNode.jquery : void 0) ? renderNode[0] : renderNode;\n        this.setWindow(hostWindow);\n\n        if (this.renderNode == null) {\n          this.renderNode = $(\".\" + config.css.section, this.$body);\n        }\n\n        this.componentViewWasRefreshed = $.Callbacks();\n\n        Page.__super__.constructor.call(this);\n\n        preventAssetLoading = !this.loadResources;\n        this.assets = new Assets({\n          window: this.window,\n          disable: preventAssetLoading\n        });\n        this.loadAssets();\n      }\n\n      Page.prototype.beforeReady = function () {\n        this.readySemaphore.wait();\n        return setTimeout(function (_this) {\n          return function () {\n            return _this.readySemaphore.decrement();\n          };\n        }(this), 0);\n      };\n\n      Page.prototype.loadAssets = function () {\n        var deps;\n\n        if (this.design != null) {\n          deps = this.design.dependencies;\n          this.assets.loadDependencies(deps.js, deps.css, this.readySemaphore.wait());\n        }\n\n        if (this.documentDependencies != null) {\n          deps = this.documentDependencies;\n          this.assets.loadDependencies(deps.js, deps.css, this.readySemaphore.wait());\n          this.documentDependencies.dependenciesAdded.add(function (_this) {\n            return function (jsDependencies, cssDependencies) {\n              return _this.assets.loadDependencies(jsDependencies, cssDependencies, function () {});\n            };\n          }(this));\n          this.documentDependencies.dependencyToExecute.add(function (_this) {\n            return function (dependency) {\n              return _this.assets.loadDependency(dependency);\n            };\n          }(this));\n          return this.documentDependencies.codeToExecute.add(function (_this) {\n            return function (callback) {\n              return callback(_this.window);\n            };\n          }(this));\n        }\n      };\n\n      Page.prototype.setWindow = function (hostWindow) {\n        if (hostWindow == null) {\n          hostWindow = this.getParentWindow(this.renderNode);\n        }\n\n        this.window = hostWindow;\n        this.document = this.window.document;\n        this.$document = $(this.document);\n        return this.$body = $(this.document.body);\n      };\n\n      Page.prototype.getParentWindow = function (elem) {\n        if (elem != null) {\n          return elem.ownerDocument.defaultView;\n        } else {\n          return window;\n        }\n      };\n\n      return Page;\n    }(RenderingContainer);\n  }, {\n    \"../configuration/config\": 26,\n    \"./assets\": 62,\n    \"./rendering_container\": 68,\n    \"jquery\": \"jquery\"\n  }],\n  68: [function (require, module, exports) {\n    var $, RenderingContainer, Semaphore;\n    $ = require('jquery');\n    Semaphore = require('../modules/semaphore');\n\n    module.exports = RenderingContainer = function () {\n      RenderingContainer.prototype.isReadOnly = true;\n\n      function RenderingContainer() {\n        if (this.renderNode == null) {\n          this.renderNode = $('<div>')[0];\n        }\n\n        this.readySemaphore = new Semaphore();\n        this.beforeReady();\n        this.readySemaphore.start();\n      }\n\n      RenderingContainer.prototype.html = function () {\n        return $(this.renderNode).html();\n      };\n\n      RenderingContainer.prototype.componentViewWasInserted = function (componentView) {};\n\n      RenderingContainer.prototype.beforeReady = function () {};\n\n      RenderingContainer.prototype.ready = function (callback) {\n        return this.readySemaphore.addCallback(callback);\n      };\n\n      return RenderingContainer;\n    }();\n  }, {\n    \"../modules/semaphore\": 53,\n    \"jquery\": \"jquery\"\n  }],\n  69: [function (require, module, exports) {\n    var $, Directive, assert, dom, editorConfig;\n    $ = require('jquery');\n    editorConfig = require('../configuration/config');\n    dom = require('../interaction/dom');\n    assert = require('../modules/logging/assert');\n\n    module.exports = Directive = function () {\n      function Directive(_arg) {\n        var config;\n        this.name = _arg.name, this.type = _arg.type, this.elem = _arg.elem, config = _arg.config;\n\n        if (this.type !== 'optional') {\n          assert(this.name, \"TemplateDirective: name is missing from \" + this.type + \" directive\");\n        }\n\n        this.config = Object.create(editorConfig.directives[this.type]);\n        this.setConfig(config);\n        this.optional = false;\n      }\n\n      Directive.prototype.setConfig = function (config) {\n        return $.extend(this.config, config);\n      };\n\n      Directive.prototype.renderedAttr = function () {\n        return this.config.renderedAttr;\n      };\n\n      Directive.prototype.overwritesContent = function () {\n        return !!this.config.overwritesContent;\n      };\n\n      Directive.prototype.isModification = function () {\n        return this.config.modifies != null;\n      };\n\n      Directive.prototype.getTagName = function () {\n        return this.elem.nodeName.toLowerCase();\n      };\n\n      Directive.prototype.clone = function () {\n        var newDirective;\n        newDirective = new Directive({\n          name: this.name,\n          type: this.type,\n          config: this.config\n        });\n        newDirective.optional = this.optional;\n        return newDirective;\n      };\n\n      Directive.prototype.getAbsoluteBoundingClientRect = function () {\n        return dom.getAbsoluteBoundingClientRect(this.elem);\n      };\n\n      Directive.prototype.getBoundingClientRect = function () {\n        return this.elem.getBoundingClientRect();\n      };\n\n      return Directive;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../interaction/dom\": 41,\n    \"../modules/logging/assert\": 50,\n    \"jquery\": \"jquery\"\n  }],\n  70: [function (require, module, exports) {\n    var $, Directive, DirectiveCollection, assert, config;\n    $ = require('jquery');\n    assert = require('../modules/logging/assert');\n    config = require('../configuration/config');\n    Directive = require('./directive');\n\n    module.exports = DirectiveCollection = function () {\n      function DirectiveCollection(all) {\n        this.all = all != null ? all : {};\n        this.length = 0;\n      }\n\n      DirectiveCollection.prototype.add = function (directive) {\n        var _name;\n\n        this.assertNameNotUsed(directive);\n        this[this.length] = directive;\n        directive.index = this.length;\n        this.length += 1;\n        this.all[directive.name] = directive;\n        this[_name = directive.type] || (this[_name] = []);\n        this[directive.type].push(directive);\n        return directive;\n      };\n\n      DirectiveCollection.prototype.next = function (name) {\n        var directive;\n\n        if (name instanceof Directive) {\n          directive = name;\n        }\n\n        if (directive == null) {\n          directive = this.all[name];\n        }\n\n        return this[directive.index += 1];\n      };\n\n      DirectiveCollection.prototype.nextOfType = function (name) {\n        var directive, requiredType;\n\n        if (name instanceof Directive) {\n          directive = name;\n        }\n\n        if (directive == null) {\n          directive = this.all[name];\n        }\n\n        requiredType = directive.type;\n\n        while (directive = this.next(directive)) {\n          if (directive.type === requiredType) {\n            return directive;\n          }\n        }\n      };\n\n      DirectiveCollection.prototype.get = function (name) {\n        return this.all[name];\n      };\n\n      DirectiveCollection.prototype.count = function (type) {\n        var _ref;\n\n        if (type) {\n          return (_ref = this[type]) != null ? _ref.length : void 0;\n        } else {\n          return this.length;\n        }\n      };\n\n      DirectiveCollection.prototype.names = function (type) {\n        var directive, _i, _len, _ref, _ref1, _results;\n\n        if (!((_ref = this[type]) != null ? _ref.length : void 0)) {\n          return [];\n        }\n\n        _ref1 = this[type];\n        _results = [];\n\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          directive = _ref1[_i];\n\n          _results.push(directive.name);\n        }\n\n        return _results;\n      };\n\n      DirectiveCollection.prototype.each = function (callback) {\n        var directive, _i, _len, _results;\n\n        _results = [];\n\n        for (_i = 0, _len = this.length; _i < _len; _i++) {\n          directive = this[_i];\n\n          _results.push(callback(directive));\n        }\n\n        return _results;\n      };\n\n      DirectiveCollection.prototype.eachOfType = function (type, callback) {\n        var directive, _i, _len, _ref, _results;\n\n        if (this[type]) {\n          _ref = this[type];\n          _results = [];\n\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            directive = _ref[_i];\n\n            _results.push(callback(directive));\n          }\n\n          return _results;\n        }\n      };\n\n      DirectiveCollection.prototype.firstOfType = function (type) {\n        var _ref;\n\n        return (_ref = this[type]) != null ? _ref[0] : void 0;\n      };\n\n      DirectiveCollection.prototype.eachEditable = function (callback) {\n        return this.eachOfType('editable', callback);\n      };\n\n      DirectiveCollection.prototype.eachImage = function (callback) {\n        return this.eachOfType('image', callback);\n      };\n\n      DirectiveCollection.prototype.eachContainer = function (callback) {\n        return this.eachOfType('container', callback);\n      };\n\n      DirectiveCollection.prototype.eachHtml = function (callback) {\n        return this.eachOfType('html', callback);\n      };\n\n      DirectiveCollection.prototype.clone = function () {\n        var newCollection;\n        newCollection = new DirectiveCollection();\n        this.each(function (directive) {\n          return newCollection.add(directive.clone());\n        });\n        return newCollection;\n      };\n\n      DirectiveCollection.prototype.$getElem = function (name) {\n        return $(this.all[name].elem);\n      };\n\n      DirectiveCollection.prototype.assertAllLinked = function () {\n        this.each(function (directive) {\n          if (!directive.elem) {\n            return false;\n          }\n        });\n        return true;\n      };\n\n      DirectiveCollection.prototype.assertNameNotUsed = function (directive) {\n        return assert(directive && !this.all[directive.name], \"\" + directive.type + \" Template parsing error:\\n\" + config.directives[directive.type].renderedAttr + \"=\\\"\" + directive.name + \"\\\".\\n\\\"\" + directive.name + \"\\\" is a duplicate name.\");\n      };\n\n      return DirectiveCollection;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../modules/logging/assert\": 50,\n    \"./directive\": 69,\n    \"jquery\": \"jquery\"\n  }],\n  71: [function (require, module, exports) {\n    var Directive, assert, config, directiveFinder, _;\n\n    config = require('../configuration/config');\n    Directive = require('./directive');\n    directiveFinder = require('./directive_finder');\n    assert = require('../modules/logging/assert');\n    _ = require('underscore');\n\n    module.exports = function () {\n      return {\n        parse: function parse(elem) {\n          var directives, modifications, overwritesContent;\n          directives = [];\n          modifications = [];\n          overwritesContent = false;\n          this.eachDirective(elem, function (directive) {\n            if (directive.isModification()) {\n              return modifications.push(directive);\n            } else {\n              if (directive.overwritesContent()) {\n                assert(!overwritesContent, \"Incompatible directives declared on element (\" + directive.type + \" directive '\" + directive.name + \"')\");\n                overwritesContent = true;\n              }\n\n              return directives.push(directive);\n            }\n          });\n\n          if (directives.length) {\n            this.applyModifications(directives, modifications);\n          }\n\n          return directives;\n        },\n        eachDirective: function eachDirective(elem, func) {\n          var data, directive, directiveData, _i, _len, _results;\n\n          directiveData = [];\n          directiveFinder.eachDirective(elem, function (_this) {\n            return function (type, name, attributeName) {\n              return directiveData.push({\n                attributeName: attributeName,\n                directive: new Directive({\n                  name: name,\n                  type: type,\n                  elem: elem\n                })\n              });\n            };\n          }(this));\n          _results = [];\n\n          for (_i = 0, _len = directiveData.length; _i < _len; _i++) {\n            data = directiveData[_i];\n            directive = data.directive;\n            this.rewriteAttribute(directive, data.attributeName);\n\n            _results.push(func(directive));\n          }\n\n          return _results;\n        },\n        applyModifications: function applyModifications(directives, modifications) {\n          var directive, modification, _i, _len, _results;\n\n          _results = [];\n\n          for (_i = 0, _len = modifications.length; _i < _len; _i++) {\n            modification = modifications[_i];\n\n            if (modification.type === 'optional') {\n              _results.push(function () {\n                var _j, _len1, _results1;\n\n                _results1 = [];\n\n                for (_j = 0, _len1 = directives.length; _j < _len1; _j++) {\n                  directive = directives[_j];\n\n                  if (_.contains(modification.config.modifies, directive.type)) {\n                    _results1.push(directive.optional = true);\n                  } else {\n                    _results1.push(void 0);\n                  }\n                }\n\n                return _results1;\n              }());\n            } else {\n              _results.push(void 0);\n            }\n          }\n\n          return _results;\n        },\n        rewriteAttribute: function rewriteAttribute(directive, attributeName) {\n          if (directive.isModification()) {\n            return this.removeAttribute(directive, attributeName);\n          } else {\n            if (attributeName !== directive.renderedAttr()) {\n              return this.normalizeAttribute(directive, attributeName);\n            } else if (!directive.name) {\n              return this.normalizeAttribute(directive);\n            }\n          }\n        },\n        normalizeAttribute: function normalizeAttribute(directive, attributeName) {\n          var elem;\n          elem = directive.elem;\n\n          if (attributeName) {\n            this.removeAttribute(directive, attributeName);\n          }\n\n          return elem.setAttribute(directive.renderedAttr(), directive.name);\n        },\n        removeAttribute: function removeAttribute(directive, attributeName) {\n          return directive.elem.removeAttribute(attributeName);\n        }\n      };\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"../modules/logging/assert\": 50,\n    \"./directive\": 69,\n    \"./directive_finder\": 72,\n    \"underscore\": 10\n  }],\n  72: [function (require, module, exports) {\n    var config, directiveFinder;\n    config = require('../configuration/config');\n\n    module.exports = directiveFinder = function () {\n      var prefixes;\n      prefixes = /^(x-|data-)/;\n      return {\n        link: function link(elem, directiveCollection) {\n          return this.eachDirective(elem, function (type, name) {\n            var directive;\n            directive = directiveCollection.get(name);\n            return directive.elem = elem;\n          });\n        },\n        eachDirective: function eachDirective(elem, callback) {\n          var attr, attrName, normalizedName, type, _i, _len, _ref;\n\n          _ref = elem.attributes;\n\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            attr = _ref[_i];\n            attrName = attr.name;\n            normalizedName = attrName.replace(prefixes, '');\n\n            if (type = config.templateAttrLookup[normalizedName]) {\n              callback(type, attr.value, attrName);\n            }\n          }\n\n          return void 0;\n        }\n      };\n    }();\n  }, {\n    \"../configuration/config\": 26\n  }],\n  73: [function (require, module, exports) {\n    var DirectiveIterator, config, directiveFinder;\n    config = require('../configuration/config');\n    directiveFinder = require('./directive_finder');\n\n    module.exports = DirectiveIterator = function () {\n      function DirectiveIterator(root) {\n        this.root = this._next = root;\n      }\n\n      DirectiveIterator.prototype.current = null;\n\n      DirectiveIterator.prototype.next = function () {\n        var child, n, next;\n        n = this.current = this._next;\n        child = next = void 0;\n\n        if (this.current) {\n          child = n.firstChild;\n\n          if (child && n.nodeType === 1 && !this.skipChildren(n)) {\n            this._next = child;\n          } else {\n            next = null;\n\n            while (n !== this.root && !(next = n.nextSibling)) {\n              n = n.parentNode;\n            }\n\n            this._next = next;\n          }\n        }\n\n        return this.current;\n      };\n\n      DirectiveIterator.prototype.skipChildren = function (elem) {\n        var skipChildren;\n        skipChildren = false;\n        directiveFinder.eachDirective(elem, function (type, name) {\n          if (config.directives[type].overwritesContent) {\n            return skipChildren = true;\n          }\n        });\n        return skipChildren;\n      };\n\n      DirectiveIterator.prototype.nextElement = function () {\n        var skipChildren;\n\n        while (this.next()) {\n          skipChildren = false;\n\n          if (this.current.nodeType === 1) {\n            break;\n          }\n        }\n\n        return this.current;\n      };\n\n      DirectiveIterator.prototype.detach = function () {\n        return this.current = this.root = null;\n      };\n\n      return DirectiveIterator;\n    }();\n  }, {\n    \"../configuration/config\": 26,\n    \"./directive_finder\": 72\n  }],\n  74: [function (require, module, exports) {\n    var $, ComponentModel, ComponentView, DirectiveCollection, DirectiveIterator, Template, assert, config, directiveCompiler, directiveFinder, log, sortByName, words;\n    $ = require('jquery');\n    log = require('../modules/logging/log');\n    assert = require('../modules/logging/assert');\n    words = require('../modules/words');\n    config = require('../configuration/config');\n    DirectiveIterator = require('./directive_iterator');\n    DirectiveCollection = require('./directive_collection');\n    directiveCompiler = require('./directive_compiler');\n    directiveFinder = require('./directive_finder');\n    ComponentModel = require('../component_tree/component_model');\n    ComponentView = require('../rendering/component_view');\n\n    sortByName = function sortByName(a, b) {\n      if (a.name > b.name) {\n        return 1;\n      } else if (a.name < b.name) {\n        return -1;\n      } else {\n        return 0;\n      }\n    };\n\n    module.exports = Template = function () {\n      function Template(_arg) {\n        var html, label, properties, _ref;\n\n        _ref = _arg != null ? _arg : {}, this.name = _ref.name, html = _ref.html, label = _ref.label, properties = _ref.properties, this.allowedParents = _ref.allowedParents;\n        assert(html, 'Template: param html missing');\n        this.$template = $(this.pruneHtml(html)).wrap('<div>');\n        this.$wrap = this.$template.parent();\n        this.label = label || words.humanize(this.name);\n        this.styles = properties || {};\n        this.defaults = {};\n        this.parseTemplate();\n      }\n\n      Template.prototype.equals = function (other) {\n        return this.name === (other != null ? other.name : void 0);\n      };\n\n      Template.prototype.setDesign = function (design) {\n        this.design = design;\n        return this.identifier = \"\" + design.name + \".\" + this.name;\n      };\n\n      Template.prototype.createModel = function () {\n        return new ComponentModel({\n          template: this\n        });\n      };\n\n      Template.prototype.createView = function (componentModel, isReadOnly) {\n        var $elem, componentView, directives, _ref;\n\n        _ref = this.createViewHtml(), $elem = _ref.$elem, directives = _ref.directives;\n        componentModel || (componentModel = this.createModel());\n        return componentView = new ComponentView({\n          model: componentModel,\n          $html: $elem,\n          directives: directives,\n          isReadOnly: isReadOnly\n        });\n      };\n\n      Template.prototype.createViewHtml = function () {\n        var $elem, directives;\n        $elem = this.$template.clone();\n        directives = this.linkDirectives($elem[0]);\n        return {\n          $elem: $elem,\n          directives: directives\n        };\n      };\n\n      Template.prototype.pruneHtml = function (html) {\n        html = $(html).filter(function (index) {\n          return this.nodeType !== 8;\n        });\n        assert(html.length === 1, \"Templates must contain one root element. The Template \\\"\" + this.identifier + \"\\\" contains \" + html.length);\n        return html;\n      };\n\n      Template.prototype.parseTemplate = function () {\n        var elem;\n        elem = this.$template[0];\n        this.directives = this.compileDirectives(elem);\n        return this.directives.each(function (_this) {\n          return function (directive) {\n            switch (directive.type) {\n              case 'editable':\n                return _this.formatEditable(directive.name, directive.elem);\n\n              case 'container':\n                return _this.formatContainer(directive.name, directive.elem);\n\n              case 'html':\n                return _this.formatHtml(directive.name, directive.elem);\n\n              case 'embeditem':\n                // just doing the same for now\n                return _this.formatHtml(directive.name, directive.elem);\n            }\n          };\n        }(this));\n      };\n\n      Template.prototype.compileDirectives = function (elem) {\n        var directive, directives, foundDirectives, iterator, _i, _len;\n\n        iterator = new DirectiveIterator(elem);\n        directives = new DirectiveCollection();\n\n        while (elem = iterator.nextElement()) {\n          foundDirectives = directiveCompiler.parse(elem);\n\n          for (_i = 0, _len = foundDirectives.length; _i < _len; _i++) {\n            directive = foundDirectives[_i];\n            directives.add(directive);\n          }\n        }\n\n        return directives;\n      };\n\n      Template.prototype.linkDirectives = function (elem) {\n        var componentDirectives, iterator;\n        iterator = new DirectiveIterator(elem);\n        componentDirectives = this.directives.clone();\n\n        while (elem = iterator.nextElement()) {\n          directiveFinder.link(elem, componentDirectives);\n        }\n\n        return componentDirectives;\n      };\n\n      Template.prototype.formatEditable = function (name, elem) {\n        var $elem, defaultValue;\n        $elem = $(elem);\n        $elem.addClass(config.css.editable);\n        defaultValue = words.trim(elem.innerHTML);\n        this.defaults[name] = defaultValue ? defaultValue : '';\n        return elem.innerHTML = '';\n      };\n\n      Template.prototype.formatContainer = function (name, elem) {\n        return elem.innerHTML = '';\n      };\n\n      Template.prototype.formatHtml = function (name, elem) {\n        var defaultValue;\n        defaultValue = words.trim(elem.innerHTML);\n\n        if (defaultValue) {\n          this.defaults[name] = defaultValue;\n        }\n\n        return elem.innerHTML = '';\n      };\n\n      Template.prototype.info = function () {\n        var doc, name, style, _ref, _ref1;\n\n        doc = {\n          name: this.name,\n          design: (_ref = this.design) != null ? _ref.name : void 0,\n          directives: [],\n          properties: []\n        };\n        this.directives.each(function (_this) {\n          return function (directive) {\n            var name, type;\n            name = directive.name, type = directive.type;\n            return doc.directives.push({\n              name: name,\n              type: type\n            });\n          };\n        }(this));\n        _ref1 = this.styles;\n\n        for (name in _ref1) {\n          style = _ref1[name];\n          doc.properties.push({\n            name: name,\n            type: 'cssModificator'\n          });\n        }\n\n        doc.directives.sort(sortByName);\n        doc.properties.sort(sortByName);\n        return doc;\n      };\n\n      return Template;\n    }();\n\n    Template.parseIdentifier = function (identifier) {\n      var parts;\n\n      if (!identifier) {\n        return;\n      }\n\n      parts = identifier.split('.');\n\n      if (parts.length === 1) {\n        return {\n          designName: void 0,\n          name: parts[0]\n        };\n      } else if (parts.length === 2) {\n        return {\n          designName: parts[0],\n          name: parts[1]\n        };\n      } else {\n        return log.error(\"could not parse component template identifier: \" + identifier);\n      }\n    };\n  }, {\n    \"../component_tree/component_model\": 17,\n    \"../configuration/config\": 26,\n    \"../modules/logging/assert\": 50,\n    \"../modules/logging/log\": 51,\n    \"../modules/words\": 55,\n    \"../rendering/component_view\": 56,\n    \"./directive_collection\": 70,\n    \"./directive_compiler\": 71,\n    \"./directive_finder\": 72,\n    \"./directive_iterator\": 73,\n    \"jquery\": \"jquery\"\n  }],\n  75: [function (require, module, exports) {\n    module.exports = {\n      \"version\": \"0.12.1\",\n      \"revision\": \"f9843a4\"\n    };\n  }, {}],\n  \"jquery\": [function (require, module, exports) {\n    module.exports = $;\n  }, {}]\n}, {}, [12]);\n\n//# sourceURL=webpack:///./src/livingdocs/livingdocs-engine.js?");

/***/ }),

/***/ "./src/modules/lf-attr-editor.js":
/*!***************************************!*\
  !*** ./src/modules/lf-attr-editor.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/LivingDocState */ \"./src/lib/LivingDocState.js\");\n\n\nvar PROPS_HOLDER = 'livingdocs_EditorField_Toolbar_options';\njquery__WEBPACK_IMPORTED_MODULE_0__(document).on('livingfrontend.updateLivingDoc', function (e, livingdoc) {\n  _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__[\"default\"].livingdoc.interactiveView.page.focus.componentFocus.add(function (component) {\n    var componentAttrs = component.model.getData('data_attributes');\n    var options = jquery__WEBPACK_IMPORTED_MODULE_0__('.' + PROPS_HOLDER);\n\n    if (componentAttrs) {\n      options.append(\"<h4>Attributes</h4>\");\n\n      var changeAttribute = function changeAttribute(componentName, name) {\n        return function () {\n          componentAttrs[componentName][name] = jquery__WEBPACK_IMPORTED_MODULE_0__(this).val();\n\n          if (component.model.componentTree) {\n            component.model.componentTree.contentChanging(component.model);\n          }\n        };\n      };\n\n      for (var componentName in componentAttrs) {\n        var itemAttrs = componentAttrs[componentName];\n\n        if (!itemAttrs) {\n          continue;\n        }\n\n        options.append('<h5>' + componentName + '</h5>');\n\n        for (var key in itemAttrs) {\n          var attrInput = null;\n          var attrlbl = jquery__WEBPACK_IMPORTED_MODULE_0__('<label>').text(key);\n          attrInput = jquery__WEBPACK_IMPORTED_MODULE_0__(\"<input>\").attr({\n            type: 'text'\n          }).val(itemAttrs[key]);\n          attrInput.on(\"change\", changeAttribute(componentName, key));\n          attrlbl.append(attrInput);\n          options.append(attrlbl);\n        }\n      }\n    }\n\n    var newAttr = jquery__WEBPACK_IMPORTED_MODULE_0__('<button class=\"alert\">New Attr</button>').prependTo(options.find('.component-actions'));\n    newAttr.click(function (e) {\n      var names = [];\n\n      for (var name in component.model.directives.all) {\n        names.push(name);\n      }\n\n      for (var name in component.model.containers) {\n        names.push(name);\n      }\n\n      if (names.length === 0) {\n        return;\n      }\n\n      var dialog = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__[\"default\"].showDialog();\n      var directiveSelect = jquery__WEBPACK_IMPORTED_MODULE_0__('<select>');\n\n      for (var i = 0; i < names.length; i++) {\n        jquery__WEBPACK_IMPORTED_MODULE_0__('<option>').text(names[i]).appendTo(directiveSelect);\n      }\n\n      dialog.append('<label>Add attribute to directive:</label>');\n      dialog.append(directiveSelect);\n      dialog.append('<label>Add attribute named:</label>');\n      dialog.append('<input name=\"attr_name\">');\n      dialog.append('<label>Attribute value</label>');\n      dialog.append('<input name=\"attr_value\">');\n      dialog.append('<br/>');\n      var action = jquery__WEBPACK_IMPORTED_MODULE_0__('<button>OK</button>').appendTo(dialog);\n      action.click(function (e) {\n        var todirective = directiveSelect.val();\n        var attr = dialog.find('input[name=attr_name]').val();\n        var value = dialog.find('input[name=attr_value]').val();\n\n        if (todirective && todirective.length && attr && attr.length > 0) {\n          component.model.setDirectiveAttribute(todirective, attr, value);\n\n          if (component.model.componentTree) {\n            component.model.componentTree.contentChanging(component.model);\n          }\n        }\n\n        _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__[\"default\"].closeDialog();\n      });\n    });\n  });\n});\n\n//# sourceURL=webpack:///./src/modules/lf-attr-editor.js?");

/***/ }),

/***/ "./src/modules/lf-editing-history.js":
/*!*******************************************!*\
  !*** ./src/modules/lf-editing-history.js ***!
  \*******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/LivingDocState */ \"./src/lib/LivingDocState.js\");\n\n\njquery__WEBPACK_IMPORTED_MODULE_0__(document).on('livingfrontend.updateLivingDoc', function (e, livingdoc) {\n  var $pageOptions = jquery__WEBPACK_IMPORTED_MODULE_0__('.livingdocs-page-options');\n  var $history = jquery__WEBPACK_IMPORTED_MODULE_0__('<div class=\"livingdocs-page-history\">');\n  var $toggle = jquery__WEBPACK_IMPORTED_MODULE_0__('<a href=\"#\">History</a>');\n  $history.append($toggle);\n  var $historyList = jquery__WEBPACK_IMPORTED_MODULE_0__('<div class=\"livingdocs-history-list\" style=\"display: none\">');\n  $history.append($historyList);\n  $pageOptions.append($history);\n  $history.click(function (e) {\n    e.preventDefault();\n    $historyList.toggle();\n    return false;\n  });\n\n  var drawHistory = function drawHistory() {\n    $historyList.empty();\n\n    for (var i = 0; i < _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__[\"default\"].changeStack.length; i++) {\n      var $entry = jquery__WEBPACK_IMPORTED_MODULE_0__('<div class=\"livingdocs-history-entry\">');\n      var str = _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__[\"default\"].changeStack[i].time.toLocaleTimeString();\n      $entry.append(str + \" - \");\n      var $restore = jquery__WEBPACK_IMPORTED_MODULE_0__('<a href=\"#\" data-index=\"' + i + '\">Restore</a>');\n      $restore.click(function (e) {\n        e.preventDefault();\n        _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loadState(jquery__WEBPACK_IMPORTED_MODULE_0__(this).attr('data-index'));\n        return false;\n      });\n      $entry.append($restore);\n      $historyList.prepend($entry);\n    }\n  };\n\n  _lib_LivingDocState__WEBPACK_IMPORTED_MODULE_1__[\"default\"].livingdoc.model.changed.add(function () {\n    drawHistory();\n  });\n});\n\n//# sourceURL=webpack:///./src/modules/lf-editing-history.js?");

/***/ }),

/***/ "./src/modules/lf-editor-content-bridge.js":
/*!*************************************************!*\
  !*** ./src/modules/lf-editor-content-bridge.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar MEDIA_URL = 'FrontendInsertDialog/MediaForm';\nvar IMAGE_URL = 'FrontendInsertDialog/ImageForm';\nvar LINK_URL = 'FrontendInsertDialog/LinkForm';\nvar ContentBridge = {\n  callback: null,\n  focusedComponent: null,\n  currentLink: '',\n  currentContent: '',\n  dialogFrame: null,\n  closer: null,\n  linkDialogFrame: null,\n  mediaDialogFrame: null,\n  dialogDiv: null,\n  livingdoc: null,\n  setLivingDoc: function setLivingDoc(doc) {\n    this.livingdoc = doc;\n  },\n  getLivingDoc: function getLivingDoc() {\n    return this.livingdoc;\n  },\n  setCallback: function setCallback(callback) {\n    this.callback = callback;\n    this.currentLink = null;\n    this.currentContent = '';\n  },\n  setLinkObject: function setLinkObject(obj) {\n    this.currentLink = obj;\n    this.callback.call(this, obj);\n  },\n  setContent: function setContent(content) {\n    this.callback(content);\n  },\n  init: function init() {\n    this.linkDialogFrame = this.createFrame();\n    this.mediaDialogFrame = this.createFrame();\n    this.closer = jquery__WEBPACK_IMPORTED_MODULE_0__('<a href=\"#\" class=\"dialog-close\">X</a>');\n    this.closer.click(function (e) {\n      e.preventDefault();\n      ContentBridge.closeDialog();\n      return false;\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0__('body').append(this.closer);\n    this.linkDialogFrame.attr({\n      'src': LINK_URL\n    });\n    this.mediaDialogFrame.attr({\n      'src': MEDIA_URL\n    });\n  },\n  createFrame: function createFrame() {\n    var frame = jquery__WEBPACK_IMPORTED_MODULE_0__('<iframe src=\"about:\">');\n    frame.attr({\n      'class': \"living-dialog\"\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0__('body').append(frame);\n    return frame;\n  },\n  showDialog: function showDialog(type) {\n    // we may show a different dialog for images in future\n    switch (type) {\n      case 'media':\n        {\n          this.mediaDialogFrame.show();\n          break;\n        }\n\n      case 'image':\n        {\n          this.mediaDialogFrame.show();\n          break;\n        }\n\n      case 'link':\n        {\n          this.linkDialogFrame.show();\n          break;\n        }\n    }\n\n    if (type == 'media') {} else {}\n\n    this.closer.show();\n  },\n  showTestDialog: function showTestDialog(link) {\n    var _this = this;\n\n    _this.dialogDiv.html('<input type=\"button\" value=\"clickit\" id=\"clicker\" />');\n\n    _this.dialogDiv.show();\n\n    return;\n    jquery__WEBPACK_IMPORTED_MODULE_0__[\"get\"](link).done(function (html) {\n      _this.dialogDiv.html(html);\n\n      _this.dialogDiv.show();\n    });\n  },\n  closeDialog: function closeDialog() {\n    this.mediaDialogFrame.hide();\n    this.linkDialogFrame.hide();\n    this.closer.hide();\n    this.linkDialogFrame.attr({\n      'src': 'about:'\n    });\n    this.mediaDialogFrame.attr({\n      'src': 'about:'\n    });\n    this.linkDialogFrame.attr({\n      'src': LINK_URL\n    });\n    this.mediaDialogFrame.attr({\n      'src': MEDIA_URL\n    });\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ContentBridge);\n\n//# sourceURL=webpack:///./src/modules/lf-editor-content-bridge.js?");

/***/ }),

/***/ "./src/modules/lf-embed-selection.js":
/*!*******************************************!*\
  !*** ./src/modules/lf-embed-selection.js ***!
  \*******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar PROPS_HOLDER = 'livingdocs_EditorField_Toolbar_options';\nvar embeds = JSON.parse(jquery__WEBPACK_IMPORTED_MODULE_0__('input[name=Embeds]').val());\nvar EMBED_LINK = jquery__WEBPACK_IMPORTED_MODULE_0__('input[name=EmbedLink]').val();\njquery__WEBPACK_IMPORTED_MODULE_0__(document).on('livingfrontend.updateLivingDoc', function (e, livingdoc) {\n  livingdoc.interactiveView.page.focus.componentFocus.add(function (component) {\n    if (component.model.directives.embeditem && component.model.directives.embeditem.length) {\n      for (var index in component.model.directives.embeditem) {\n        var _thisItem = component.model.directives.embeditem[index];\n        var currentValue = component.model.get(_thisItem.name);\n        currentValue = currentValue || {\n          source: '',\n          attrs: '',\n          content: null\n        };\n        var attrInput = null;\n        var attrlbl = jquery__WEBPACK_IMPORTED_MODULE_0__('<label>').text(_thisItem.name + ' source');\n\n        if (embeds) {\n          attrInput = jquery__WEBPACK_IMPORTED_MODULE_0__('<select class=\"with-button\">');\n          attrInput.append('<option>-- select item --</option>');\n\n          for (var label in embeds) {\n            var opt = jquery__WEBPACK_IMPORTED_MODULE_0__('<option>').appendTo(attrInput);\n            opt.attr('value', label).text(label);\n          }\n        } else {\n          attrInput = jquery__WEBPACK_IMPORTED_MODULE_0__(\"<input>\").attr({\n            type: 'text',\n            placeholder: 'Source string'\n          });\n        }\n\n        if (attrInput) {\n          attrInput.val(currentValue.source);\n        }\n\n        var attrButton = jquery__WEBPACK_IMPORTED_MODULE_0__('<button>✔</button>');\n        attrButton.on(\"click\", function () {\n          var selected = attrInput.val();\n\n          if (selected) {\n            var componentAttrs = component.model.getData('data_attributes');\n            var attrStr = '';\n\n            if (componentAttrs) {\n              componentAttrs = componentAttrs[_thisItem.name];\n\n              if (componentAttrs) {\n                attrStr = JSON.stringify(componentAttrs);\n              }\n            }\n\n            jquery__WEBPACK_IMPORTED_MODULE_0__[\"get\"](EMBED_LINK, {\n              embed: selected,\n              attrs: attrStr\n            }).success(function (data) {\n              component.model.setContent(_thisItem.name, {\n                attrs: attrStr,\n                source: selected,\n                content: data\n              });\n            });\n          } else {\n            component.model.setContent(_thisItem.name, {\n              source: '',\n              attrs: '',\n              content: ''\n            });\n          }\n        });\n        attrlbl.append(attrInput).append(attrButton);\n        jquery__WEBPACK_IMPORTED_MODULE_0__('.' + PROPS_HOLDER).append(attrlbl);\n      }\n    }\n  });\n});\n\n//# sourceURL=webpack:///./src/modules/lf-embed-selection.js?");

/***/ }),

/***/ "./src/modules/lf-html-editing.js":
/*!****************************************!*\
  !*** ./src/modules/lf-html-editing.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0__(document).on('livingfrontend.updateLivingDoc', function (e, livingdoc) {\n  // HTML directive handling\n  livingdoc.interactiveView.page.htmlElementClick.add(function (component, directiveName, event) {\n    var isEditing = component.$html.attr('data-is-editing');\n    component.$html.addClass('js-editor-block');\n\n    if (isEditing) {\n      return;\n    }\n\n    component.$html.attr('data-is-editing', 1);\n    var currentContent = component.model.getData(directiveName + '-raw');\n    var $edBlock = jquery__WEBPACK_IMPORTED_MODULE_0__('<div>').css({\n      'width': '100%',\n      'position': 'absolute',\n      'top': 0,\n      'right': 0,\n      'bottom': '20px',\n      'left': 0\n    });\n    var aceeditor = null;\n    var $actions = jquery__WEBPACK_IMPORTED_MODULE_0__('<div>');\n    var $save = jquery__WEBPACK_IMPORTED_MODULE_0__('<button>OK</button>');\n    var $cancel = jquery__WEBPACK_IMPORTED_MODULE_0__('<button>Cancel</button>');\n    $actions.css({\n      position: 'absolute',\n      'bottom': 0\n    }).append($save).append($cancel);\n    $edBlock.text(currentContent);\n    component.$html.html($edBlock);\n    component.$html.append($actions);\n    $edBlock.focus();\n    var aceeditor = ace.edit($edBlock[0]);\n    aceeditor.session.setMode('ace/mode/html');\n\n    if (component.$html.hasClass('js-living-markdown')) {\n      aceeditor.session.setMode('ace/mode/markdown');\n    }\n\n    var cleanUp = function cleanUp() {\n      if (aceeditor) {\n        aceeditor.destroy();\n      }\n\n      $edBlock.remove();\n      component.$html.removeAttr('data-is-editing');\n      component.$html.removeClass('js-editor-block');\n    };\n\n    $cancel.click(function () {\n      component.$html.html(component.model.get(directiveName));\n      cleanUp();\n    });\n\n    var saveEditorBlock = function saveEditorBlock() {\n      var newContent = $edBlock.html();\n\n      if (aceeditor) {\n        newContent = aceeditor.getValue();\n      } // insert some markers for real &gt; and &lt;\n\n\n      newContent = newContent.replace(/&gt;/g, '__RAW_GT_TAG').replace(/&lt;/g, '__RAW_LT_TAG');\n      var catcher = jquery__WEBPACK_IMPORTED_MODULE_0__('<div>');\n      catcher.append(newContent);\n      catcher.find('script').remove().find('textarea').remove();\n      var rawContent = catcher.html();\n      rawContent = rawContent.replace(/&gt;/g, '>').replace(/&lt;/g, '<').replace(/__RAW_GT_TAG/g, '&gt;').replace(/__RAW_LT_TAG/g, '&lt;');\n      component.model.setData(directiveName + '-raw', rawContent);\n\n      if (component.$html.hasClass('js-living-markdown')) {\n        // parse it first\n        var converter = new showdown.Converter();\n        rawContent = converter.makeHtml(rawContent);\n      } // highlight code blocks\n\n\n      catcher.html(rawContent);\n      catcher.find('pre > code').each(function (i, block) {\n        hljs.highlightBlock(block);\n      });\n      rawContent = catcher.html();\n\n      if (!component.model.setContent(directiveName, rawContent)) {\n        // we need to force this as the content set by rawContent may not\n        // be different and trigger the HTML update\n        if (component.model.componentTree) {\n          component.model.componentTree.contentChanging(component.model, directiveName);\n        }\n      }\n\n      cleanUp();\n    };\n\n    aceeditor.on('blur', saveEditorBlock);\n    $save.click(saveEditorBlock);\n  });\n});\n\n//# sourceURL=webpack:///./src/modules/lf-html-editing.js?");

/***/ }),

/***/ "./src/modules/lf-iframed-dialog.js":
/*!******************************************!*\
  !*** ./src/modules/lf-iframed-dialog.js ***!
  \******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar windowParent = window.parent; //    var windowParent = window;\n// prevent deselection of the source page's highlight\n\njquery__WEBPACK_IMPORTED_MODULE_0__(document).on('mousedown', function (e) {//        e.preventDefault();\n});\nvar element = {\n  getEditor: function getEditor() {\n    return editorProxy;\n  }\n  /**\n   * Represents a fake tinymce editor. \n   */\n\n};\nvar editorProxy = {\n  onopen: function onopen() {\n    console.log(\"editorProxy.onopen\");\n  },\n  getContent: function getContent() {\n    var doc = windowParent.ContentBridge.getLivingDoc();\n\n    if (doc) {\n      return doc.toHtml();\n    }\n\n    return '';\n  },\n  getSelectedNode: function getSelectedNode() {\n    console.log(\"editorProxy.getselectednode\");\n    return \"<div>\";\n  },\n  getSelection: function getSelection() {\n    console.log(\"editorProxy.getSelection\");\n    return jquery__WEBPACK_IMPORTED_MODULE_0__(\"<div>\");\n  },\n  createBookmark: function createBookmark() {\n    console.log(\"editorProxy.createBookmark\");\n    return null;\n  },\n  blur: function blur() {\n    console.log(\"editorProxy.blur\");\n  },\n  onclose: function onclose() {\n    console.log(\"editorProxy.onclose\");\n  },\n  moveToBookmark: function moveToBookmark() {\n    console.log(\"editorProxy.moveToBookmark\");\n  },\n  replaceContent: function replaceContent(HTML) {\n    console.log(\"editorProxy.replaceContent\");\n\n    if (windowParent && windowParent.ContentBridge) {\n      windowParent.ContentBridge.setContent(HTML);\n    }\n\n    return false;\n  },\n  repaint: function repaint() {\n    console.log(\"editorProxy.repaint\");\n  },\n  insertContent: function insertContent(content) {\n    if (windowParent && windowParent.ContentBridge) {\n      windowParent.ContentBridge.setContent(content);\n    }\n\n    return false;\n  },\n  addUndo: function addUndo() {\n    console.log(\"editorProxy.addUndo\");\n  },\n  insertLink: function insertLink(link) {\n    if (windowParent && windowParent.ContentBridge) {\n      windowParent.ContentBridge.setLinkObject(link);\n    }\n  }\n};\njquery__WEBPACK_IMPORTED_MODULE_0__[\"entwine\"](\"ss\", function ($) {\n  $(\"form.htmleditorfield-form\").entwine({\n    close: function close() {\n      windowParent.ContentBridge.closeDialog();\n    },\n    getEditor: function getEditor() {\n      console.log('form.htmleditorfield-form getEditor');\n      return editorProxy;\n    }\n  });\n  $(\"form.htmleditorfield-form button\").entwine({\n    onadd: function onadd() {\n      this.button().addClass(\"ss-ui-button\");\n    }\n  });\n  $(\"form.htmleditorfield-linkform button[name=action_remove]\").entwine({\n    onclick: function onclick(e) {\n      e.preventDefault();\n      this.parents(\"form:first\").removeLink();\n    }\n  });\n  $(\".htmleditorfield-dialog\").entwine({\n    onadd: function onadd() {\n      this.getForm().setElement(element);\n      this.trigger(\"ssdialogopen\");\n\n      this._super();\n    },\n    getEditor: function getEditor() {\n      return editorProxy;\n    },\n    close: function close() {\n      windowParent.ContentBridge.closeDialog();\n    }\n  });\n});\n\n//# sourceURL=webpack:///./src/modules/lf-iframed-dialog.js?");

/***/ }),

/***/ "./src/modules/lf-links-buttons.js":
/*!*****************************************!*\
  !*** ./src/modules/lf-links-buttons.js ***!
  \*****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0__(document).on('livingfrontend.updateContentButtonBar', function (e, bar, selection, ContentBridge) {\n  var selectLink = function selectLink(callback) {\n    ContentBridge.setCallback(callback);\n    ContentBridge.showDialog('link');\n  };\n\n  var addLink = {\n    label: 'Link',\n    click: function click() {\n      selection.save(); // prevents range saving from being cleared on focus lost. @see editable.js pastingAttribute\n\n      selection.host.setAttribute('data-editable-is-pasting', true);\n      selectLink(function (linkObj) {\n        selection.restore();\n        selection.setVisibleSelection();\n        selection.link(linkObj.href, {\n          target: linkObj.target,\n          title: linkObj.title\n        });\n        selection.host.setAttribute('data-editable-is-pasting', false);\n        selection.triggerChange();\n      });\n    }\n  };\n  var addAnchor = {\n    label: 'Anchor',\n    title: 'Insert Named Anchor',\n    click: function click() {\n      var anchorName = prompt(\"Anchor name\");\n      var s = selection.createElement('a');\n      jquery__WEBPACK_IMPORTED_MODULE_0__(s).attr('name', anchorName);\n      selection.toggle(s);\n      selection.triggerChange();\n    }\n  };\n  bar.unshift(addAnchor);\n  bar.unshift(addLink);\n});\n\n//# sourceURL=webpack:///./src/modules/lf-links-buttons.js?");

/***/ }),

/***/ "./src/modules/lf-paste-image.js":
/*!***************************************!*\
  !*** ./src/modules/lf-paste-image.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar UPLOAD_ENDPOINT = '';\nvar MAX_PASTE_SIZE = 500000;\nvar PASTING = false;\nvar TOOLBAR_FORM = '#Form_LivingForm';\njquery__WEBPACK_IMPORTED_MODULE_0__(function () {\n  var endpointUrl = jquery__WEBPACK_IMPORTED_MODULE_0__(TOOLBAR_FORM).attr('action');\n\n  if (endpointUrl.length > 0) {\n    UPLOAD_ENDPOINT = endpointUrl.substring(0, endpointUrl.lastIndexOf('/')) + '/pastefile';\n  }\n});\njquery__WEBPACK_IMPORTED_MODULE_0__(document).on('paste.editable', function (event) {\n  var imageType = /image.*/; // LivingFrontendHelper.activeComponent.model.parentContainer.insertAfter\n\n  var clipboardData;\n\n  if (PASTING) {\n    return;\n  }\n\n  if (event.clipboardData) {\n    clipboardData = event.clipboardData;\n  }\n\n  if (event.originalEvent && event.originalEvent.clipboardData) {\n    clipboardData = event.originalEvent.clipboardData; // https://codepen.io/netsi1964/pen/IoJbg\n  }\n\n  for (var i = 0; i < clipboardData.types.length; i++) {\n    if (clipboardData.types[i].match(imageType) || clipboardData.items[i].type.match(imageType)) {\n      var file = clipboardData.items[i].getAsFile();\n\n      if (!file) {\n        file = clipboardData.items[i].getAsString(function (s) {\n          console.log(s);\n        });\n        alert(\"Could not convert clipboard data to file, please try a smaller image\");\n        continue;\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = function (evt) {\n        if (evt.target.result && evt.target.result.length > 0 && evt.target.result.length < MAX_PASTE_SIZE) {\n          // declared here, otherwise the paste action can change the focused element before the post responds\n          var selectedComponent = LivingFrontendHelper.activeComponent;\n          var secId = jquery__WEBPACK_IMPORTED_MODULE_0__(TOOLBAR_FORM).find('[name=SecurityID]').val();\n          PASTING = true;\n          var updateModel = null;\n          var updateDirective = null;\n\n          if (!selectedComponent) {\n            return;\n          }\n\n          var srcTemplate = ContentBridge.livingdoc.design.defaultImage; // figure out the item we're updating; do we have a selected image, or are we creating\n          // a new one from the default template?\n\n          if (selectedComponent.model.directives.image && selectedComponent.model.directives.image.length > 0) {\n            srcTemplate = selectedComponent.template; //.directives.image[0];\n          } // need to create a new one; this may be inside the container, _or_ as\n          // a sibling to the current item\n\n\n          var newComponent = srcTemplate.createModel();\n\n          if (!srcTemplate.directives.image || srcTemplate.directives.image.length === 0) {\n            // can't paste into an empty block!\n            console.log(\"No place to paste\");\n          }\n\n          var newView = selectedComponent;\n\n          if (selectedComponent.directives.container && selectedComponent.directives.container.length > 0) {\n            var containerName = selectedComponent.directives.container[0].name;\n            selectedComponent.model.containers[containerName].append(newComponent);\n          } else {\n            selectedComponent.model.after(newComponent);\n            newView = selectedComponent.next();\n          }\n\n          newView.focus();\n          updateModel = newComponent;\n          updateDirective = updateModel.directives.image[0].name;\n          updateModel.setContent(updateDirective, {\n            url: 'frontend-livingdoc/javascript/lf-paste-loading.png'\n          });\n          jquery__WEBPACK_IMPORTED_MODULE_0__[\"post\"](UPLOAD_ENDPOINT, {\n            SecurityID: secId,\n            rawData: evt.target.result\n          }).then(function (res) {\n            PASTING = false;\n\n            if (res && res.success) {\n              updateModel.setContent(updateDirective, {\n                url: res.url\n              });\n            }\n          }).done(function (done) {\n            PASTING = false;\n          });\n        }\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n});\n\n//# sourceURL=webpack:///./src/modules/lf-paste-image.js?");

/***/ }),

/***/ "./src/modules/lf-text-actions.js":
/*!****************************************!*\
  !*** ./src/modules/lf-text-actions.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0__(document).on('livingfrontend.updateLivingDoc', function (e, livingdoc) {\n  // text formatting options\n  // @TODO - provide more in-paragraph options\n  //  - sup/sub\n  //  - strike\n  //  - text-alignment (an option maybe?) \n  livingdoc.interactiveView.page.editableController.selection.add(function (view, editableName, selection) {\n    if (selection && selection.isSelection) {\n      var rect = selection.getCoordinates();\n      var barOptions = [{\n        label: '<strong>B</strong>',\n        title: 'Bold',\n        click: function click() {\n          selection.toggleBold();\n          selection.triggerChange();\n        }\n      }, {\n        label: '<em>I</em>',\n        title: 'Italics',\n        click: function click() {\n          selection.toggleEmphasis();\n          selection.triggerChange();\n        }\n      }, {\n        label: '<sub>s</sub>',\n        title: 'Subscript',\n        click: function click() {\n          var s = selection.createElement('sub');\n          selection.toggle(s);\n          selection.triggerChange();\n        }\n      }, {\n        label: '<sup>s</sup>',\n        title: 'Superscript',\n        click: function click() {\n          var s = selection.createElement('sup');\n          selection.toggle(s);\n          selection.triggerChange();\n        }\n      }, {\n        label: 'Clear',\n        click: function click() {\n          selection.removeFormatting();\n        }\n      }];\n      jquery__WEBPACK_IMPORTED_MODULE_0__(document).trigger('livingfrontend.updateContentButtonBar', [barOptions, selection, ContentBridge]);\n      LivingFrontendHelper.showButtonBar(barOptions, rect);\n    }\n  });\n});\n\n//# sourceURL=webpack:///./src/modules/lf-text-actions.js?");

/***/ }),

/***/ "./style/index.scss":
/*!**************************!*\
  !*** ./style/index.scss ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./style/index.scss?");

/***/ }),

/***/ 0:
/*!***********************************************!*\
  !*** multi ./src/index.js ./style/index.scss ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./src/index.js */\"./src/index.js\");\nmodule.exports = __webpack_require__(/*! ./style/index.scss */\"./style/index.scss\");\n\n\n//# sourceURL=webpack:///multi_./src/index.js_./style/index.scss?");

/***/ })

/******/ });